INTSourceChangelist:3072718
Availability:Public
Title:Samsung Gear VR のデバッグ方法
Description:Gear VR ヘッドセット用アプリケーションのデバッグ方法
Navigation:platform
Crumbs:%ROOT%, Platforms, Platforms/GearVR
Platform:Gear VR
Related:Platforms/Mobile/Performance
Related:Engine/Performance
Related:Engine/Performance/StatCommands
Related:Platforms/Mobile/Textures
Related:Platforms/Mobile/Materials
Related:Engine/Rendering/Materials/MaterialProperties/BlendModes
Related:Engine/Rendering/Materials/CustomizedUVs
SkillLevel:Intermediate
Version:4.9
type:overview
parent:Platforms/GearVR
tags:VR
tags:GearVR

[TOC(start:2 end:3)]

パフォーマンス問題およびプロジェクトを破損する恐れのあるエラーの発生を発見するためには、ターゲット デバイス上でプロジェクトをデバッグ処理できる能力が必須です。 
以下のセクションでは、 Gear VR プロジェクトのデバッグ支援用に使用できるツールおよびその使い方を説明します。

### Gear VR Developer モードを有効にする
Gear VR Headset を使わずに Gear VR プロジェクトを表示できれば、アンリアルのコンソールなどへ早く簡単なアクセスが可能となり、問題のデバッグ時間の大幅な短縮が実現できます。 
次のセクションでは、Gear VR Headset を使わずに Gear VR プロジェクトが見えるような設定方法について説明します。 

[region:note]
この設定を行う前に、デバイス認証がされているスマートフォンに何かしらのタイプの Gear VR アプリケーションがインストールされていることを確認しておく必要があります。 
ダウンロードしたものでもコンパイルしたものでも、どんな種類のアプリケーションでも可能です。
[/region]

1. まず、Samsung Galaxy Note 4 スマートフォンで **[Settings (設定)]** > **[Application Manager]** > **[Gear VR Service]** を開きます。

	[REGION:lightbox]
	[![](T_GearVR_Dev_Mode_01.png)(w:600 h:355)](T_GearVR_Dev_Mode_01.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. 次に、**[Manage Storage]** オプションをタップします。
  
	[REGION:lightbox]
	[![](T_GearVR_Dev_Mode_02.png)(w:250 h:444)](T_GearVR_Dev_Mode_02.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. 次に **[VR Service Version (VR サービス版)]** を **6** 回タップします。

	[REGION:lightbox]
	[![](T_GearVR_Dev_Mode_03.png)(w:250 h:225)](T_GearVR_Dev_Mode_03.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. スキャン処理が始まります。完了すると画面上に **Developer Mode** への切り替えが表示されます。

	[REGION:lightbox]
	[![](T_GearVR_Dev_Mode_04.png)(w:250 h:225)](T_GearVR_Dev_Mode_04.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. Gear VR プロジェクトの起動できる状態になりました。Gear VR Headset がなくても表示されています。

	[region:tip]
	VR Developer モードを有効にすると、使用してない間は Gear VR Headset をオフにする設定にオーバーライドするのでスマートフォンの充電が一気に消費されます。ご注意ください。
	[/region]

1. 何らかの理由で VR Developer モードを無効にする必要がある場合は、 **Developer Mode** スライダーを **[On]** から **[Off]** にスライドすると VR Developer モードが無効になります。

### UE4 コンソールを有効にする
UE4 コンソールは、UE4 で現在表示されているデータを見たり、ケースによっては影響を与える、UE4 コンソールは非常にパワフルなツールです。 
モバイル デバイス上で UE4 コンソールにアクセスする場合は、PC からアクセスする方法と若干異なります。以下が手順です。

[region:tip]
PC とアンリアルではコンソールに使用できるすべてのコンソール コマンドがリストされますが、 **DumpConsoleCommands** をコンソールに入力すると使用できるコンソール コマンドの一覧を出すことができます。
[/region]

1. まず最初に、スマートフォンの Gear VR Developer モードが有効になっていることを確認してください。 
	有効にすると、Gear VR Headset を使用せずにプロジェクトを起動して見ることができます。Gear VR Headset を使用している場合は、スマートフォンの画面に触らずに済みます。

	[REGION:lightbox]
	[![](T_GearVR_Dev_Mode_04.png)(w:250 h:225)](T_GearVR_Dev_Mode_04.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. 次にプロジェクトのアイコンをタップして Gear VR プロジェクトを起動します。 
	プロジェクトが起動すると、スマートフォン上はこのようになります。

	[REGION:lightbox]
	[![](T_App_On_Phone.png)(w:500 h:281)](T_App_On_Phone.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. Gear VR プロジェクトが起動している間に、スマートフォンの画面を **4 本** の指で 1 回タップして、アンリアル エンジン コンソールを開きます。 
	正しく操作できていれば、スマートフォン上はこのようになります。 

	[REGION:lightbox]
	[![](T_GearR_Open_Console.png)(w:500 h:281)](T_GearR_Open_Console.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. 入力ボックスで使いたいコンソール コマンドを入力し、 **[Ok]** ボタンを押します。 
	この例では、 **Stat Memory** コマンドを使ってプロジェクトのメモリ使用量を確認します。 

	[REGION:lightbox]
	[![](T_GearR_Input_Command.png)(w:500 h:281)](T_GearR_Input_Command.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. **[Ok]** ボタンが押されると、プロジェクトにはメモリの消費量と詳細が表示されます。

	[REGION:lightbox]
	[![](T_GearR_Displaying_Memory.png)(w:500 h:281)](T_GearR_Displaying_Memory.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. デバッグ中、あるいはデバッグ情報の画面をクリアしたい場合は、**「Stat None」** と入力するとデバッグ情報画面をすべてクリアすることができます。

	[region:tip]
	Gear VR Headset を使ったコンソール デバッグには、Bluetooth キーボードを使うのがベストな選択肢です。この方法だと、ヘッドセットからスマートフォンを取り外さずにコンソールを使用できます。
	[/region]

### Gear VR のデバッグ ログを表示する
いかなる 3D プロジェクトを開発する場合も、デバッグ ログを表示できることは非常に重要です。 
デバッグ ログには生きた情報がふくまれるので、プロジェクトが動かない原因について調査することができますし、修正方法を提案できるケースもあります。 
スマートフォンからデバッグ ログを出す方法を次のセクションで見ていきましょう。

[region:note]
Android の公式文書に [Logcat](http://developer.android.com/tools/help/logcat.html) を使った様々な操作の詳細が記載されています。ご確認ください。
[/region]

1. まず最初に、デバッグ情報を取得したいアプリケーションが入っているスマートフォンが USB で PC に接続されていることを確認してください。

1. 次に、**Windows Key + R** を押して Windows Command Shell を開いてから、**Run** ダイアログ ボックスに **「CMD」** を入力します。
	キーボードの **Enter** キーを押すか、マウスで **[OK]** ボタンをクリックします。 
	 
	 ![](T_Open_CMD_Prompt.png)

1. **[OK]** ボタンが切り替わると、以下のような [Windows Command Line] ウィンドウが表示されます。
	[REGION:lightbox]

	[![](T_Windows_CMD.png)(w:422 h:269)](T_Windows_CMD.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. コマンドライン ウィンドウに **「ADB Devices」** と入力して PC でスマートフォンが見えることを確認します。それから **[Enter]** キーを押して PC に付随しているディスプレイ デバイスを表示させます。

	[REGION:lightbox]
	[![](T_Windows_ADB_Devices.png)(w:422 h:269)](T_Windows_ADB_Devices.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

	[region:tip]
	**ADB Devices** を入力しても何も表示されない場合は、[](Platforms/GearVR) のセットアップ セクションにリスおされているものをすべてインストール / 設定し、再度この手順を行ってください。 
	[/region]

1. ADB Devices の中に対象のスマートフォンが表示されていれば、スマートフォンからログ情報を取得することができます。 
	ただし、古い情報ではなく現在のデバッグ情報のみを取得したいので、最初にログ キャッシュをクリアしておきます。 
	ログをクリアするには、以下のコマンドを入力します。

		adb logcat -c
	[REGION:lightbox]
	[![](T_ADB_Clear_Log.png)(w:422 h:269)](T_ADB_Clear_Log.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. ログから古いデータがクリアされたので、スマートフォン上でアプリケーションを起動し、以下のコマンドを入力してログ情報を取得します。

	adb logcat -s UE4 OVR VrApi VrLib VRSVC HmdInfo >logoutput.txt

	[REGION:lightbox]
	[![](T_ADB_Get_Log.png)(w:422 h:269)](T_ADB_Get_Log.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

 [region:note]
 ログがライブで出力されているか確認するために、**>logoutput.txt** の部分を省略すると、すべてのログ更新がコマンドライン ウィンドウで行われます。
 [/region]

1. キーボードの **CTRL + C** を押してログをキャプチャします。完了すると、ログファイルに ** 「logoutput.txt」** とファイル名が付いて、Windows の**「Users」** フォルダに保存されます。

	[REGION:lightbox]
	[![](T_ADB_Log_Location.png)(w:381 h:338)](T_ADB_Log_Location.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

	[region:note]
	コマンドライン ウィンドウが開いて ADB logcat コマンドが実行されている間は、データはログファイルにが出力され続けます。**CTRL + C** で、ログファイルへのデータの書き込みが停止します。
	[/region] 

1. **UE4**、**OVR**、**VrApi**、**VrLib**、**VRSVC**、**HmdInfo** を logcat コマンドへ追加すると、ログファイルに含まれる情報が作成されます。 
	作成されたログファイルを見て、この単語のどれを検索しても場合、それぞれの単語に関連するデバッグ情報がすべて表示されます。 
	次の画像サンプルを見てもらうと分かります。上記で使用した条件 (OVR、UE4、Vrapi、VrApi) が各それぞれの関連情報と共にログに表示されています。

	[REGION:lightbox]
	[![](T_ADB_Log_Info.png)(w:516 h:349)](T_ADB_Log_Info.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

何らかの理由で Gear VR プロジェクトが起動しない場合、logcat コマンドを使うとエラーの場所と原因を正確に表示してくれるので非常に便利です。 
また、問題の詳細も表示されるので、これを UE4 Forum や Answer Hub に投稿して助けを求めることもできます。

### ワイヤレスでデプロイ＆デバッグを行う
Gear VR Headset は USB ポートのみを使用しているので、Gear VR Headset 内にある間は、デバッグ情報を取得したりスマートフォンにデプロイすることはできません。 
ただし、スマートフォンを Wifi で接続してデバッグ情報を開発 PC に送れば、この問題を回避できます。 
Wifi で接続すればプロジェクトのデプロイも可能ですが、USB ケーブルを使った場合に比べると格段に遅くなります。 
次のセクションでは、デバッグ情報を Wifi で送信しデプロイできるようにスマートフォンを設定するために必要なことを説明します。

[region:note]
この操作を行うためには、開発 PC と Galaxy Note 4 は同じネットワーク上に存在している必要があります。
[/region]

1. 次に、**Windows Key + R** を押して Windows Command Shell を開いてから、**Run** ダイアログ ボックスに **「CMD」** を入力します。
	キーボードの **Enter** キーを押すか、マウスで **[OK]** ボタンをクリックします。 
	 
	[REGION:lightbox]
	[![](T_Open_CMD_Prompt.png)(w:427 h:269)](T_Open_CMD_Prompt.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. **[OK]** ボタンが切り替わると、以下のような [Windows Command Line] ウィンドウが表示されます。

	[REGION:lightbox]
	[![](T_Windows_CMD.png)(w:427 h:269)](T_Windows_CMD.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]


1. 以下のコマンドを入力して、スマートフォンの IP アドレスを確認し、必ず書き留めておいてください。使用する IP アドレスは、**inet** の後の部分になります。
	adb shell ip -f inet addr show wlan0

	[REGION:lightbox]
	[![](T_ADB_Phone_IP.png)(w:427 h:269)](T_ADB_Phone_IP.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. 次に、以下のコマンドを入力してネットワーク接続を **TCP** に変更し、ポートをリッスンに設定します。

		adb tcpip 5555

	[REGION:lightbox]
	[![](T_ADB_Set_Port.png)(w:427 h:269)](T_ADB_Set_Port.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]

1. ポートの設定が完了したら、次はスマートフォンを接続します。以下のコマンドを入力して [Enter] キーを押します。

		adb connect 10.3.31.133 - デバイスの IP アドレスに変更してください。

1. **「connected to (接続済み)」** というメッセージと自分のデバイスの IP アドレスが表示されているはずです。

	![](T_ADB_Connected.png)

1. Wifi 接続されているか確認するには、**adb devices** をコマンドライン ウィンドウに入力して [Enter] キーを押すと、**List of devices attached** には上記で使用した IP アドレスだけがアタッチされたデバイスになっていることが分かります。

	[REGION:lightbox]
	[![](T_ADB_Attached_IP.png)(w:427 h:269)](T_ADB_Attached_IP.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]


スマートフォンと PC がネットワークで接続されたので、スマートフォンからデバッグ情報を取得したり、USB ケーブルを使わずにスマートフォンにプロジェクトをデプロイすることができるようになります。 
ただし、ネットワーク経由で PC からスマートフォンへデプロイすると、USB ケーブルを使うよりも遅くなります。ご注意ください。

### デプロイ＆デバッグを再びワイヤー接続で行う
1. デバッグとデプロイを再び USB ケーブルで行うには、以下のコマンドをコマンド ウィンドウに入力します。

		adb usb

	[REGION:lightbox]
	[![](T_ADB_Detached.png)(w:427 h:269)](T_ADB_Detached.png)
	[/REGION]

	[REGION:caption]
	クリックしてフルサイズで表示
	[/REGION]



















