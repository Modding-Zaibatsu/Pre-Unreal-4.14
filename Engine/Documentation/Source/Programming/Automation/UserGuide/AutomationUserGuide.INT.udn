Availability:Public
Title: Automation User Guide
Crumbs: %ROOT%, Programming, Programming/Automation
Description:Guide to using the automation system for running tests.
Version: 4.9

Automation tests are configured and run from the **Automation** panel.

## User Interface

To summon the automation window, you will need to launch the Editor and select **Session Frontend** from the **Window** menu, or run the [Unreal Frontend](Engine/Deployment/UnrealFrontend) standalone app.

[REGION:note]
You can use your local editor as an automation worker by selecting it in the [Session Browser](Engine/Deployment/UnrealFrontend#SessionBrowser).
To run automation on external devices  game instances, you will need to create a session by running the
 **New Session** wizard, and then select your new session in the **Session Browser** when it has been created, or select an
 existing session that has been discovered in the **Session Browser**.
[/REGION]

Once you have successfully connected to an active session, you will be able to go to the **Automation** tab 
in the document area for a particular session:

[REGION:fullwidth]
![Automation](AutomationPanelInSessionBrowser.jpg)
[/REGION]
* Upper left are the "actions" - Play and refresh test list.  The number over the play button is how many 
tests will be executed.
* Upper middle are the filters - Error Filter, Warnings Filter, Smoke Tests Filter, Dev Content Filter, Visual Commandlet Filter, and then a search box to find specific tests.
* In the tree, a star icon can be found next to some tests which means the test is fast and should be enabled by default. 
A test is marked by a star by being labeled as ATF_SmokeTest.  
* The icon above the results of each test is the platform icon and the number next to it 
represents how many workers are available to carry out the selected tests.  In the case of consoles, we will be able to run 
tests on many different platforms simultaneously and there will be multiple columns for each type of device.


After running a few tests, the UI will appear more like the following:

[REGION:fullwidth]
![Automation](InProgress.jpg)
[/REGION]
Once the tests have been completed, it is possible to export the results to a CSV file via tha **Export**
dropdown. Here you can select the detail you are interested. Everything, status, errors, warnings, logs, or
any combination of the above.

[REGION:note]
* The **Export Dropdown** will only be active once reports have been generated.
* The **Export Data** button will only become active if there are reports that meet the filter criteria.
* A notification will be displayed if the export was successful, and will indicate where the report was
saved.
[/REGION]

[REGION:fullwidth]
![Automation](Export.png)
[/REGION]

In addition, it is possible to get information about the game instance a test was run on via a tooltip
on the test result.

[REGION:fullwidth]
![Automation](TooltipInfo.png)
[/REGION]
