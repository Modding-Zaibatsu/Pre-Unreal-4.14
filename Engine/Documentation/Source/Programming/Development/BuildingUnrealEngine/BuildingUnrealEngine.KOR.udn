INTSourceChangelist:2944238
Availability:Public
Title:소스에서 언리얼 엔진 빌드하기
Crumbs: %ROOT%, Programming, Programming/Development
Description:소스에서 언리얼 엔진 컴파일하기 입니다.
Prereq: GettingStarted/DownloadingUnrealEngine
Related: GettingStarted
Related: Engine/Content/QuickStart
Related: Programming/QuickStart
Related: Engine/QuickStart
Related: Support/Builds
Version: 4.9
SkillLevel: Advanced

%Globals:osselect_linux%

[TOC (start:2 end:3)]

## 소스에서 언리얼 엔진 빌드

[EXCERPT:Main]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		[INCLUDE:#windowscompile]
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		[INCLUDE:#maccompile]
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	linux
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		[INCLUDE:#linuxcompile]
	[/PARAM]
[/OBJECT]

<!--
[EXCERPT:windowscompile]
[REGION:note]
소스에서 언리얼 엔진을 빌드하기 전 Microsoft Visual Studio 2015 가 설치되어 있는지 확인해 주시기 바랍니다.
[/REGION]

1.	루트 디렉토리 안에서, **GenerateProjectFiles.bat** 를 실행하여 프로젝트 파일을 구성합니다.

	[REGION:warning]
	모든 프로젝트 파일은 중간 파일입니다 (`[UE4Root]\Engine\Intermediate\ProjectFiles`). 최신 상태를 유지하려면 새 빌드를 동기화할 때마다 프로젝트 파일을 생성해야 합니다. `Intermediate` 폴더를 지운 경우, GenerateProjectFiles 뱃치 파일을 실행하여 프로젝트를 재생성해야 합니다.
	[/REGION]

1.	**UE4.sln** 을 더블클릭하여 Visual Studio 에서 프로젝트를 로드합니다.

1.	솔루션 환경설정을 **Development Editor** 로 설정합니다.

	![](configMenu_updated.png)

1.	개발중인 윈도우 운영체제 타겟 버전(32 비트냐 62 비트냐)에 따라 솔루션 플랫폼을 **Win32** 나 **Win64** 중 하나로 설정합니다.

	![](platform_menu_updated.png)

1.	UE4 타겟에 우클릭한 다음 **Build** 를 선택합니다.

	![](BuildUE4.png)

	[REGION:note]
	시스템의 사양에 따라 소스에서 엔진을 컴파일하는 데 10 분에서 40 분까지 걸릴 수 있습니다.
	[/REGION]

1.	엔진 컴파일 이후에는, 스타트업 프로젝트를 **UE4** 로 설정합니다.

	![](SetUE4_StartPrj.png)

1.	**UE4** 프로젝트에 우클릭, **'Debug'** 위에 커서를 올린 뒤, **'Start New Instance'** 를 선택하여 컴파일된 에디터를 디버그 모드로 실행시킵니다.

	![](RunCompiledWindowsEditor.png)

	[REGION:tip]
	또는, **F5** 키를 눌러도 컴파일된 에디터의 인스턴스를 디버그 모드에서 새로 시작시킬 수 있습니다.
	[/REGION]

1.	축하합니다! 소스에서 엔진을 컴파일하고 실행시키는 데 성공하셨습니다.

	![](CompiledEditor_Windows.png)

[/EXCERPT:windowscompile]
[EXCERPT:maccompile]
[REGION:note]
소스에서 언리얼 엔진을 빌드하기 전 XCode 최신 버전이 설치되어 있는지 확인하세요.
[/REGION]
		
1.	루트 디렉토리에서, **GenerateProjectFiles.command** 를 실행시켜 프로젝트 파일을 구성합니다.
		
1.	**UE4.xcodeproj** 에 더블클릭하여 프로젝트를 XCode 에 로드합니다.

1.	빌드 타겟 설정은, 제목줄에서 **My Mac** 에 **UE4Editor - Mac** 을 선택합니다.

	![](SettingMacTarget.png)

1.	프로젝트를 빌드하려면, **Product > Build** 를 선택합니다.

	![](BuildingMacEditor.png)

	[REGION:note]
	시스템 사양에 따라 소스에서 엔진을 컴파일하는 데 15 분에서 40 분까지 걸릴 수 있습니다.
	[/REGION]
		
1.	엔진 컴파일 이후 **Product > Run** 으로 에디터를 실행시킵니다.
		
	![](RunningMacEditor.png)

1.	축하합니다! 소스에서 엔진을 컴파일하고 실행시키는 데 성공하셨습니다.

	![](CompiledEditor_Mac.png)
[/EXCERPT:maccompile]
[EXCERPT:linuxcompile]
[REGION:warning]
저희 개발자와 기술지원 팀은 현재 우분투 최신 버전을 사용합니다. 그에 따라 (우분투 다른 버전을 포함한) 다른 리눅스 배포판에 대해서는 기술지원이 불가능할 수도 있습니다.
[/REGION]
		
1.  루트 디렉토리 내, 터미널에서 **Setup.sh** 를 실행하여 프로젝트 파일 생성 준비를 위한 파일을 구성합니다.

	![](RunSetupShellScript_Linux.png)

1.	루트 디렉토리에서, 터미널에 **GenerateProjectFiles.sh** 를 실행시켜 프로젝트 파일을 생성합니다.

	![](RunGenPrjFilesShellScript_Linux.png)

1.	프로젝트를 빌드하려면, 터미널에서 **make** 를 실행합니다.

	![](RunMakeFile_Linux.png)

	[REGION:tip]
	You can also build the engine with QtCreator, CodeLite, KDevelop, and CMake.
	[/REGION]

1.	엔진 컴파일 이후, 터미널에 ** cd Engine/Binaries/Linux/ ** 라 입력하여 에디터의 바이너리 경로로 이동합니다.

1.	**UE4Editor** 로 에디터를 실행시킵니다.

	![](RunUE4Editor_Linux.png)

	[REGION:warning]
	OpenGL 컨텍스트를 만들 수 없다면 엔비디아 그래픽 드라이버 업데이트가 필요할 수 있습니다 (Ubuntu 문서 참고). NVidia 바이너리 버전(343.xx 이상)을 사용할 것을 추천합니다.
	[/REGION]

1.	축하합니다! 소스에서 엔진을 컴파일하고 실행시키는 데 성공했습니다.

	![](CompiledEditor_Linux.png)
[/EXCERPT:linuxcompile]
-->

## 언리얼 엔진 시작하기

[](GettingStarted) 문서를 참고로 언리얼 엔진 시작 방법을 배워보세요!

UE4 를 빠르게 시작하고자 하는 분들을 위한 튜토리얼이 별도로 준비되어 있습니다:
*	[](Engine/Content/QuickStart)
*	[](Programming/QuickStart)
*	[](Engine/QuickStart)


[REGION:note]
UE4 의 에디터내 도움말 기능도 질문에 대한 답을 구하는 데 뛰어난 방법입니다.
[/REGION]

[/EXCERPT:Main]

<!--Currently deprecated for the 'Building from Source' version

## 언리얼 엔진 컴파일하기

언리얼 엔진 4 는 UnrealBuildTool 을 통한 커스텀 빌딩 방법을 사용합니다. 이 툴은 엔진 컴파일에 관련된 복잡한 부분 전부를 처리합니다.

### 빌드 환경설정

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		기본적으로 모든 환경설정이 나타나지는 않습니다. 메인 UE4 디렉토리의 [GenerateProjectFiles.bat](Programming/UnrealBuildSystem/ProjectFileGenerator) 파일을 편집하여 필요에 따라 추가적인 환경설정에 대한 프로젝트 파일을 생성합니다.

		언리얼 엔진 4 와 UnrealBuildTool 은 엔진 컴파일 방법 결정을 위해 다양한 빌드 환경설정을 사용합니다. 어느 환경설정을 사용할 것인지는 생성하고자 하는 빌드의 용도에 따라 결정됩니다.

		사용가능한 환경설정:

		|빌드 환경설정 | 설명 |
		|-------------|-------------|
		| **Debug** | 엔진과 게임 코드 둘 다를 디버그 환경설정으로 빌드합니다. |
		| **DebugGame** | 엔진은 최적화시키고 게임 코드는 디버깅 가능하도록 놔두는 빌드입니다. 이 환경설정은 디버깅 전용 게임 모듈에 이상적입니다. |
		| **Development** | Release 에 해당하는 환경설정입니다. 엔진과 게임 코드 둘 다 이 환경설정으로 빌드됩니다. |
		| **Shipping** | 최상의 퍼포먼스를 내는 게임 출하용 환경설정입니다. 콘솔 명령, 통계, 프로파일링 툴을 제거하는 환경설정입니다. |
		| **Test** | 콘솔 명령, 통계, 프로파일링 툴을 약간 포함시킨 것을 제외하고는 **Shipping** 환경설정과 같습니다. |

		빌드 환경설정은 Visual Studio 툴바에서 설정할 수 있습니다.

		![UE4 Solution - Configuration Menu](configuration_menu.png)
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		사용가능한 환경설정:

		| 빌드 환경설정 | 설명 |
		| ------------------- | ----------- |
		| **Product > Build For > Running** | 이 환경설정은 엔진과 게임 코드 둘 다 Debug 환경설정으로 빌드합니다. |
		| **Product > Build For > Profiling** | 이 환경설정은 Release 에 해당합니다. 엔진과 게임코드 둘 다 이 환경설정으로 빌드됩니다. |
		
	[/PARAM]
[/OBJECT]

### 타겟 플랫폼

언리얼 엔진 4 에서 지원하는 플랫폼은 현재 다음과 같습니다:

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		* **Windows 32-bit**
		* **Windows 64-bit**


		엔진 자체를 빌드할 때는 **Win64** 플랫폼을 사용하게 됩니다.

		![UE4 Solution - Platform Menu](platform_menu.png)
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		* **Mac 64-bit**
		* **iOS Device**


		엔진 자체를 빌드할 때는, **Mac 64-bit** 플랫폼을 사용하게 됩니다.
	[/PARAM]
[/OBJECT]

(#BinaryNamingConvention)
### 바이너리 작명 규칙

생성되는 바이너리 이름은 빌드시 사용된 환경설정에 따라 달라집니다. 일반적인 작명 규칙은 이렇습니다:

|엔진 모드| 작명 규칙|
|----------- | ------------------|
| Editor	  | UE4Editor-Platform-Configuration.extension |
| Uncooked Game | UE4-Platform-Configuration.extension |

PC 플랫폼에 대해서는 예외인데, Development 환경설정으로 빌드할 때는 플랫폼과 환경설정 부분이 생략됩니다. 예를 들어 Win64 플랫폼에 대해 생성되는 실행파일 이름은 다음과 같습니다:

| 환경설정 | EXE 이름 |
| ------------- | -------- |
| Debug | UE4Editor-Win64-Debug.exe |
| DebugGame | UE4Editor-Win64-DebugGame.exe |
| Development | UE4Editor.exe |


### 엔진 빌드하기

[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	windows
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	active_button_content
	[/PARAMLITERAL]
	[PARAM:content]
		1.	**Build Configuration** 을 빌드하고자 하는 환경설정으로 맞춥니다. 이 예제에서는 **Development** 로 합니다. 가능한 환경설정 각각에 대한 설명은 [빌드 환경설정](#빌드환경설정) 섹션을 참고하시기 바랍니다.

			![UE4 Solution - Set Configuration to Development](config_development_menu.png)

		1.	**UE4** 프로젝트에 우클릭합니다:

			1. 컴파일된 파일이나 임시 파일 제거를 위해 **Clean** 을 선택합니다. 그러면 다음 빌드는 풀 리빌드가 됩니다.

			1.	**Rebuild** 를 선택하여 엔진을 리컴파일합니다.

		또는, **UE4** 프로젝트가 스타트업 프로젝트로 설정되어 있는 경우:

		1. **Build Configuration** 을 설정합니다.

		1. **Build** 메뉴에서:

			1. **Clean UE4**.
	
			1. **Rebuild UE4**.
	[/PARAM]
[/OBJECT]
[OBJECT:ToggleButtonContent]
	[PARAMLITERAL:category]
	OS
	[/PARAMLITERAL]
	[PARAMLITERAL:id]
	mac
	[/PARAMLITERAL]
	[PARAMLITERAL:active]
	[/PARAMLITERAL]
	[PARAM:content]
		1. 활성 스키마가 **UE4Editor - Mac > My Mac 64-bit** 로 설정되어 있는지 확인합니다.

		1. **product** 메뉴에서 **Build For > Running** 을 선택합니다.
	[/PARAM]
[/OBJECT]
-->