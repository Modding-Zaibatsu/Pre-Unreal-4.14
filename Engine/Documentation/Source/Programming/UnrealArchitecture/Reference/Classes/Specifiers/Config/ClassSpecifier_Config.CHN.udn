Title: 配置
Crumbs:%ROOT%, Programming, Programming/UnrealArchitecture/Reference, Programming/UnrealArchitecture/Reference/Classes, Programming/UnrealArchitecture/Reference/Classes/Specifiers
Description:
Availability:Public
Version: 4.5

表示允许这个类在配置文件(`.ini`)中存储数据。 如果在这个类中有任何可配置的变量（使用 `config` 或 `globalconfig`变量修饰符进行声明），这个修饰符会将这些变量存储在 *(* 和 *)* 内的指定配置文件中。 将这个标志传递给所有子类，而且无法否定这个标志，但是子类可以通过重新声明`config` 关键字并指定一个不同的文件名来更改这个`.ini`文件。 将 *IniName* 的值添加到游戏名称后面 - 减去 "Game" 部分 - 指定要存储数据的`.ini`文件的名称（例如，在 UDKGame 指定`config(Camera)`将会使这个类使用`UDKCamera.ini` 文件）。 还可以将关键字inherit指定为 *IniName* ，这样做会使得这个类使用与它的父代相同的配置文件。 默认情况下，会有一些 `.ini`文件，例如：

* `Config=Engine`: 使用 **引擎** 配置文件，也就是您的游戏名称后面加上`Engine.ini`。 例如，UDKGame 的引擎配置文件的名称是`UDKEngine.ini`。 
* `Config=Editor`: 使用 **编辑器** 配置文件，也就是您的游戏名称后面加上`Editor.ini`。 例如，UDKGame 的编辑器配置文件的名称是 `UDKEditor.ini` 。 
* `Config=Game`: 使用 **游戏** 配置文件，也就是您的游戏名称后面加上`Game.ini`。 例如，UDKGame 的游戏配置文件的名称是 `UDKGame.ini` 。 
* `Config=Input`: 使用 **输入** 配置文件，也就是您的游戏名称后面加上`Input.ini`。 例如，UDKGame 的引擎配置文件的名称是`UDKInput.ini`。


Config=FileName
