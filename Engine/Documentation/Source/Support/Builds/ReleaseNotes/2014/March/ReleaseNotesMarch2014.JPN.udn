INTSourceChangelist:2591123
Title:2014 年 3 月リリースノート
Crumbs:%ROOT%, Support/Builds
Description:
Availability:Licensee

[TOC(start:2 end:2)]

## ビルド情報


[REGION:simpletable]
| アイテム | 情報 |
| ---- | ---- |
| **Labels** | [INCLUDE:#labels] |
| **Built from Changelist #** |  (//depot/UE4-QA/Promotable-CL-) |
| **Branched from Changelist #** |  (//depot/UE4/Promoted-CL-) |
| **Visual Studio バージョン** |  |
| **DirectX** | June 2010 |
[/REGION]

<!--
[EXCERPT:Labels]
QA_APPROVED_UE4_BUILD_2014_  
QA_APPROVED_UE4_BUILD_CURRENT  
QA_APPROVED_UE4_BUILD_MINIMUM
[/EXCERPT:Labels]
-->

## 重要情報

* March QA ビルドが思うように上手く調整できませんでした。認証でコンソールを入れたら、パブリック リリースと QA ビルドでのコンソール修正と一致しなくなりました。 

	これにより、March QA ビルドが遅れる結果となり、**UE4-Releases/4.0/** のコンテンツは現時点で有効なコンソールに含まれていません。現在 **//depot/UE4-QA-Unstable/** ( *which was branched from Releases* ) に保存されているコンソールを、認証から安全に作業ができるブランチへ戻す作業をしています。   **//depot/UE4-QA/** へすぐにブランチしますが、コンソール ゲームを行う場合は、April QA ビルドで最低 1 つコンソールの認証ビルド、May QA では両方のビルドが含まれるようにします。 

* 現時点のエンジン開発ロードマップ: [UE4 Roadmaps](https://udn.unrealengine.com/questions/topics/roadmap.html)
* 修正されたバグ: [UE4 Fixed Bugs March 2014]
* 周知の問題: [UE4 Known Issues March 2014]
 

## 主な新機能

#### ブループリント

* **ブループリント マクロ デバッグ**

	* ブループリント マクロ デバッグのサポートが追加されました！

	* 例えば、ブループリント イベント グラフのマクロ インスタンス ノード上にブレークポイントが設定されていると、Play-in-Editor/Simulate-in-Editor の実行時、実行はマクログラフ内の最初の実行可能なノード状でブレークするようになりました。シングルステップ操作もできるようになりました。つまり、ブループリント オブジェクトのデバッグ中、マクロの内部のブレークポイントを設定して、様々なピン値が表示されます。

		_例：ブレークポイントを Gate ノード上に設定した場合です。_	

		![](MacroDebugging01.png)

		_実行は Gate マクログラフ内部の Enter 出力に適用されたシーケンス ノード上でブレークします。マクロ内部の Branch ノード上にブレークポイントを設定し、[Resume(再開)] をクリックすると_

		![](MacroDebugging02.png)

		_実行はそのポイントでブレークします_

		![](MacroDebugging03.png)

		_ピンにカーソルを合わせると、いろいろなカレント値を見ることができます。_

		![](MacroDebugging04.png)

* **ブループリントのピン アイコン**

	* デフォルトの BP ピン アイコンが新しくなり、エディタでデフォルトでティアドロップ形式になりました。  

		元の形式が良い場合は、エディタ設定を変更して元のピンを使用することができます。

		![](PinIcons.png)(w:720)

#### エディタとツール 

* **物理アセット ツール (PhAT)**

	* 物理アセット ツールが改善されました！

		![](PhysicalAssetTool.png)

	* シミュレーションを選択すると、残りのボディを固定したまま、興味のあるエリアをシミュレーションすることができます。
	* 複数のボディとコンストレイントを簡単に切り替えられるようにマルチセレクトがサポートされるようになりました。
	* ホットキー 1、2、3、4 を使って Swing1、Swing2、Twist を切り替え、コンストレイントの制限を素早く可視化するためにサイクルすることができます。
	* No Gravity は重力なしでシミュレーションします。隣接したボディ間のコリジョンや正しくないコンストレイントなどのミスの発見に非常に便利です。

* **カラーピッカーのユーザビリティの改善点**

	* デフォルトのビュー
		* サチュレーションとバリュー スライダー
		* 空の時、Theme バーがヘルプ メッセージを表示します。
		* カラー プレビューのブロックの間に小さなセパレータができました。
		* カラー ピッカーは sRGB プレビュー切り替えに関係なく、画面上に表示される色を常にピックするようになりました。

			![](ColorPicker01.png)

	* 詳細設定のビュー
		* R、G、B チャネルに H、S、V などのプレビュー グラディエントが付きました。
		* 16 進数の入力/出力
		* A を 1.0 より大きくすることができるようになりました (マテリアル エディタの場合).
		* プレビュー グラディエントが若干濃くなり見やすくなりました。
		* スライダーの幅が広くなりマウスの精度があがりました。
		* スライダーの数字入力が 2 桁ではなく 3 桁精度になり、正しい Hex 変換が行えるようになりました。

			![](ColorPicker02.png)

	* Quick Pick モード
		* ピペットの横にある小さなカラーホイールボタンでカラーホイールとクイック ピックを切り替えます。

			_今は、ホイールの右クリックでも切り替わります。_

		* 明るい色と暗い色で急いで実験する必要がある時のための Quick pick spectrum 

			_水平な中央のラインは 色調の値が 1.0 でサチュレーションが 1.0 であることを表します。_

			_色は上になるほど白に対してサチュレートします。_

			_色は下になるほど黒に対してリットされます。_		

			![](ColorPicker03.png)

* **Developer フォルダはデフォルトでは無効になっています。**

	* Engine フォルダもデフォルトでは無効になりました！ 

		* その表示は、View オプションから切り替えることができます。	 

			![](DeveloperFolder.png)

* **Play-In-Editor(PIE) と起動に関する変更点**

	* 以下は PIE の変更点です。
		* 'Current Camera / Default Player Start' の組み合わせに対するメニューエントリはなくなりました。
			* Current Camera / Default Player Start が一番下のグローバルなトグルになりました。
			* PIE を開始するには 4 つのエントリーのいずれかをクリックするだけです。
		* OpenGL ES エミュレーションでスタンドアローン型ゲームを起動する新オプション 'Mobile Preview' が追加されました。
		* 大きな [Play] ボタンが直近の選択を記憶します。
		* メニュー エントリーとツールチップが読みやすく / 理解しやすくなっていると思います。	

			![](PIE01.png)

	* Launch に関する変更点です。
		* デバイスがプラットフォームごとに分けられました。
		* 利用可能なデバイスのリストに関する多数の問題が修正されました。
		* ツールバーの大きな [Launch] ボタンが直近の選択を記憶します。
		* ローカル PC で [Launch] ボタンのデフォルト選択を行うようになりました。

* **Snap の間隔は10 進数がデフォルトになりました**

	* スナップサイズの間隔は既に 10 進数になっています！ 

		1 アンリアル単位 = 1 センチ (cm)

	* 新しいスナップサイズです:		

		![](DecimalIntervals01.png)

	* 環境設定の Viewports->Grid Snapping で、ゲームに対するスナップ設定をべき乗に戻すことができます:

		![](DecimalIntervals02.png)

* **コリジョン設定**

	* コリジョン設定のセットアップと修正が可能になりました！

		プロジェクトに新規チャネルや新規プロファイルを追加したり、既存のものをカスタマイズできるようになりました。

	* 設定の場所は、Edit->Project Settings->Engine->Collision です。

		![](CollisionSetting.png)

* **Input Mapping Bindings パネル**

	* 新しく [Input Mapping Binding] パネルができました！

		場所は、Edit > Project Settings > Input です。

	* [Input] パネル内には 3 つの別々のセクションがあります。

		_Axis Config_	

		![](AxisConfig.png)

		_Action Mappings_		

		![](ActionMappings.png)

		_Axis Mappings_		

		![](AxisMappings.png)

	* Action mapping と Axis mapping を追加するボタンがそれぞれあります。

		一番上のボタンでは名前設定のない新規マッピングが作成されますが、マッピングそのものの名前のついたボタンでは同じ名前をもつ別のマッピングがそのグループに追加されます。

* **プレースメント / コンテンツ ブラウザ＆Editor モード**

	* プレースメント ブラウザが全く新しいデザインで生まれ変わりました！  

		新しいプレースメント ブラウザでは、ライト、トリガー、ボリューム、全てのクラスへの迅速なアクセスだけでなく、最近配置したアセットの非常に長いリストにもアクセスできます。

	* Editor モードがすべて [Tools] タブの中に統合されました。		

		![](PlacementBroswer01.png)

	* さらに、コンテンツ ブラウザもデザインが新しくなりました。 

		![](PlacementBroswer02.png)

* **[Details] パネルのヘッダがスリムになり、 C++ ファイルを開けるようになりました**

	* 2 本だったヘッダー行がシンプルな 1 行に圧縮されました。アイコン ツールチップがクラス名を表示するようになりました (Scene Outliner など)。   

	* C++ コードのあるアクタの場合は、ヘッダファイルのハイパーリンクをクリックればコードを開くことができます (VS または Xcode をインストールしている場合のみ表示されます)。

		![](DetailsPanel01.png)


	これまではアクタ クラス名にブループリント エディタへ飛ぶハイパーリンクが付いていました。それが今度は別のボタンとなりました。
		![](DetailsPanel02.png)

	* ビューポートの右クリック メニューに C++ ファイルへのアクセスも追加しました (コンパイラをインストールしている場合に限ります)。  

		もちろん、クラスビューアのクラスをダブルクリックすることもできます。		

		![](DetailsPanel03.png)

* **プログラマー向けの新ツールメッセージング デバッガー**

	* メッセージ デバッガーという新ツールが加わりました。これは、UE4 のメッセージ システム または Unreal Message Bus (UMB) として知られているビジュアル デバッガー ツールです。 

		メッセージング システムを使っているアプリケーションはメッセージング システムがかなり非同期式な性質を持っているため、デバッグが非常に難しい場合があります。 

	* 現時点では、メッセージ デバッガは自分の責任で '実験的' 使用と見なし、エディタの環境設定で明示的にアクティベートさせなければなりません。		

		![](MessagingDebugger1.png) ![](MessagingDebugger2.png)

#### レンダリング

* **光沢のあるスクリーン空間の反射**

	* マテリアルのラフネスをサポートするスクリーン空間の反射が追加され、デフォルトで有効になりました！

		スクリーン空間の反射を使用したくない場合は、ポストプロセス設定でこの機能を弱める / 無効にすることができます。 
		マイナーな調整が必要なマテリアルもありますが、それらは他の反射に対しても正しい表示はされません。 
		Image Based Lighting と 法線 (解析的) 光源を一致させました。

	* ラフネスを変えたデカールのサンプルです (ビューポートが非常に小さいので粒子 / ノイズが見えます)。

		![](Glossy.png)

* **プレビュー シャドウ インジケータ**

	* 影の中に現れるテキストの形でプレビュー シャドウ インジケータがつきました。  

		_Build - ディスタンス フィールド シャドウマップを使用します_	

		![](PreviewShadows01.png)

		_Unbuilt - インジケータ付きのプレビュー シャドウを使用します_

		![](PreviewShadows02.png)

	* [Visualize (可視化)] の表示フラグで無効にすることができます。  

		テキスト投影のライト関数マテリアルの微調整は、/Engine/EditorMaterials/PreviewShadowIndicatorMaterial.PreviewShadowIndicatorMaterial をご覧ください。

#### アニメーション

* **一様でないスケール アニメーション**

	* 一様でないスケール アニメーションがサポートされるようになりました。オプションは必要ありません。アニメーションをインポートすると、スケールが存在する場合、それもインポートされます。 

		全てのアニメーションに対してスケールを保存するわけではありませんので、メモリの心配もありません。1 ではないスケールをもつアニメーションのみを保存します。 

	* 以下はアニメーションのサンプル ビデオです。 

		[![](AngryChest.png)](AngryChest.wmv)
		[![](CompoundTransform.png)](CompoundTransform.wmv)

		[![](Keridan_Facial.png)](Keridan_Facial.wmv)
		[![](Keridan_Facial_Compound.png)](Keridan_Facial_Compound.wmv)


## 新機能の追加 

#### エディタとツール
* 新しいサウンド ノードがサウンドキュー エディタで選択済みのノードへ自動接続されるようになりました。
* Placement Browser が全く新しいデザインになって戻ってきました！コンテンツ ブラウザの [Clasees] ビューが取り除かれました。
* JPEG インポートがエディタでサポートされるようになりました。基本の 8bit RGB と Gray JPEG 形式に対応します。
* コンテンツ ブラウザのスレート ブラシにカスタム仕様のサムネイル レンダラーを追加しました。
* [C] キーでマテリアルとサウンドキュー エディタ用にコメントを作成するようになりました。
* グラフ パネル内 (ブループリント エディタ、マテリアル エディタなど) で LMB+RMB をクリック＆ドラッグするとズームが実行されます。
* レベル ビューポートで Ctrl+E (関連するアセットの編集) を押すと、ブループリント以外のアセットタイプに機能し、適切なアセット エディタを開きます。
* マテリアル式を作成するホットキーがパレット リストのエントリの横に表示されるようになりました。
* フォーリッジ ツールに対してライティング / シャドウイング制御が追加されました。
* **ランドスケープ**
	* ランドスケープ平坦化ツールに、高さに合わせて平坦化するオプションが追加されました。
	* ランドスケープ エディタに傾斜ツールが追加されました。
* カメラ アニメーションの作成と編集が Matinee で可能になりました。
* ソース コントロール設定がグローバルとプロジェクト別で切り替え可能になりました。
* アクタを複数の Matinee で同時に制御できるようになりました。
* 使用時にユニコードがサポートされるようになりました。また、正しく機能しなかった同期が修正されました。
* ブループリントの関数コールをダブルクリックすると、それぞれのブループリントが開くようになりました。
* エディタを再起動すると、[Asset] タブがリストアされるようになりました。
* 言語をエディタ設定で切り替えできるようになりました。
* Find in CB (CB を検索) で 通常は非表示の場合でもエンジンまたは Dev アセットの検索が可能になりました。
* コンテンツ ブラウザにエンジン アセット表示オプションが付きました。
* コンテンツ ブラウザにデベロッパー アセット非表示オプションが付きました。
* 再生 / スクラブ時に Director Group/Track がアクティブ カメラ アクタを選択するようになりました。
* 一時停止中の Possess/Eject が可能になりました。ただし、ブループリントのデバッグ中は不可能です。
* ホットコンパイルに失敗すると、通知に「ログを表示する」ハイパーリンクがでるようになりました。
* BSP ワークフローが修正されました。
* スプラッシュスクリーンのビットマップをユーザーが設定できるようになりました。
* エディタ内からのコード プロジェクト再生成を追加しました。
* **スレート**
	* FEditorStyle はスレート コアには存在しなくなりました。
	* FEditorStyle は Slate モジュールではなく EditorStyle に存在するようになりました。
	* FEditorStyle を使用する場合、「EditorStyle」を .Build.cs ファイルにリンクしているモジュール リストに追加する必要があります。
	* ゲームスタイルに FEditorStyle の使用はお勧めしません。 推奨されるゲームスタイルの設定方法については、ShooterGame または StrategyGame サンプルの例をご覧ください。
* SRichTextBlock がスレートに追加されました。SRichTextBlock には、複数のタイプのフォント、サイズ、カラー、ウィジェットを混ぜることができ、テキスト ドキュメント内で全てが画像化されます。
* ペルソナの通知ステートに、リミットハンドルをドラッグで編集される継続時間が付きました。
* マテリアル エレメントのスケルタル メッシュへの追加および削除が可能になり、 LOD マテリアルが定義できるようになりました。
* UnrealVS に Batch Builder ウィンドウがつきました。
* GPU エミッタの ColorScale/Life モジュールでパーティクル パラメータがサポートされるようになりました。
* UV 空間で頂点の位置をオフセットする新規パーティクル モジュール (PivotOffset) が追加されました。
* マウスボタンが押されていれば、 WASD が常に可能になりました。
* Perspective (透視図法) ビューポート マーキー選択は、マーキー ボックス内部に可視ピクセルを持つオブジェクトのみを考慮するようになりました。
* [Detail] パネルのプロパティに copy/paste が追加されました。
* プロジェクトとワールド設定の GameMode の作成 / 選択 / 編集用に新しい UI が追加されました。
* **物理アセット ツール** 
	* PhAT は複数選択が可能です。
	* PhAT に、ボディのあるボーンを表示のみする新しい階層フィルタができました。
	* PhAT に Selected Simulation と呼ばれる新しいシミュレーション モードができました。

#### ブループリント
* プラットフォーム専用アプリケーション ライフサイクル イベント ( iOS システム メッセージなど) を聞く必要のあるどんなアクタへの追加も可能な UApplicationLifecycleComponent が追加されました。ネイティブとブループリント クラスの両方に機能します。
* ドキュメントにリンクする充実したツールチップが幾つかブループリント エディタに追加されました。
* ブループリント グラフ エディタのズーム イン / アウトに +/- キーが使われるようになりました。
* [favorites] パネルがブループリント パレットに追加されました (お気に入り登録機能も一緒に)。
* ブループリント実行関数が `TScriptInterface<>` パラメータを受け取れるようになりました。
* ブループリント関数にワールド環境のパラメータのフラグを使用するために、新しく [WorldContext] メタ タグができました。
* ブループリント マクロのデバッグがサポートされるようになりました。
* ブループリント ノード アセット リファレンスが修正され、エディタで内でアセットが選択できる別の場所によりインラインのインプレイス アセット ピッカーができました。
* リファレンスする変数に応じてブループリント取得 / 設定ノードにドキュメント ツールチップが追加されました。
	* この関数は有効なドキュメントが見つかるとツールチップの中に自動的に表示します。
* ローカル変数をブループリント関数の中に置いて名前を付けることが可能になりました。
* [Level Blueprint] ツールバーが [Blueprints] と名前が変更され、各種ブループリントの作成および編集機能が追加されました。
* セクションをマクロあるいは関数に折りたたんだり、折りたたんだグラフをマクロと関数にプロモートさせることができるようになりました。
* ブループリントにエクスポーズされた IgnoreActorWhenMoving 関数が PrimComp に追加されました。
* [Blueprint Editor document] タブにアイコンが付きました。
* Blueprint ノード上 (メニュー内も) にアイコンが付きました。
	* 様々なタイプのノードに対してカスタム仕様のアイコンが多数作成されました。
	* Event ノードの実行ピンが通常の実行ピンのスタイルを使用するようになりました。
* イベントがカテゴリごとにグループ化されました。
* [Create Blueprint From...] オプションがコンテンツ ブラウザ コンテクスト メニューに追加されました。
* GetActorUp/Right/ForwardVector が追加されました。

#### レンダリング
* ボリューム ライティング サンプルと事前計算済みのビジビリティ セルの表示フラグが可視化されました。
* プレビュー シャドウ インジケータ テキストはプレビューに使用されたシーン シャドウをまるどとレンダリングします。
	* Visualize カテゴリの表示フラグで無効にすることができます。
	* ビルドされていない指向性ライトの Preview CSM はゲームと整合させるため、 PIE には適用されなくなりました。
* ES2 のシェーダーで、 詳細情報およびエラーがマテリアルおよび MIC エディタ内で表示できるようになりました。
* スクリーン空間の反射に対してラフネスがサポートされるようになりました。
* WIP LightPropagationVolumes (Microsoft/Lionhead から統合) が追加されました。
* Matinee をセットアップせずにレンダリング パスに対して異なるビューポートの状況をテストするために r.ViewportTest が追加されました (ゲームのみで機能)。
* HLSL 「View.GeneralPurposeTweak」にアクセス可能なcvar 「r.GeneralPurposeTweak」がシェーダー開発用に追加されました。
* ステートが簡単に管理できるように (デバイス プロファイルのオーバーライドなど) Scalability settings cvars が作成されました。
* 全ての 2D テクスチャの LOD バイアスをオーバーライドするための r.MipMapLODBias コンソール変数が追加されました。

#### ゲームプレイとフレームワーク
* ISO-8601 日付形式に対応するため、 FromIso8601 と ToIso8601 が FDateTime に追加されました。
* navmesh リビルド中のメモリ使用量を減らし、数台のジェネレーターのみがコリジョン データを同時に受け取るようになります。
* Navmech のタイルの最大面積が 65536 ボクセルに増えました。(以前は 256 でした)。
* 64bit ポリゴン アドレスに切り替えることで、navmesh ポリゴンとタイルの最大数が増えました。
* navmesh 生成用の領域が新しく分割されました。ChunkyMonotone
	* タイルを長方形のチャンクに分割し (デフォルト：2X2)単調分割を実行します。
	* デフォルト モードに比べて明らかに速いです (watershed による)。
	* チャンクを分割することで長くて細いポリゴンが作成されるのを防ぎますが、生成されるポリゴン数が他のメソッドに比べて若干多くなります。
	* [Partitioning method selection] が RecastNavMesh の Generation カテゴリの [Advanced display] へ移動しました。
* 動的な障害物 (デフォルトで歩行可能なものに類似) 用にデフォルトのナビゲーション エリアが追加されました。これはゲーム専用の設定でオーバーライドすることができます。
* EQS デバッグ描画ツールが GameplayDebuggingComponent の表示に追加されました。
* GameplayDebuggingComponent の描画に、独自の表示フラグである GameplayDebuggingを使うようになりました。
* エディタのビューポートで EQS クエリをテストするツールである EQSTestingPawn が実装されました。
* Defined FAISystem::InvalidLocation を AI と使用する not-set または cleared FVectors の値として使用するように定義しました。
* 1 回の EQS テストをタイムスライスする方法を追加しました。
* 表示されたコンテクストの周りのサークル上に項目を作成するために非常に斬新な EQS ジェネレータが追加されました。
* 全ての BB アセットに存在するブラックボードを意味するキーに「永続的なキー」を定義する方法が追加されました (親 BB に既にある場合は複製しません)。
* アニメーション ノード選択時に構造体をカスタマイズするサポートが、ペルソナの詳細パネルに追加されました。 
* スケルトンのプレビュー メッシュとペルソナの現在のプレビュー メッシュを別々に設定する機能が追加されました。
* プロパティのデフォルトとは別にプレビュー インスタンス上のプロパティをユーザーが編集できる新しいパネルがペルソナに追加されました。
* コンテクスト オプション メニューが Animation Blueprint ノードに追加され、ユーザーは関連するアセットを開けるようになりました。
* dirty marker がペルソナの Mode Widget に追加されました。
* Save context menu オプションがペルソナのアセット ブラウザに追加されました。
* インゲームのボーン描画を showdebug コマンドで切り替えられるようになりました。
* アニメーションの再生用にインゲームのデバッグ出力ができるようになりました。
* ペルソナの [Find in CB toolbar] ボタンで、選択中のモードに合った適切なアセットがハイライトされるようになりました (スケルトン、メッシュなど)。
* axis gizmo がペルソナのソケットに追加されました。
* サウンド / パーティクル通知を追加すると、それが適切なタイプであればペルソナで選択したアセットに対して自動設定されるようになります。
* SoundNode Concatenate が再追加されました。
* DataTableEditor がスクロール対応になりました。
* Actor Details UI が改善され、機能性が向上し、さらにコンパクトになりました。
* エディタから C++ ソース ファイルにさらにアクセスしやすくなりました！
	* 選択中のアクタを右クリックすると、 C++ ソース ファイルが開くようになりました。
	* [Go to Source File] ボタンが詳細ヘッダ (ハイパーリンク) に追加されました。
* エディタ サウンドを切り替える環境設定が追加されました ([Editor Sounds] セクションの PIE サウンドなど)。
* Shootergame にテキストチャットが追加されました。
* クラス ビューアのネイティブ クラスをダブルクリックすると IDE 内でヘッダ ファイルが開きます。
* エディタ ヘルプ メニューに API ドキュメントに対するショートカットが付きました。
* 直近のプロジェクトを自動で読み込むためのオプションがプロジェクト ブラウザに追加されました。
* コリジョン：コリジョン チャンネル設定が Project Setting/Collision で可能になりました。
* PhysicalSurface :Physical Surface の設定が Project Setting/Physics で可能になりました。
* 自動化テストのコンフィギュレーション：各種自動化テスト アセットを Editor Setting/Automation に追加することができるようになりました。
* ローカリゼーション ポータブル オブジェクト (.po) ファイルのエクスポート用コマンドレットが追加されました。
* ブレンドスペースでは、 anim notifies を最もウェイト値の高いアニメーションに制限する、あるいは全部一緒に無効にすることが可能になりました。

#### コア
* Simplygon の ProxyLOD integration が追加され、スタティック メッシュ コンポーネントとランドスケープのマージに対応します (Experimental -> Actor Merging の中にあります)。
* マテリアルごとのグループ化できるアクタ マージ ユーティリティが追加されました (Experimental->Actor Merging の中にあります)。
* デディケイテッド サーバーは、サーバー自体の ini ファイル (DedicatedServer*.ini) を同じディレクトリ内に Default*.ini として格納できるようになりました。
* UBT:TargetInfo クラスに Type プロパティと IsCooked プロパティが追加されました。これにより、クックされたターゲットのバイナリをビルドする場合、モジュールに条件付のビルド規則を設定することができます。 
* アセット レジストリ データとゲームコールバックに基いた、複数のパッケージファイルのビルド作成用の機能が追加されました (ゲーム ダウンロードのチャンキングに便利)。
* nullptr と 0 が BlueprintCallableFunctions ポインタのデフォルト引数として受け取られるようになりました。
* Interface UFunctions はフィールド イタレーションで検索できます。
* 新規の TFieldRange クラスは TFieldIterator と同じように使用されますが、使用対象は for (`UFunction* Func :TFieldRange<UFunction>(Class)`).
* また、TObjectIterator に対しても同等に機能する TObjectRange も新しく登場しました。
* TMaps と TMultiMap を Map.Add(Key); などのキーとなる 1 つの引数に追加 (設置) することができるようになり、マップ値はデフォルトで構築されます。
* 同じオブジェクト / 関数を複数回バインドするコードを使いやすくするために、Delegates に AddUniqueDynamic と IsAlreadyBound 機能が付きました。
* ANSI 以外の文字が UnrealHeaderTool で正確に処理されるようになりました (ツールチップをパースするコメント、DisplayName 指定子など)。
* エディタ以外の Win64 ビルドで BinnedMalloc が有効になりました。実行されているプラットフォームのページサイズまでの割り当てを一致させるサポートが追加されました

#### プラットフォーム
* **Mac**
	* ムービー再生用に同じ AVFoundation API を使用する Mac OS X 上でのコンパイルとリンクをするために iOSMoviePlayer プラグインの修正と名前変更を行いました (AVIWriter で使用済み)。
	* 必要に応じて、Mac windows でドロップシャドウおよび丸みを帯びた角によるレンダリングを行い、さらにOS X の場合と同様に [close/minimize/restore] の各ボタンがハイライトされます。
	* 新しい C++ クラッシュレポーターを使って Mac OS X に対するクラッシュレポート機能を初めて実装されました。Linux 版として類似したレポートが生成されます。
	* 新しい CrashReportClient を有効にし、OS X 上の全ての古いエラーレポートを無効にしました。
	* Mac OS X の最新バージョンを実行していない時、ユーザーに更新を促す抑制可能なダイアログが追加されます。
	* LLDB でTCHAR がサポートされます。
* **Android**
	* 4 本指タップのダイアログにサポートされているテクスチャ形式が表示されます。
	* Android の ネイティブ解像度にクランプされて r.MobileContentScaleFactor がサポートされるようになりました (1.0 は 1280x720 ですが正しいアスペクト比です) 。
	* Android のオーディオ サポートが ogg を使って追加されました。

#### アニメーション
* ルート モーション抽出中にルートをロックする様々なオプションが追加されました。デフォルトがアニメーションの第一フレームから参照ポーズへ変更されました。
* 最適化：SkeletalMeshes 向けの CachedLocalBounds 最適化が全てに対して有効にされました。		
* **アニメーションは再保存が必要です**
	* GUID が Skeleton アセットに追加されたので、 アニメーションがバージョンをトラックできるようになりました。全てのアニメーションを再保存することを推奨します。再保存しない場合、アニメーションはゲームのロード時に圧縮されます。
* 一様でないスケール アニメーションのサポーはスケーリングの適用時のみ使用できます (1,1,1 ではない場合など)
	* スケールのインポートがうまくいかない場合は、[Preserve Local Transform] を有効にします。
	* 湾曲 / 共有はサポート外となります。情報は削除され、ソースデータとは異なる結果が作成されることにご注意ください。


## アップグレード ノート

#### エディタとツール
* コンテクスト メニューに Actors Delta Transform が選択されました。
* シーンアウトライナーにキャッシュされていない静的ライトのビルド情報が表示されます。
* 表示されるアクタをダンプするためのコンソール コマンド (DumpVisibleActors) が追加されました。
* Atmospheric fog：Precompute 変数に対してブループリントのアクセスが追加されました (エディタのみ有効です)。
* 10 進法のスナップグリッドがデフォルトで有効になり、スナップサイズが 10 cm になりました。以前のビヘイビアにリバートするためには、ビューポート設定でべき乗のスナップグリッドを有効にする必要があります。
* エンジン コンテンツがコンテンツ ブラウザでデフォルトで無効にされました。コンテンツ ブラウザでのビュー設定でこれを再度有効にすることができます。
* VirtualJoystick:UTouchInterface から値を継承します。
	* ジョイスティックのリセンタリングを防ぐ bPreventRecenter が追加されました。
	* 画面の外への移動を防ぎ、ThumbPosition が画面内になるようにクランプします。
	* 起動遅延が追加されました。
	* ジョイスティックごとに速度制御する InputScale が追加されました。
* もう少し使いやすくするために ProjectileMovementComponent Velocity のデフォルトが (1,0,0) に設定されました。
* GameModeForPIE を削除しました。 
* 含まれているウィジェットの親階層が有効化どうかを判断する SEnableBox が作成されました。
* チェックアウト / 追加などを内部処理する外部画像参照ウィジェットができました。
* アセット タイプ アクションがツールチップの別セクションにアセットのユーザーの説明を表示する機能を追加しました。
* ストリーミング レベルのあるマップの新規プロセスでの起動と再生を修正するためにレベル ストリーミングをリファクタリングします。
* ズーム レベルの鮮明度を維持し、カードカラーで原線を表示するように、グラフ パネル グリッドのレンダリング メソッドが変更されました。

#### レンダリング
* SSAO がさらに繊細になるようにデフォルトが変更されました。
* Light プロパティをクリーンアップしました。大きな変更点：点 / スポットライトがデフォルトで逆2乗フォールオフを使うようになりました。Brightness が ライトのタイプごとに新しいデフォルトの Intensity に変更されました。Radius は AttenuationRadius に名前変更されました。
* 今後のシェーダー最適化に備えて、パラメータを設定する前にシェーダーをグローバルステートにバインドすることが必要になりました。現在バインドされていないパラメータをシェーダーに設定しようとすると作成され確保されます。
* SystemSettings からほぼ全ての設定が外され、同等のコンソール変数に置き換えられました。これには、GSystemResolution.ResX と GSystemResolution.ResY 経由でコードからのアクセスが可能になったシステム解像度 (GSystemSettings.ResX/ResY) が含まれます。新規コンソール変数 (r.setres) も以前の "setres" コマンドに置き換えるために追加されました。
* クリッピング平面付近のデフォルトが 10cm に設定されました。そのため、ゲームでかなり長い表示距離を使用すると Z ファイティングが発生する場合があります。詳細は r.SetNearClipPlane を参照してください。
* PostprocessAmbient が純粋に加算になり、環境感謝やその他のもの (SSAO 以外) にオクルードされなくなりました。遥か遠くのスカイボックス テクスチャではなく、もっと面白いアンビエント (コンテンツは再調整する必要があるかも知れません) を作成するためのものになりました。
* TextRender デフォルト マテリアルが不透明に変更されました (TemporalAA クオリティの改善により、このオプションが可能になりました)。
* ScreenPercentage を使うと、コンソールのメモリ使用量が少なります。複数のフレーム上で劇的に変更したい場合には、このメソッドは向いていません。必要であれば、cvars 設定を使って、プラットフォーム / ゲーム プロパティにすることができます。
* 表示フラグのユーザビリティの変更： ゲームおよびおエディタの表示フラグ ステートを適切に切り替えられるようになりました (2 つのステートを保存および切り替えます)。
* エディタで TemporalAA がデフォルトになりました (エディタ プリミティブによる点滅が若干予想されます)。
* ScalabilitySetting パーシステンスをゲームとエディタに分けました (別々の ini ファイル)。そのため、設定の早めのロード (ゲームがまだない状態でも) が可能で、サブシステムの再初期化を防ぎます。

#### ゲームプレイとフレームワーク
* Oculus integration が更新され、レイテンシーが改善され、ポジション トラッキング デバイスがサポートされました。注記:この機能を利用するには、ポジション トラッキングの LibOVR SDK を Oculus から購入しなければなりません。
* コンポーネント配列が取り除かれました。
	* コンポーネント配列が取り除かれ、配列に新規コンポーネントを追加する必要はなくなりました。作成したコンポーネントを登録した場合は、 bAutoRegister を false に設定します。コンポーネント配列へは  AActor::GetComponents 関数でアクセスします。コンポーネントがアクタとは無関係に作成された場合を除き、そのコンポーネントはアクタの直接外側にならなければなりません。通常、アクタ以外のサブオブジェクトであるコンポーネントを持つことはできません。 
* 入力バインディングの変更
	* キー バインディングが列挙型変数ではなく名前で行えるようになりました。新しい struct FKey により名前がカプセル化され、ヘルパー関数が数多く提供されます。ヘルパー関数の使用は IsGamePadKey などへを推奨しますが、EKeys::IsGamepadKey 関数も移行しやすいと定義されます。
	* EKeys 列挙型変数が削除されました。EKeys::Type または EKey を使用した部分は、通常 FKey に変更する必要があります。
	* EKeys を使った列挙型変数の入力 (例えば EKeys::MouseX) は全てEKeys struct の static const メンバへ変換されているのでキー名を使用してもまだ機能しますが、struct なので Key の値をつけることはできなくなりました。
	* 入力設定の多くは Engine.PlayerInput から Engine.InputSettings へ移されました。最も重要な注釈：AxisConfig、ActionMappings、AxisMappings です。
* WorldFromContextGetter が削除されました。その代わり、UObjects はすべて GetWorld() というバーチャル関数を実行できるようになりました。
* APlayerCamera が APlayerCameraManager に名前変更されました。
* AxisMappings MoveForward、MoveRight、MoveUp、Lookup、Turn、 ActionMapping PushToTalk が  BaseInput.ini から削除されました。特定のゲームで必要な場合は DefaultInput.ini に追加しなければなりません。
* SoundNodeGroupControl が距離を考慮しなくなりました。その代わり、バケットごとの最大サウンド数が次のバケットに行く前に再生されることを確実します。
* SoundNode NotifyFinished の接続が再構築されました。複数のノードがウェーブ インスタンスの完了通知を要求できるようになりました。
* UMETA がその他のマークアップ マクロと整合性が取れました。特にデリミターとしてパイプではなくコンマを使うようになりました。
* Visual Studio 2013 がデフォルトで使用できるようになりました。
	* デベロッパー (and users of packaged builds) は Visual C++ 2013 Redistribution をインストールする必要があります。
	* 必要に応じて Visual Studio 2012 も使用できます (詳細は以下および CL # 1989640 をご覧ください)。
	* 特定のプラットフォームにはデバッグ用アドインが付いており、新しい IDE とは機能しません。  
		* これらのプラットフォームが検出され、プロジェクト ファイル フォーマットが自動的に 2012 にされます。
		* GenerateProjectFiles コマンド ライン上に '-2012' あるいは '-2013' を渡せば、いつでもビヘイビアをオーバーライドできます。
	* その他の特別なユースケース：
		* すべてに VS 2012 を使いたい場合は (VS 2013 をまだお持ちでないため)、UEBuildWindows.cs. で WindowsPlatform.Compiler をローカルで変更してください。
		* VS 2012 IDE はそのまま使い続けて VS 2013 にコンパイルする場合は、必ず VS 2013 がインストールされていることを確認して '-2012' を GenerateProjectFiles に渡してください。
		* VS 2013 IDE を使ってVS 2012 でコンパイルする場合、 WindowsPlatform.Compiler を 2012 に設定しますが、'-2013' を GenerateProjectFiles に送ります。
* Windows Desktop Visual Studio 2013 Express for Windows Desktop が完全にサポートされるようになりました！
* DirectX SDK の前提条件がソースも含まれています！
	エンジンをビルドするために DirectX SDK を PC にインストールする必要はなくなりました。
* Visual Studio と Xcode プロジェクト ファイルの変更
	* プロジェクト ファイルが全てのプラットフォームに対してデフォルトで生成されるようになり、 「AllPlatforms" .bat」ファイルは削除されました。
		* -CurrentPlatform を渡せば、以前のビヘイビアにもどすことができます。
	* プロジェクト ファイル：シッピング コンフィギュレーションがデフォルトで含まれるようになりました。
		* シッピング コンフィギュレーションを省くためには "-NoShippingConfigs" を渡します (プロジェクト ファイルをさらに小さく / 速くなります)。
* デバッグ ビルドがデフォルトでは CRT デバッグ (またはサードパーティ デバッグ ライブラリ) を使わなくなりました。
	* 新しい UnrealBuildTool オプションである bDebugBuildsActuallyUseDebugCRT  (BuildConfiguration.cs) が追加されました。
	* bDebugBuildsActuallyUseDebugCRT:CRT デバッグとサードパーティ デバッグ ライブラリへ依存してデバッグ ビルドをコンパイルする場合に当てはあります。そうでない場合は、実際にリリース CRT に対してコンパイルしますが、最適化はオフのままなので、デバッグは簡単です。  
	* この設定を有効にすると、デバッグでのコンパイル時にサードパーティの stats ライブラリの実際の Debug バージョンが必要になります。
* Shipping PhysX バイナリとライブラリが削除されました。
	* デフォルトですべてのコンフィギュレーションの PROFILE バージョンとリンクするようになりました。
* デフォルトのストリーム ファイルをバイナリから削除しました (steam_appid.txt) 。
	* プロジェクト用の一意の Steamworks ID でゲーム プロジェクト用に  steam_appid.txt を作成してください。
* Shipping ビルドの場合でも、デフォルトで Link-Time-Code-Generation (LTCG) が無効になりました。
* (重要) DebugGame ビルド コンフィギュレーションが開発コンフィギュレーションとエンジン バイナリを共有するようになりました。
	* DebugGame により、ゲーム モジュールが UE_BUILD_DEVELOPMENT でコンパイルされますが、最適化は無効化されます。 
	* -debug をコマンドライン上にパスして、エディタに DebugGame ゲーム モジュールをロードするように命令します。
	* Intermediate\ProjectFiles からユーザー コンフィギュレーション ファイルを削除して、UBT が正しいコマンドラインをプロジェクト設定に自動記入するようにしました。
* インストールされたビルドの Config 設定は、マイドキュメントではなくユーザーの AppData フォルダに格納されるようになりました。
* テンプレート プロジェクトに再び .uproject 拡張子が付きました。
* エンジンのバージョンにチェンジリスト番号に加えて Major.Minor.Hotfix コンポーネントが追加されました (FEngineVersion)。このバージョンは帯域外ホットフィックスを可能にするためにパッケージ内に保存されます。
	* エンジンがモジュールをロードするには、PCLaunch.rc から正しいバージョンの文字列でモジュールを再コンパイルする必要があります。
* config ファイルでプラグイン リストを有効化すると、モノリシック (単一) ビルドでプラグインをコンパイルするための決定がフィルタされるようになります。
* LevelEditor: 機能がまだ完全に実装されていないので、"Mobile Preview" メニューは非表示にされています。
* LevelEditor: "-PlatformTools" コマンドライン スイッチが削除されました。それに依存していた残りの機能は Editor Preferences の [Experimental] セクションから利用できます。
* 設定: エディタ ユーザー設定のほとんどが新規クラスへ移動され、Settings UI の別のセクションとしてエクスポーズされました。 ローカル設定を再度適用する必要があるかもしれません。
* メッセージング：UDP メッセージ送信がデフォルトでロードされるプラグイン (UdpMessaging) になりましたが、Shipping ビルドとスタンドアローン型ゲームでアクティベートするための "-messaging" コマンドライン スイッチはまだ必要です。このプロトタイプ実装がプロダクション品質に対して書き換えられています。

#### アニメーション
* anim sequence プロパティと blendspace プロパティがグラフのピンとしてエクスポーズされました。
* 既存の Anim ブループリント (デフォルトとイベント グラフはオーバーライドが可能ですが、アニメーション グラフは不可能です) から継承するためのサポートが追加されました。
* 利用可能なスペースが改善され、レベル エディタと同様に振舞うように、ペルソナのビューポートのツールバーとウィジェットがリファクタリングされました。
* Anim ブループリントのデバッグ中の各種バグが修正されました。
* ボーン名に対するスケルトン ツリー ピッカーを表示する FBoneReference 構造体のカスタマイズが追加されました。
* Animation Player ノード上のアセット ピッカーにフィルタリング ロジックが追加されたので、(スケルトンに基いて) 互換性のあるアセットのみが表示されます。

#### コア
* プラットフォームごとに中間ファイルが生成されるようになりました。
	* 生成されたファイルに対して何らかの処理を行うツールがあれば、それらは新しい場所へ変更する必要があります。
* C++ の const_cast とは別物で紛らわしい ConstCast が削除されました。
	* `ConstCast<T>` は `Cast<const T>` で置き換えてください。
* ガーベッジの収集にシリアル化を使用しないため誤解されやすいので、UObjectSerializer は UGCObjectReferencer に、 FSerializableObject は FGCObject に名前が変更されました。
* ライセンシーからのアクションを必要とするコードのリファクタリングを行いました：
	* GIsUCC は IsRunningCommandlet() (ほぼ) に名前が変更されました。
	* USpriteComponent は UBillboardComponent に名前が変更されました。
	* UMaterialSpriteComponent は UMaterialBillboardComponent に名前が変更されました。

#### プラットフォーム
* **モバイル**
	* タッチ入力インターフェース プロパティがエクスポーズされ Setting UI で編集可能になりました。
	* Android 向けのプラットフォーム固有のコンフィギュレーション ファイルのコピーが [Setting] パネル経由で追加されました。
	* [Project Settings] でのアイコン、起動画面、デバイスの方向の編集機能が追加されました。
	* クックされたゲーム用の様々なパッケージ サイズの最適化を行いました。
* **Android**
	* Package と Launch でエディタから直接 Android のサポートが有効にされました (別名 One Click Deploy) 。
	* Android をパッケージすると、 .apk の隣に .obb ファイルが作成され、 .bat がインストールされます。
	* Packaging in Distribution には SigningConfig.xml が適切に設定されなければなりません (サンプルは Engine/Build/Android/Java をご覧ください)。
	* java ファイルの .so が変更された場合のみ、.apk が生成されるようになりました。
* **Mac**
	* Mac エディタは機能しますが、 ビルド済みのバイナリは本リリースには含まれません。
		* 今のところ、Mac でエディタを動かすためには、バイナリのコンパイルが必要になります。
		* 本件については次回の QA ビルドで解決します。
	* Unreal Frontend は Mac 上で機能します。			
	**iOS**
	* iOS ビルドおよびパッケージングは Mac 上で行えます。
	* GameCenter OSS に対して様々な修正や改善が行われました。
	* 実験的な iAD サポートが iOS に追加されました。
	* iOS6で出てしまうアイコンの gloass effect が修正されました。
	* Shipping iOS ビルド向けに常にシンボル ストリップするようにしました。
	* PC iOS デプロイメント ワークフローに対し様々な改善が行われました (エディタからコードを署名し、環境変数 uebp_CodeSignWhenStaging=1 を設定しますが、 PC にインストールしたプロビジョニング ファイルに対し有効な認証が必要となります)。
	* UE3 からの iPhonePackager の各種変更点 (ファット バイナリ、スタブに事前割り当てされたサイズを超えるコード署名の修正など) がマージされました。

#### ネットワーキング
* 新しい bool 型変数の bReplicates が追加されました。アクタをリプリケートするために、ブループリントと C++ コンストラクタ に設定してください。手書きで RemoteRole=ROLE_SimulatedProxy を設定する必要がなくなりました。 


## 今後の追加事項と継続事項

#### エディタとツール
* エフェクトのない Material プロパティが正しくグレーアウトされました。
* 新規マテリアル エディタ内で一番互換性のない接続がされないようにしました。
* イタレーション中にスポーンされたアクタがそのイタレーションに正しく含まれることを確実にしました。
* SoundNode 入力の削除が元にもどせることを確実にしました。
* 入力マッピングの表示が改善されました。
* Static Switch パラメータが Material Attribute 入力を出力するようになりました。
* 入力プロジェクト設定に充実したツールチップが追加されました。
* アセットのドラッグ＆ドロップ時にはカーソル インジケータが、アクタ上へのテキストのドロップ時には警告が追加されました。
* アクタの移動をロックすれば、プロパティ マトリクスにおいて変形の編集ができないようになりました。
* カラーピッカーの再生成時にテーマがリセットされます。
* 新規プロジェクトの作成時に表示されるメッセージに IDE 名が追加されました。
* コンテンツ ブラウザ スプリッタのサイズがセッション間で維持されるようになりました。
* アセットの正しい名称を Matinee が表示するようになりました。
* SETRES コンソール コマンドがスタンドアローン ゲームの PIE で (およびコマンドライン上で ResX/ResY が指定された場合) 動くようになりました。
* アセット名を変更する場合、 `*\<>?` 文字が入力できないようになりました。
* 「コンテンツ ブラウザで検索」が直前にクリックしたコンテンツ ブラウザを使用するようになりました。
* [Play From Here] オプションがシーンアウトライナーから利用できるようになりました。
* RF_Transactional でシリアル化されている場合、アセットに RF_MarkPendingKill を追加できないようになりました。
	* オブジェクトを間違ってアンドゥ バッファへ挿入できないようにしました。
* Key struct カスタマイズのサイズ設定がより合理的になりました。
* 新しく作成されたエディタはデフォルトが Subversion のソースコントロールではなくなりました。
* 現在の BP エディタ モードのブループリント チュートリアル フロー＆オートランの適切なチュートリアルが再調整されました。
* CTRL+Backspace と CTRL+Delete (delete-to-word-boundary) ホットキーがテキストボックスで機能するようになりました。
* CTRL を押下したままマウスをキーの上に置かなくても、ユーザーは選択したキーをカーブエディタで移動できるようになりました。
* BSP ブラシがエディタの可視性設定を順守するようになりました。
* リプリケートされる設定のブループリント変数ノードにアイコンが追加されました。
* シーンアウトライナーのフッターに選択されたアクタ数が表示されるようになりました。
* [Escape Now] を押すとすべてのポップアップ ウィンドウが閉じ、 ドラッグ - スピン操作とアクタ ビューポート ドラッグ操作が取り消されます。
* ファイルパスを再インポートすると、関連したパッケージに相対して格納されるようになりました。
* 正投影ビューポート上のスケールにビジュアル キューが追加されました。
* [Reset] ボタンで [Details] パネル上でのアクタ変形を終了できるようになりました。
* Mesh Paint モードでバケツを選択対象の周りに表示させることができなくなりました。
* サーベイをキャンセルするとすぐに消えてなくなるようになりました。
* [Matinee track] メニューのオプションがトラック名と一致するようになりました。
* InterpTrack クラスに不足していた meta タグが追加されました。
* プロジェクト ブラウザの説明にプロジェクト作成が含まれなくなりました。
* 共有の interp データを使用しても Matinee がクラッシュしなくなりました。
* 新しいエディタ版からプロジェクトを開くと、見事に失敗します。
* オブジェクト名に「`」を含むことができなくなりました。
* サウンド キューの「Stop」がストップのシンボルのようになりました。
* [Show Folder] オプションはコンテンツ ブラウザ以外では無効にされました。
* スタティック メッシュ エディタの LOD メッセージが LOD Index を正しく表示するようになりました。
* シーン アウトライナーのソートの矢印がはっきり表示されるようになりました。
* デフォルトのキーバインディングがユーザー設定に正しく表示されるようになりました。
* アセットがロードされるとフィルタがアセットとして優先されるように、コンテンツ ブラウザのアセットが更新されました。
* 正投影ビューポートがビューモードを正しく表示するようになりました。
* 言語 / 地域を変更するとユーザーに再起動を促すようになりました。
* スケルタル メッシュ アクタのクラス ピッカーがスケルトンによる選択プールを正しく制限するようになりました。
* Anim graph ノードの [Details] パネルが子も一緒に正確にプロパティを表示するようになりました。
* FBX window のツールチップが改善されました。
* ペルソナでモーフターゲットの取り消しができるようになりました。
* スケルタル メッシュの情報がペルソナ ビューポートにデフォルトで表示される設定になりました。 
* ペルソナでの通知がエディタの削除コマンドに反応するようになりました。
* Blendspace シーケンス アセットはペルソナのサンプルから直接開けるようになりました。
* FBX エクスポート ファイルの位置選択が改善されました。
* Blendspace ノードの削除と取り消しが正常に機能するようになりました。
* アニメーション グラフのステートマシンはコピーされた時に名前を維持するようになりました。
* 充実したツールチップが多くの Animation graph ノードに追加されました。
* 再生タイムラインは重複したフレーム番号を表示しなくなりました。
* ブループリント エディタとペルソナのカラーピッカーが改善されはっきり見えるようになりました。
* 頂点アニメーションはフィルタ機能がなくなりました。
* PhAT でのフライト制御は 変形モード選択とのコンフリクトを発生しなくなりました。
* 基本ポーズがリターゲット ソースと呼ばれるようになりました。
* UnrealVS は VS2012 Pro と VS2013 Pro 向けにビルドされるようになりました。Engine/Extras でそれぞれ専用のフォルダで別々にビルドされます。
* アンリアル エディタ プラグインのベータ版フラグはアンプラグ ファイルでプラグイン デベロッパーが設定することができます。
	* ベータ版のプラグインはプラグイン マネージャで有効にされると警告が表示されます。
	* ベータ版の情報はプラグイン マネージャでバージョン番号と一緒に表示されます。
* **ランドスケープ**
	* カメラを動かしている間、ランドスケープ ブラシは非表示になりました。
	* デフォルトのランドスケープのスケールが 100、100、100 に変更されました。
* シューティング ゲームのスポーン ポイントを調整してボットがもっと広まるようにしました。
* シューティング ゲームのボットのビヘイビアが修正され、発砲できるようになりました。
* シューティング ゲームのスコアボードに修正をいろいろ加えました。
* ビークル ゲームでブースト ピックアップが再スポーンされるように変更されました。
* ビークル ゲームの hovership におけるゲーム インターフェースの使い方がリファクタリングされました。
* スレート：スレート コア内部のウィジェットが FEditorStyle に依存しなくなりました。
* ShooterGame、StrategyGame、VehicleGame：Slate Widget Style アセットを使用するように変換され、 FEditorStyle に全く依存しなくなりました。
* インポート：FBX ログメッセージが Log ウィンドウに送られるようになりました。 
* TextureEditor: テクスチャ エディタのツールバーからテクスチャを再インポートできるようになりました。
* エディタの翻訳 (作業進行中): 
	* 取り消し / やり直しがサポートされます。
	* 実際にデータが変更された時のみファイルへ保存されます。
	* 列の挿入/削除/複製ができないようになりました (array UProperty 上に EditFixedSize タグが必要でした)。
	* 履歴がロードできない、またはソース コントロールが無効だとエラーが表示されます (トースト機能 + メッセージログですが、メッセージログは表示されません)。
	* 現在のマニフェストやアーカイブがロードできないとエラーが表示されます (トースト機能 + メッセージログで、メッセージログが表示されます)。
	* ファイルのチェックアウト / 保存に失敗するとエラーメッセージ、成功すると通知が表示されます。
	* 保存のたびにパーフォース上のアーカイブをチェックアウトするのではなく、私達がチェックアウトしていることを覚えておいてください。
	* [Find in Content Browser] とメニューアイテムが削除されました。
	* タブの名前を「TranslationDataObject_1」から「Language Name - Project Name - Translation Editor」に修正しました。

#### レンダリング
* 反射環境とスカイ スペキュラ上の最小ミップが削除され、ラフなマテリアルが完全にディフューズされないようになりました。
* 反射環境が機能レベル SM4 に対応しました。
* LightAsIfStatic が可動スタティック メッシュ上で再び使用できるようになりました。
* スカイライトがコンストラクション スクリプトにおいて正しく再キャプチャするようになりました。
* 選択された BSP サーフェスが、エディタの中の他のオブジェクトのビジュアル化と一致してビジュアル化されるようになりました。
* 実験的な機能だった TemporalUpsample が削除されました (既存フレームから中割りフレームの再構築)。
* 実験的な機能だった r.MSAA.DeferredMode が削除されました (メモリ インテンシブ  AA ソリューション)。
* BlurGBuffer 機能が削除されました (TemporalAA add NormalRoughnessToAlpha はほとんど必要なかったため、使用することもほとんどありませんでした)。この機能はStereoRendering では動きませんでした。
* EngineShowflags 定義コードがリファクタリングされました。
	* フラグが特定のビルド コンフィギュレーションに固定されている場合、コンパイラの最適化が可能になります。 
* **最適化** 
	* プリミティブがオブジェクト シャドウごとにキャストする必要がある場合のみ、可動指向性ライトに対するプリミティブ / ライトのインタラクションが作成されます。
	* シングルスレッド処理のレンダリング パフォーマンスに対して、マイナーな改善がいろいろなされました。
	* グローバルな動的頂点とインデックス バッファからの割り当ては、小さめのバッファのプールを使って強化されました。
	* モバイル向けシェーダーが多数最適化されました。
	* 描画リストが描画ポリシー内で手前から奥に向かってソートできるようになりました。これにより、 非表示のサーフェスを削除しなくてもモバイルデバイス上でのパフォーマンスが大幅に改善されます。
* **Android** 
	* Android デバイス上でモザイク フォールバックを使用すると、 画面解像度が 1024 にクランプされます。精度に限界のある GlFragCoord では、これが必要となります。
	* Kindle Fire HDX と Galaxy S4 が FP16 レンダー ターゲットを使用するようになりました。

#### ブループリント
* ブループリント パレット / コンテクスト メニュー内のブループリント ノードの分類が改善されました。
	* ノード分類を整理するための初回パスを作成しました (ノードはより見つけやすくしつつカテゴリ数を減らす目的)。完全ではありませんが、イタレートし続けているので徐々に良くなっています。
* ブループリント コンポーネント 変数が Default カテゴリに割り当てられるようになりました。
* 配列のエレメントをオブジェクト インスタンスへシリアル化する前に内部タイプ情報が完全にロードされていることを配列プロパティが確認するようになりました。
* ブループリント アセットの取り込み中、無駄なアサートが取り除かれました。
* ブループリントの [Variable Details] パネルに Transient および Save Game フラグが追加されました。
* BlueprintType が継承されないように、NotBlueprintType のサポートが UClass headers に追加されました。

#### ゲームプレイとフレームワーク
* DeferStartupPrecache と PrecacheStartupSounds が FAudioDevice に追加されました。これにより、設定の読み込みが可能になるまで、ゲームは起動サウンドのキャッシュを遅らせます。実行時に AudioDevice の MaxChannels を修正するために SetMaxChannels が追加されました。
* Engine.ini においてサブストリング列挙型変数のリダイレクトを実行する機能が追加されました。例: 

		+EnumRedirects=(EnumName="ENewEnum",OldEnumSubstring="EOldEnum::",NewEnumSubstring="ENewEnum::")

* 使用しないコマンドレットを多数削除しました。
* UWorlds が RF_Public と RF_Standalone になりました。UWorlds をアセットのように処理し、コンテンツ ブラウザ内で管理するための準備です。
* ライトマップが [World settings details] パネル経由で表示可能になりました。 
* レプリケーション システムの安定性が若干改善されました。
* Navmesh の安定性が若干改善されました。
* ブループリントの CDO はロード時に再生成された後、 PostLoad を呼び出させるようになりました。
* オーディオ ハードウェアが見つからない、または初期化に失敗すると、オーディオ デバイスが削除されるようになりました。さらに、オーディオ デバイスはコマンドレット内では初期化されなくなりました。
* ブループリントの再コンパイルのパフォーマンスが若干改善されました。
*クロスの安定性が若干改善されました。
* ペルソナの Anim ノードのツールチップが追加されました。
* ペルソナ ビューポートの [Show] メニューを整理しました。
* GetSocketLocalTransfrom と GetSocketWorldTransform をマージしました。
* オブジェクトの置き換え時にエディタが手動でオブジェクト参照をリフレッシュできるイベントが追加されました。
* [Create Anim Blueprint] ウィンドウに磨きをかけました (デザインの変更)。
* [Assign skeleton] ウィンドウに磨きをかけました (スケルトン選択を変更して、プレーンなリストボックスではなくアセット ピッカーを使用するようにしました)。
* "Retarget Anim Blueprints" に磨きをかけました (何が起こっているのかをユーザーにさらに伝えやすくするための通知が追加されました)。
* ブループリント ツリーが変更され、オブジェクト名ではなく表示名が使用されるようになりました。
* 小さいゲーム モジュール用のシングル ソース ファイル上での反復コンパイル時間が短縮されました。
	* ゲーム モジュールが常にプリコンパイルされたヘッダを使用するようになりました (イタレーションの高速化)。
	* これまでは、モジュール数が 8 ユニット ソース ファイルを超えるゲームのみで使用されてきました。
		* このための新規設定：BuildConfiguration.bForcePrecompiledHeaderForGameModules.
	* 小さなゲーム モジュールではユニティ ビルドは使用しなくなりました (イタレーションの高速化)。
		* ソース ファイルが 32 未満のゲーム モジュールは強制的にユニティ モード以外になります。
		* このための新規設定：BuildConfiguration.MinGameModuleSourceFilesForUnityBuild.
* プログラム モジュールのデフォルトでは、共有の PCHs は使用されなくなりました (PCHUsageMode を使ったオーバーライドが可能)。
* CodeView が実験的なエディタ設定に変更されました。デフォルトでは無効です。
	* クラス名上でダブルクリックすると CodeView が C++ コードへジャンプするようになりました。
* UnrealBuildTool:ユーザーの CPU コア以上のプロセスをスポーンしないでください　(ローカル プログラムのみ)。
	* これによりシステム リソースが自由に使えるようになりますが、ビルド時間が短縮できる場合もあります。その他の場合、ビルド時間は実際改善されます。
* ほとんどのエディタ ウィンドウ アニメーションはデフォルトで無効になっています ([Editor Look and Feel] セクションで切り替えできます)。
* エディタの [New Project] と [Open Project] ダイアログが大幅に改善されました。
* スカイボックスを修正し、合成された Lightmass importance volumes が含まれるようになりました。
	* Automatic importance volume 用の境界を計算する場合、軸に対して 10000 を超えるメッシュは無視されるようになりました。
* コンテンツブラウザ：テクスチャがサムネイル プレビュー シーンにストリームしないように修正されました。
* Visual Studio がない場合のエラーヘルプが改善されました。
* DeviceManager: 各種アップグレードにより新機能が追加されユーザービリティが向上しました。デバイス検出が見直されました。
* DeviceManager: Windows デバイス向けにデバイス シャットダウンが実装されました。  ローカル PC の再起動 / シャットダウン時にユーザーに警告を出します。
* SessionFrontend: ユーザビリティがいろいろ改善されました。
* SessionFrontend: [Game Launcher] タブは Session Frontend から削除され、Window メニューからアクセス可能な主要タブとなりました。
* Messaging: メッセージ エンドポイントをゲーム以外のスレッドから安全に破棄するために FMessageEndpoint::SafeRelease() が追加されました。使用サンプルのコードベースを検索します。
* MessagingDebugger: 各種アップグレードにより新機能が追加されユーザービリティが向上しました。
* MessagingDebugger: 現在、Messaging Debugger UI はスタンドアローン UFE からアクセスできなくなっています。次回のリリースで修正されます。
* PlayInEditor: PIE 設定の前定義されたスクリーン解像度が INI で設定可能になりました。
* PlayInEditor: レベル エディタの "Launch on Device" 機能が整理され安定しました。
* PlayInEditor: モバイル エミュレータを使ってスタンドアローン プロセスでゲームを起動する [Mobile Preview] オプションが追加されました。
* ColorPicker: 各種ユーザビリティが改善され、直近のステートが記憶されるようになりました。
* Slate: SSlider ウィジェットの性能 (垂直方向のスライダ、ノブの字下げなど) が改善されました。
* General: 選択した C++11 機能を使用するためのコード変換を継続しました (NULL -> nullptr、auto in for-loops など)。
* 出力ログで選択された行が読めるようになりました。 

#### コア
* Added LOD レベルの生成が World Browser に追加され、Simplygon が必要になりました。
* TCircularQueue の実装が完了しました。
* Opus ボイス コーデックがアップグレードして v1.1 になりました。
* エンジン外部の深いインストールパスとプロジェクトパスの処理に対し一層努力しています。
* Const-correctness が修正されました。
* TArray と TIndirectArray のビヘイビアをさらに統一するための新機能と修正が追加されました。
* UnrealHeaderTool からのエラー ハンドリングとエラー メッセージが改善されました。
* UnrealHeaderTool パースのいくつか修正されました。
* ビルドが高速化しました。
* StringCast がヌル ポインタを処理するようになりました。
* TMap/TSet/TMultiMap イタレーションが修正されました。
* リダイレクト初期化コードが、.ini ファイルから無くなっている CoreUObject.Metadata セクションを処理するようになりました。
* UnrealHeaderTool で生成したインクルードがノーマライズされました。
* ツールチップのパースが改善されて、====== や ------ のみの行などの余分な '境界' が除外されました。
* ツールチップは、これまでなかったプロパティ タイプに対してパースされます。

#### ネットワーキング
* 古い / 破損した ping コードは取り除かれました。
* サーバー認証の ping コードが新しく追加されました。
	* クライアントの ping を計算するのに低レベルのネット ドライバーの ACK を使用し、値で不正行為をする能力を減らすバリデーションが追加されました。
	* 新しい ping コードで作業しやすくするために、高レベルのプレイヤー ステート コードで ping のスムージングを調整しました。

#### プラットフォーム
* **Mac**
	* OS X でのプロジェクト作業にコードが追加されました。
	* ファイルを検知する場合、Finder で親フォルダを開きそのファイルを選択するか、フォルダに対してそれらを開きます。
	* リンカのサイレント障害が原因でMac 上でクラッシュする C++ タイプ のいくつかを明確にしました。 
	* Mac OS X 出力ログを新規のエントリまでスクロールするようにしました。
	* Mac OS X でズームされたウィンドウの状態をキャッシュします。 エディタを起動すると   isZoomed 用の objc_msgsend がプロファイラの一番上にきます！
	* Mac 上でウィンドウ タブがデタッチしやすくなりました。
	* Mac OS X 上でのエディタ起動時にウィンドウが表示されるようになりました。
	* Mac OS X 上で最小化されたウィンドウがマウス イベントを横取りしないようにしました。
	* OS X 上でウィンドウを再形成しようしてもクラッシュしなくなりました。
	* OS X 上でプロンプト ウィンドウを閉じた後でもクラッシュしなくなりました。
	* MacApplication がない場合でも、出力ログ ウィンドウが OS X 上でコンテンツを開き表示することが確認されました。
	* サブ エディタを使用しても、レベル ビューポート グラフィックが OS X から消えてしまわなくなりました。
	* 一時的なスクリーン空間の反射のレンダリング時に破損が起きないようにしました。
		* GLSL で異なる NAN/INF の条件に対応するために、Mac OS X 上で NAN の抑制を有効化しなければなりません。
	* パーティクルのレンダリング時に、テクスチャ バッファのクラッシュを避けるために、低いシェーダー モデルに対してもバインドされます。
	* glMapBuffer と CPU & GL の同期を避けて新しい拡張子が使えない場合、PBO unpack の後に PBO pack を使用してテクスチャ ミップをコピーします。
	* エディタにマウスをかざすと遅くなる原因の 1 つが解決されました。
	* OpenGL に対して非常に遅い glReadPixels パスを取る RHIReadSurfaceData を呼び出すかわりに、バイト バッファへヒット プロキシ データをキャッシュするようにしました。
	* それらをサポートしているすべての GL 上でシームレスなキューブマップが有効になりました。
	* Mac OS X 上で SSR を使用する時のビューポート エッジの歪みを解消しました。 
	* CPU のリードバックテクスチャのロックの高速化、Mac OS X 上で一般的なテクスチャのリードバックおよび HZB パフォーマンスに対応対処しました。
* **Android**
	* Android の場合、バックバッファの形式は、R5G6B5 よりも R8G8B8 の方が好ましくなりました。
	* Android がマルチスレッドになりました (起動時に適切な CPU コア数をチェックします)。
	* ハイエンドな Qualcomm Adreno GPU に OpenGL ES 3.0 シェーダーが使用されています。
	* GPU のフレーム時間が `STAT UNIT` で測定可能になりました。ドライバーに問題のあるデバイスもあるためデフォルトでは無効になっていますが、 CVar `r.DisjointTimerQueries` を 1 に設定すれば有効になります。
	* Android のコントローラーとキーボードが初めてサポートされました。
	* Android の一時停止 / 再開のビヘイビアが整理されました。　
	* Android のビルドはユーザーが生成したスタンドアローン型のツールチェーンに依存しなくなりました。UBT は NDK ツールチェーンを直接呼び出します。
	* NSight 1.5 以降がインストールされていると、Android デバッグ スタブ プロジェクトは作成されなくなりました。

#### アニメーション
* **アニメーション**
	* スケルトン：様々な印を汚れの問題として修正したので、正当な原因以外ではスケルトンは汚れないはずです。 
		* 新規のアニメーション通知がアニメーションに追加された場合、スケルトンを保存する必要がなくなりました。
	* ModifyBone SkeletalControl 名を明確にするために TransformBone に変更しました。


## 周知の問題

* Mac エディタは機能しますが、 ビルド済みのバイナリは本リリースには含まれません。今のところ、Mac でエディタを動かすためには、バイナリのコンパイルが必要になります。



