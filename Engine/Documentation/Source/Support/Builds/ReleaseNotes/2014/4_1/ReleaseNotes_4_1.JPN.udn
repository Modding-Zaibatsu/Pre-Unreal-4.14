INTSourceChangelist:2735872
Title:Unreal Engine 4.1 リリースノート
Crumbs:%ROOT%, Support/Builds
Description:
Availability:Public
version: 4.1
order:1
[TOC(start:2 end:2)]

[PUBLISH:Licensee]
## ビルド情報

[REGION:simpletable]
| アイテム | 情報 |
| ---- | ---- |
| **Labels** | [INCLUDE:#labels] |
| **Built from Changelist #** | 2055431 (//depot/UE4-QA/Promotable-CL-2055431) |
| **Branched from Changelist #** | 2055192 (//depot/UE4-Releases) |
| **Branched from Changelist #** | 2039046 (//depot/UE4) |
| **Visual Studio Version** | Microsoft Visual Studio 2012 Version 11.0.60610.01 Update 3 |
| **DirectX** | June 2010 |
[/REGION]

<!--
[EXCERPT:Labels]
QA_APPROVED_UE4_BUILD_2014  
QA_APPROVED_UE4_BUILD_CURRENT  
QA_APPROVED_UE4_BUILD_MINIMUM
[/EXCERPT:Labels]
-->
[/PUBLISH:Licensee]

## 主な新機能

#### プラットフォーム

[PUBLISH:Rocket]
##### PlayStation 4 と Xbox One をサポート

* PlayStation 4 と Xbox One に完全に対応しました。

	![](xboxone_ps4.png)

* Microsoft または SCE で開発者登録しているデベロッパーは、Xbox One または PlayStation 4 のためのエンジン ソースをそれぞれ利用できるようになりました。
* 現在のところ、PlayStation 4 または Xbox One にプロジェクトをデプロイするには、Windows コンピュータを使って GitHub から得たソースをコンパイルする必要があります。 
[/PUBLISH:Rocket]

##### SteamOS/Linux をサポート (プレビュー版)

* ゲームをパッケージ化して、SteamOS または Linux にデプロイできるようになりました！

	![](steamos_linux.png)

* 現在のところ、SteamOS または Linux にプロジェクトをデプロイするには、Windows コンピュータを使って GitHub から得たソースをコンパイルする必要があります。

#### マーケットプレイスのコンテンツ

[PUBLISH:Rocket]
##### Elemental デモ

* PlayStation 4 上でご覧にいれたあの素晴らしいアンリアルのデモを覚えていますか？Elemental は、アンリアル・エンジン 4 のレンダリング機能を紹介する驚異のデモです。最高性能を誇るそのレンダリング機能には、動的な光源処理とシャドウイング、リアルタイム リフレクション、GPU によるパーティクル エフェクトが含まれています。

	![](Elemental.png)

[/PUBLISH:Rocket]

#####新たなコンテンツ サンプル レベル Math Hall

* Math Hall では、基本的なベクター演算と各種数学関数のコンセプトについて説明しています。

	![](math_hall.png)

#### 新たなプロジェクト テンプレート

##### Flying Template (飛行テンプレート) と Rolling Template (回転テンプレート)

* キャラクターが単純な飛行と回転の動きを示す新たなプロジェクト テンプレートを 2 つ作りました。

* Flying Template (飛行テンプレート) (C++ およびブループリント) は、シンプルな飛行の動きを表現します。

	![](flying_template.png)

* Rolling Template (回転テンプレート) (C++ およびブループリント) は、プレイヤー キャラクターとして物理ベースで回転するボールを表現します。

	![](rolling_template.png)

#### エディタとツール

##### 新たな内蔵型エディタ チュートリアル

* エディタ内にチュートリアルが新たに内蔵されました。チュートリアルは、次のような機能を初めて使用する場合に自動的に表示されます。

	[REGION:raw]
	![](editor_tutorials.png)
	[/REGION]

* **カスケード パーティクル エディタ チュートリアル** ではパーティクル システムとエフェクトを作成する際に使用される基本的なインターフェイスとコンセプトを紹介しています。
* **マテリアル エディタ チュートリアル** では、マテリアル作成の基本が学べます。
* **スタティック メッシュ エディタ チュートリアル** では、スタティック メッシュをセットアップするためのインターフェイスとツールについて解説しています。
* **ペルソナ アニメーション エディタ チュートリアル** では、さまざまなアセットのタイプとモードための各種 UI 要素とコンセプトについて説明しています。


##### シーン アウトライナー フォルダ システム

* シーン アウトライナーを使って、アクタをフォルダに整理できるようになりました。

	![](scene_outliner_folders.png)
 
* [create] ボタンを使って、新たなフォルダを作り、現在選択しているアクタ (複数も) をそのフォルダに含めることができます。
* フォルダ上でビジビリティを切り替えると、その中のすべてのアクタがその影響を受けます。


##### エディタ ニュース フィード

* エディタにニュース フィードが内蔵されました。エディタ右上に新たにできたボタンをクリックするとアクセスできます。
* ニュース フィードによって、マーケットプレイスの新たなコンテンツや、動画チュートリアル、ブログの投稿について知ることができます。

	![](news_feed.png)

#####Asset Deletion Assistant (アセット削除アシスタント)

* この機能を使用すると、インタラクティブに参照を調べ、修正できるようになるため、簡単にアセットを削除できます。 

	![](DeleteAssetTool001.png)

* ディスクやメモリ上でまだ参照されているアセットをすっきりと整理できます。
* 参照されているアセットをクリックすると、そのアセットに進み、手動で修正できるようになります。
* 参照を置き換えることができます。(正式には、Consolidate <統合> と呼ばれます。)  
* 強制削除機能が備わっています。また、キャンセルしてユーザー自身で参照を扱うことができます。
* 複数同時に削除可能です。
* アセットが他のアセットから参照されていても、それらの他アセットも削除されているならば、問題が生じることはありません。
* 参照のナビゲーション
* 参照されているアセットをダブルクリックするとエディタが開きます。
* 開いているマップでアセットが参照されている場合、そのマップのアセットをダブルクリックすると、開いているマップの中でそのアセットがあるところまでナビゲートしてくれます。

#####ディレクトリをドラッグアンドドロップしてインポート 

* テクスチャやメッシュ、アニメーションが入っている複数のフォルダを選択して、直接コンテンツブラウザの中にドラッグすると、フォルダの中のものすべてがインポートされるようになりました。 

	![](DragAndDrop.png)

##### Undo History (元に戻す 履歴) ウィンドウ

* エディタで、元に戻す履歴にアクセスできるようになりました。

	![](UndoHistory02.png)

* Window メニューから Undo History (元に戻す履歴) ウィンドウを開くことができます。(Window > Undo History)。     

##### New:ビューポート操作のリマップ 

* ビューポートのための WASD 操作をユーザーがリマップできるようになりました。 
* これらの設定は、Editor Preferences (エディタの設定) > Keyboards Settings (キーボードの設定) > Viewport Navigation (ビューポート ナビゲーション) に置かれています。 

	![](ViewportControls.png)

##### New:デバッグ ヒストグラムによる視覚化

* ワールド内で浮動小数点値のヒストグラム (グラフ) を描画できるようになりました。

	![](debug_histogram.png)

* ゲームのプロパティ値やその他の事柄を時間経過とともに記録し、ワールド内の特定の位置にヒストグラムとして視覚化できます。
* C++ コードとブループリントの両方から、値を記録し、ヒストグラムを描画できます。

	![](debug_histogram_nodes.png)

* 注記：この機能はデバッグのために作られています。デバッグ描画を通常のゲームプレイに利用することは推奨されません。

##### Translation Editor (翻訳エディタ) (プレビュー版)

* Translation Editor (翻訳エディタ) を使うことによって、ゲームコードやアセット内の文字列のために翻訳したものを簡単に編集できるようになります。   

	![](TranslationEditor03.png)

* 注記：このツールは、まだ作成作業が進行している早期版です。Experimental (実験) セクションの Editor Preferences (エディタの設定) で有効化できます。

### ブループリント


#####グラフ内の接続にジャンプ

* ピンを右クリックし、接続にジャンプできるようになりました。

	![](JumpToConnections.png)

#####クラスの動的キャスティング 

* ブループリント内で互換性のある型のオブジェクト同士を安全に変換できるようになりました。

	![](DynamicCasting.png)

##### ブループリント コンポーネントの編集を改善 

* ブループリント エディタのウィンドウ間でコンポーネントのノードをドラッグアンドドロップできるようになりました。
* 上記操作によって、元のコンポーネントから属性を継承する新たなコンポーネントの変数が新たなブループリントに作成されることになります (ただし、名前の衝突を避けるため、変数名は継承されません)。
* コンポーネントの付属/分離操作について元に戻す/やり直しが可能になりました。
* この機能は、Make New Scene Root (新規シーン ルートの作成) の操作にも適用されます。


## 重要なアップグレード ノート

#### プロジェクトのアップグレード

[PUBLISH:Licensee]
プロジェクトが UE4 ディレクトリの外部にある場合、新規ビルドでプロジェクトを機能させるためには、いくつかのステップが必要になる場合があります。
[/PUBLISH:Licensee]
[PUBLISH:Rocket]
4.0 によるプロジェクトを 4.1 で動かすためには、操作が必要になる場合があります。
[/PUBLISH:Rocket]

- ブループリントのみのプロジェクトをアップグレードする場合 
    * 通常どおりに新たなエディタに既存のプロジェクトをロードできます。
    * 注記：ブループリントの API の中にはバージョン間で変更されたものもあるため、コンテンツで警告を受ける場合があります。詳しくは **API の変更** のセクションをご覧ください。

- C++ コードによるプロジェクトをアップグレードする場合 
    * C++ プロジェクトを新たなバージョンのアンリアル・エンジンのために再コンパイルする必要があります。
    * ゲームのフォルダから .uproject ファイルを見つけ、右クリックします (Mac の場合は、Command + クリックでも可能です)。
    * **Switch Unreal Engine Version (アンリアル・エンジンのバージョンを切り替える) を選択 ->   4.1**	(Mac では、Services メニュー内にあります)。
    * 右クリックして新たな C++ プロジェクト ファイルを作成し、通常通りゲームを再コンパイルします。
    * 注記：注記: C++ の API の中にはバージョン間で変更されたものもあるため、コンパイル エラーが生じる場合があります。詳しくは **API Changes (API の変更 ) ** のセクションをご覧ください。

ご不便をおかけして申し訳ございません。将来のバージョンのために、現在アップグレード プロセスを簡略化する作業を行っております。


#### 既知の問題

- Xbox One SDK がインストールされている場合、名前にアンダースコアがあるプロジェクトを Visual Studio で作成すると失敗する。
- 親ディレクトリのどれかにスペースが含まれているプロジェクトは、 Xbox One と Playstation 4 が完全に対応しきれていない。 
- Steamworks が Mac でサポートされていない。現在作業が進行中です！
- ShooterGame が、専用サーバーとしてコンパイルされるために、GitHub からソースを必要とする。
- First Person (ファーストパーソン) テンプレートから作成されたプロジェクトが、PlayStation 4 でクラッシュする場合がある。
- Launch On ボタンを使用して Mac にデプロイすると、Elemental デモがクラッシュする。
-Game Center にサインインしている場合、Tappy Chicken が起動時に iOS でクラッシュする。


#### 謝辞

今回のリリースのコードに貢献していただいた素晴らしいデベロッパーの方々全員に感謝を申し上げます！　

* **Allar (Michael Allar)**
    * D3D11RHI をサポートするための共有テクスチャ リソースを追加。 [Added Shared Texture resource support for D3D11RHI](https://github.com/EpicGames/UnrealEngine/pull/6)

* **AndrewScheidecker (Andrew Scheidecker)**
    * Actor->Acor K2 のリダイレクトのタイポを修正。 [Fix Actor->Acor K2 redirect typo](https://github.com/EpicGames/UnrealEngine/pull/28)

* **cdietschrun**
    * Actions taking a object (オブジェクトを取るアクション) のメッセージの修正。 [Fix "Actions taking a object" message](https://github.com/EpicGames/UnrealEngine/pull/12)

* **clide**
	- Mac の GL を修正。 [Mac GL Fix](https://github.com/EpicGames/UnrealEngine/pull/5)

* **dkjer (Donald Kjer)**
    * ケースセンシティブなファイルシステムの修正。 [Fixes for case-sensitive filesystems](https://github.com/EpicGames/UnrealEngine/pull/11)

* **DiCoJamesTan (James Tan)**
    * ChildActorComponent に関する添付バグを修正。 [Fix attachment bug with ChildActorComponent ](https://github.com/EpicGames/UnrealEngine/pull/20)

* **fxtentacle (Hajo Nils Krabbenh.ft)**
    * Mac における Azimuth & Elevation の計算を修正。 [Fix Azimuth & Elevation calculation on Mac](https://github.com/EpicGames/UnrealEngine/pull/9)

* **Kamayuq**
    * Mac の UnrealBuildTool を修正。 [Mac UnrealBuildTool Fix](https://github.com/EpicGames/UnrealEngine/pull/3)

* **Kyle Rocha (kylawl)**
    * 平面の交線の関数を KismetMathLibrary に追加。 [Add plane interct function to KismetMathLibrary](https://github.com/EpicGames/UnrealEngine/pull/14)

* **PostalDude (Frederic Lauzon)**
    * モジュール リンカの出力ファイルの無効なパスを修正。 [Fix invalid module linker output file path](https://github.com/EpicGames/UnrealEngine/pull/7)

* **sbc100  (Sam Cleeg)**
    * UnrealBuildTool におけるビルドの警告を修正。 [Fix build warnings in UnrealBuildTool](https://github.com/EpicGames/UnrealEngine/pull/16)
    * Linux におけるコンパイルの警告を修正。 [Fix linux compile warnings](https://github.com/EpicGames/UnrealEngine/pull/19)

* **wshearn (Wesley Hearn)**
    * HTML5 による出荷クライアントのビルドを修正。 [Fix HTML5 Shipping Client build](https://github.com/EpicGames/UnrealEngine/pull/15)

## リリースノート

#### マーケットプレイスのコンテンツ

* **ShooterGame**:Xbox One と PlayStation 4 へのデプロイをサポートするようになりました。

	![](shooter_game.png)

* **Memory Game (記憶ゲーム)**: カード合わせの記憶ゲームが、まるごとブループリントで作成されました。モバイル デバイスに最適化されています！

	![](memory_game.png)

* **Effects Cave (エフェクトの洞窟)**:本物の洞窟探検もこれほど面白くはないでしょう！Effects Cave を探検すると、美しいものに出会います。それらは、ワールドを豊かにするために作ることができるものです。GPU によるパーティクル、動的にリットされるスパーク、かすかにたなびく煙などなど、ビジュアル エフェクト エディタのカスケードを使用すると、無数のディテールを積み上げることができるようになるのです。

	![](effects_showcase.png)

* **リアルなレンダリング**:UE4 の物理ベースのマテリアル システムや、改善されたグローバル イルミネーション システムのライトマス、さらにフォトメトリック ライティングを使用することによって、リアルな環境を簡単に構築したり、建築のビジュアライゼーションを模倣することができるようになります。Oculus Rift に対応！

	![](realistic_rendering.png)

* **ブループリント オフィス**:レベルのデザイン ツールや、自動制御セキュリティ システム、高度な AI の振る舞いなど、ブループリントの多様な使用事例を示しています。各使用事例には、簡潔なゲーム内説明が含まれています。

	![](blueprints_demo.png)

#### 学習リソース

* **動画チュートリアル**
	* New: [Multiplayer Networking Video Tutorials](https://www.youtube.com/playlist?list=PLZlv_N0_O1gYwhBTjNLSFPRiBpwe5sTwc) (マルチプレイヤー ネットワーキング動画チュートリアル) (6 巻) Billy Bramer 著
	* New: [Blueprint Video Tutorials](https://www.youtube.com/playlist?list=PLZlv_N0_O1gaG5BW72It4chjhypxIO9ZB) (ブループリント 動画チュートリアル) (新作 7 巻) James Golding および Mike Beach 著
	* New: [Third Person Blueprint Game Setup Tutorial](https://www.youtube.com/watch?v=GWbd0Wowwnk&list=PLZlv_N0_O1gZS5HylO_368myr-Kg2ZLwb&index=2) (サードパーソン ブループリント ゲーム セットアップ チュートリアル) (15 巻) Zak Parrish 著
* **文書によるチュートリアル**
	* New:Particle System Tutorials: (パーティクル システム チュートリアル)VFX [Lesson 1](https://wiki.unrealengine.com/Visual_Effects:_Lesson_01:_Material_Particle_Color), [Lesson 2](https://wiki.unrealengine.com/Visual_Effects:_Lesson_02:_Using_Depth_Fade) Tim Elek 著
	* New: [Matinee Tutorial](https://wiki.unrealengine.com/Matinee_Basics:_Creating_Your_First_Matinee_Sequence) (マチネ チュートリアル)  Greg Mitchell 著
* **ドキュメンテーション**
	* **アンリアル エディタのマニュアル**
		* New:[Blueprint Cheat Sheet](Engine/Blueprints/UserGuide/CheatSheet)
		* New:[Light Propagation Volumes](Engine/Rendering/LightingAndShadows/LightPropagationVolumes)
		* New:[Preview Shadows](Engine/Rendering/LightingAndShadows/Shadows#シャドウのプレビュー)
		* New:[Pivot Painter](Engine/Content/Tools/PivotPainter)
		* New:[Mac Viewport Controls クイック リファレンス](Engine/UI/LevelEditor/Viewports/ViewportControls) 
	* **プログラミングのガイド** 
		* New:コードブロックのハイライト
		* ランディングページの再編成を更新。
		* データ駆動型ゲームプレイを更新。
		* アクタのスポーン情報を修正。
		* コンポーネントの配列の参照を修正。

[PUBLISH:Rocket]
#### EULA (エンドユーザーライセンス契約書)

* ライセンシーは、Example Code (Samples フォルダと Templates フォルダにあるコード) を公に配布することが許可されるようになりました。これはソース コードを公に配布することを禁止する規則の例外です。
* ライセンシーのロイヤルティの義務に関して以下の例外を追加しました。:
* ライセンシーは暦四半期の一期につき各製品の粗利益として得られる 3,000 ドルまでの金額に対してロイヤルティを支払う必要はありません。
* 暦四半期の一期につき製品の利益が 3,000 ドル未満の場合は、ライセンシーは当該製品の収益を報告する必要はありません。
* 「製品」に授与された賞に起因する賞金にはロイヤルティは課されません。
* ライセンシーは最長 30 行までの「ソースコード」の断片を、そのコードの断片の内容について議論する目的のために一般に公開されたフォーラムで投稿することが認められます。

[/PUBLISH:Rocket]

[PUBLISH:Rocket]
#### アンリアル エンジンのランチャー

* New:複数のバージョンのアンリアル・エンジンを並存させてインストール。
* ランチャーの新たなバージョン セレクターのドロップダウンリストを使って、インストールして実行したいバージョンを選択してください！
* New:メインの UI 上に新たにできた [Uninstall] ボタンを使って、ランチャーからエンジンのバージョンをアンイストールできるようになりました。
* New:ランチャーのマーケットプレイスのページにダウンロード サイズが表示されるようになりました。
* New:マーケットプレイスでさまざまなバージョンのアイテムがサポートされるようになりました。
* New:EULA (エンドユーザーライセンス契約書) が、ランチャーから表示して承認できるようになりました。
* New:プロジェクト ファイルを、ランチャーからインストールされたエンジン バージョンと関連付けることができるようになりました。
* New:アンリアル インストーラーとランチャーが、日本語と韓国語のためにローカライズされました。
* ランチャーについては、ログイン スクリーンで言語を選択できます。
* エンジンのダウンロード中に、マーケットプレイスのアイテムをキューに入れられない不具合を修正しました。
* Windows 7 SP1 がインストールされていない場合にインストーラーが警告を出さない不具合を修正しました。
* アンリアル・エンジンのショートカットをデスクトップから削除できない場合がある不具合を修正しました。
* Syncing your account (アカウントを同期中です) でまれに止まってしまう不具合を修正しました。
* 自動ダウンロードのキャンセルを修正して、再開しないようにしました。
* 自動アップデートが空のファイルを無視する不具合を修正しました。
* UI サイズ情報が、小数位をともなって表示されない不具合を修正しました。
* インストールが失敗した際に、前回成功したファイル以降から再開されるのではなく、最初からやり直されるという不具合を修正しました。
* データファイルのダウンロードに失敗したことによって、まれにインストールが終了しなくなる不具合を修正しました。
* Mac 用ランチャーが終了時にクラッシュする不具合を修正しました。
* ダウンロード サイズのインジケーターを修正して、圧縮されていないサイズではなく圧縮されたダウンロード サイズが表示されるようにしました。
* 進捗パーセンテージの情報に関する UI の問題を修正しました。

[/PUBLISH:Rocket]

#### エディタとツール

* **一般エディタ**
	* New:3D ビューポートのグリッドを改善しました！
		* より見やすくするためにグリッド ドットを除去しました。グリッドも、グリッド スナップ設定に従って、スケーリングされるようになりました。
		* 細い線について、パースペクティブ グリッドの正確性を改善しました。
		* orthographic grid (正投影法のグリッド) に、10 の主要グリッド線、レベル間のソフトなフェード遷移、および色付き軸線が備わりました。
	* New:**Preview Meshes** (メッシュのプレビュー) の設定項目を追加することによって、バックスラッシュ キーを押下したままにすると、ビューポートで表示されるメッシュをカスタマイズできるようにしました。
	* New:プロジェクトのアイコンを Window/Project Settings (ウィンドウ/プロジェクトの設定) から割り当てることができるようにしました。 
	* New:プロジェクトのスタートアップ ムービーを Window/Project Settings (ウィンドウ/プロジェクトの設定) から割り当てることができるようにしました。 
	* New:* C のキーを押すと、マテリアル エディタおよびサウンド キューにコメントを作成できるようにしました。
	* New:マウス中ボタンによるパンの動きを反転させるオプションを追加しました。Editor Preferences (エディタの設定)  -> Viewports (ビューポート) の **Invert Middle Mouse Pan** (マウス中ボタンによるパンの動きを反転) オプションから選択できます。
	* New:* プレースメント ブラウザに検索機能を追加しました。 
	* New:* **Ctrl** キーを押したままにすると、頂点ペインティングによってアクタが選択解除/再選択されないようになりました。 
	* New: **Ctrl + バックスラッシュ** 、および **Ctrl + Delete** を、編集可能テキストボックスに追加しました。
	* New:**Enable Sound** (サウンドを有効にする) オプションを Play-In-Editor (プレイ イン エディタ) に追加しました。
	* New:保存されるものに応じて、Save Map (マップを保存) または Save Asset (アセットを保存) が Save (保存) ウィンドウに表示されるようになりました。
	* New:* 個々のサブカーブをスケーリングできる機能を、カーブ エディタに追加しました。 
	* New:デフォルトでコンテンツが自動保存されるようになりました。また、保存されるパッケージの数が表示されるようになりました。
	* New:詳細を見るために **F4** キーを押すと、他の Details (詳細) パネルがすべてロックされている場合に、新たな Details (詳細) パネルが開かれるようになりました。
	* New:* コンテンツ ブラウザのコンテクスト メニューにある Browse (参照) ボタンが、ロードされていないオブジェクトに有効となりました。
	* New:Reset Layout (レイアウトをリセット) 機能が、Editor Preferences (エディタの設定) から Window (ウィンドウ) メニューに移動しました。
	* New:Editor Preferences (エディタの設定) の **Region & Language** (地域と言語) において、コードに入っている場合に (英語で) プロパティ名を表示するための設定が可能になりました。
	* New:Editor Preferences (エディタの設定) で選択の色をカスタマイズできるようになりました。
	* New:レベル エディタのビューポート上で遠くのビュー プレーンをオーバーライドできるようになりました。
	* New:Save Content (コンテンツを保存) ダイアログでコラムがソート可能になりました。 
	* New:3D マーキー選択が、元のキーバインディング (Ctrl + Alt + 左クリック ドラッグ) をともなって、再度追加されました。
	* New:* エディタ内の読み込みエラーを診断するためのメッセージ ログのリンクを追加しました。 
	* New:アクティブなカメラのセーフ フレームがある場合、High Resolution Screenshot UI (ハイ リゾリューションのスクリーン ショット UI) によって、キャプチャ領域をそのセーフ フレームに設定できるようになりました。
	* New:プラグイン エディタでプラグインを有効化または無効化した後でエディタを再起動してもらうためのプロンプトを追加しました。
	* New:テクスチャ エディタ内のズーム スライダーが、 **Fit to Viewport** (ビューポートに合わせる) の設定に対して適切に作用するように改善しました。 
	* エディタ内におけるデカールのスケーリング性能を改善しました。
	* エディタ内における Asset Discovery (アセットの発見) の時間を改善しました。 
	* 遠くにある Arrow Component (矢印コンポーネント) の可読性を改善しました。 
	* **Code View (コード ビュー)** 機能をアップデートして、プラグインで機能するようにしました。 
		* Code View (コード ビュー) プラグインを有効化して、この機能を再開させてください。(Window (ウィンドウ) メニュー -> Plugins (プラグイン) -> Editor (エディタ) -> Code View (コード ビュー)) 
	* Editor Preferences (エディタの設定) 内の **Region & Language** (地域と言語) の使いやすさを改善しました。設定の変更が、分かりやすく、使いやすくなっているはずです。
	* High Resolution Screenshot (ハイ リゾリューション スクリーンショット) 機能を修正しました。
		* スクリーンショット キャプチャは、ハイ リゾリューション スクリーンショットのアクションが選択されたビューポートに限定されるようになりました。
	* Editor Preferences (エディタの設定) が、あらゆる利用可能な言語と地域を表示しない不具合を修正しました。
	* **Select Actors using this Asset** (このアセットを使用するアクタを選択) が、他のストリーミング サブレベルでアクタを選択しない不具合を修正しました。
	* マウステストが原平面から拡張しないことに起因する、正投影法のビューポートにおける選択の問題を修正しました。
	* 複数のレベルからクリップボードにアクタをコピーした後、アクタが選択されたままになっていない不具合を修正しました。
	* グローバルなショートカット キーが、ある場合に、フローティング ウィンドウで機能しなくなる不具合を修正しました。
	* カメラが選択されていない状態でカメラがマチネでロックされると、セーフフレームとアスペクト比のバーが表示されない不具合を修正しました。
	* ビューポートの設定が、エディタの設定ファイルにではなく、レイアウトの設定ファイルに保存される不具合を修正しました。
	* 通知が、適切なモニター作業領域に置かれない不具合を修正しました。
	* 出力ログからテキストをコピーすると、正しい順番で行がコピーされない不具合を修正しました。
	* 出力ログの自動スクロールを修正しました。
	* レベル ブラウザにおけるレベル ロックの変更を元に戻すまたはやり直しできなくなる不具合を修正しました。
	* スプラッシュ スクリーンでプロジェクト名を表示することによって、非直感的なプロジェクトの切り替えを修正しました。
	* サーベイの通知が、閉じるためにキャンセルした後でもすぐに消えない不具合を修正しました。
	* アクタが入っているレイヤーがビューポートで非表示になっている場合に、アクタが選択されている不具合を修正しました。
	* チュートリアル ウィンドウが音を鳴らさないように修正しました。
	* 仮想ジョイスティックにともなう白い四角のアーティファクトを、 **StartupDelay** 関数を追加することによって修正しました。
	* **FindObject** が呼び出された場合に保存の時に起きるクラッシュを修正しました。 
	* ビューポート内におけるカーブ ハンドルの動きを修正して、反転しないようにしました。
	* アセットがブラシのエッジ/頂点にドロップする不具合を修正し、正しい場所に置かれるようにしました。
	* ランチャーからインストールされた場合に、SVN のバイナリがエディタに含まれない不具合を修正しました。
	* ツールチップが、メインメニューの Window (ウィンドウ) のオプションに表示されない不具合を修正しました。
	* フレームレートの設定値が、ゼロより小さく設定できる不具合を修正しました。
	* ScaleMeshes コンソール コマンドによる StaticMesh のスケーリングで、変更を加える前に既存の BuildScale が考慮されていない不具合を修正しました。  
	* ブループリント チュートリアルを見た後でホームボタンがチュートリアル ウィンドウに表示されない不具合を修正しました。
	* 使用されていないスプラッシュ スクリーンを削除しました。
* **FBX**
	* New:**Import All** (すべてをインポート) ボタンを FBX インポート ダイアログに追加しました。このボタンを使用すると、一度の指示で、同じ FBX の設定値をともなった選択済みファイルがすべてインポートされます。
	* FBX のインポート オプション ウィンドウを整理しました。

	![](fbx.png)

	* スケルタル メッシュのインポート設定値の下にある **Import Meshes in Bone Hierarchy** のデフォルト設定値を変更し、デフォルトで有効となるようにしました。これによって、ボーン階層内の非スキンメッシュが、ボーンとしてではなく、実際のメッシュとしてインポートされることになります。 
	* マテリアルとテクスチャが互いに同じ名前をもつ場合や、メッシュと同一の名前をもつ場合のインポートについて修正しました。この修正によってクラッシュが起きなくなり、名前が衝突した場合はそれぞれにユニークな名前が生成されます。
	* FBX からインポートされたマテリアルでオーバーラップするノードを修正しました。
* **コンテンツ ブラウザ**
	* New:フォルダ上で右クリックして **Rename** (名前変更) を選択することによって、フォルダの名前を変更できるようになりました。 
	* New:次のようなコンテンツ ブラウザの表示オプションを新たに追加しました。 
		* **Show Only Assets in Selected Folders** (選択されたフォルダのアセットのみを表示) は、検索またはフィルタリング時に、現在選択されているフォルダに入っているアセットのみを表示します。
		* **Real-Time Thumbnails** (リアルタイム サムネイル) が有効になっている場合、アセットがロードされると、マテリアルのアニメーションが表示されます。
	* New:Diff ツールを使用している場合、 **ビヘイビア ツリー** のアセットへの変更が、インタラクティブに表示できるようになりました。
	* **Developer Folder** のオプションが無効化されている場合に、Developer フォルダが、コンテンツ ブラウザのブレッドクラムのトレールに表示される不具合を修正しました。
	* サムネイルのテクスチャのストリーミングを改善して、サムネイルのテクスチャがぼやけたグラフィックでしばしば描画される不具合を修正しました。
	* ウィンドウが開かれた時に、コンテンツ ブラウザの検索窓に直ちに入力できない不具合を修正しました。
	*move/copy (移動/コピー) を修正することによって、フォルダ グループの move/copy 1 回につき 1 度だけアセットの読み込みを求めるようにしました。 
* **マチネ**
	* New:マチネが、(BMP および AVI 形式の他に) PNG および JPEG 形式へのレンダリングに対応するようになりました。
	* New:カメラがマチネでロックされ、かつカメラ以外が選択されている場合に、セーフフレームとアスペクト比のバーが表示されない不具合を修正しました。 
	* New:マチネが開いている状態で、ビューポートからアクタを削除しようとすると、通知されるようになりました。 
	* カーブ エディタのビューポートの無効化を最適化しました。これによって、マチネのパフォーマンスが向上しました。
	* マチネの元に戻す/やり直しの機能が、カスケードなど他エディタと整合しない問題を修正しました。
	* ズーム モード時に、グラフのラベルおよびボタンとインタラクトできない不具合を修正しました。 
	* **Slomo** のトラックが、再生速度を 10% 未満まで落とせない不具合を修正しました。
* **ペルソナ：アニメーション エディタ**
	* New:ペルソナで複数のボーンを同時に選択、編集できるようになりました。
	* New:ペルソナに備わっているアセット ブラウザから直接アセットを保存できるようになりました。
	* New:アニメーション通知を選択して Delete キーを押すと、アニメーション通知を削除できるようになりました。
	* New:アセットを参照しているブループリントのノードから直接アセットを開くことができるようになりました。 
	* New:* スケルトンから使用されていないボーンをユーザーが削除できるようにする機能をペルソナに追加しました。
	* New:* ペルソナのアセット ブラウザに、最近開いたファイルの履歴を、進む/戻るボタンの方式で表示できる機能を追加しました。
	* New:* ペルソナのアセット ブラウザにフィルタを追加しました。
	* スケルトンにおいて、デフォルトのプレビュー メッシュの設定を変更することによって、NULL メッシュの処理が開始されないようにしました。 
	* ボーンへの変更を元に戻す/やり直しできない不具合を修正しました。
	* セッション間で保持されないペルソナの設定項目が存在する不具合を修正しました。 
	* ペルソナのモード ウィジェットが、ダーティーな状態を表示しない不具合を修正しました。
	* ペルソナのスケルトン ツリーのコンテクスト メニューがクラッシュする問題を修正しました。 
	* ペルソナでスライダーが動かされた時にプレビューのビューポートが描画されない不具合を修正しました。 
* **ソース コントロール**
	* New:P4 プラグインは、P4HOST マスカレード、パスワード ログイン、およびデポをストリーミングする接続をサポートするようになりました。 
	* New:P4 はプロジェクトにマッピングしないワークスペースに接続できなくなりました (SVN の作業中のコピーに対しても同様)。
	* New:チェックインに成功したときのトースト ポップアップを追加しました。
	Perforce のソース コントロールのプラグインが、Unicode のワークスペース名とユーザー名をサポートしていない不具合を修正しました。
* **マテリアル エディタ**
	* New:**左 + 右のマウスボタン** を押したままドラッグすることで、ズームインとズームアウトができるようになりました。 
	* New:マテリアル属性は Feature Level と Quality スイッチに接続できるようになりました。
	* New:マテリアル エディタでピンを引き出す場合に、コンテキストに応じた機能を追加しました。 
	* New:Material Details にあるライティング固有のオプションは Unlit モードがアクティブな場合、グレイアウトされるようになりました。 
	* New:マテリアルの統計が独自のタブに表示されるように変更しました。
	* New:マテリアル エディタに New Mobile Stats Icon (新しいモバイル統計アイコン) を追加しました。 
	* New:マテリアル式ノードに対するタイトルの色付けを追加しました。
	* New:精度を上げるために、Panner マテリアル式に時間の小数部分を使用するオプションを追加しました。
	* 欠落していたデフォルトのマテリアル値を公開し、不要な入力に対するツールチップを追加しました。
	* マテリアルのアセット名がマテリアル エディタのタイトル タブに表示されないという問題を修正しました。 
	* マテリアル関数から、任意のマテリアルまたはマテリアルを使用する関数に変更が伝搬されることを修正しました。 
* **ジオメトリの編集**
	* New:ジオメトリ ブラシは、中心となるパラメータが変更されてもマテリアル情報を維持しようとします。 
		* ポリゴン数が同じままの変更は、完全にサポートされています。 
		* ポリゴン数が異なる変更は、メッシュ全体で単一のマテリアルのみサポートされています。
	* ジオメトリ ブラシをドラッグし、シーン アウトライナーにドロップする操作が適切に機能しないという不具合を修正しました。
	* 様々なジオメトリ編集モードのコントロールをスクロールできないという不具合を修正しました。
	* ジオメトリ編集モードがアクティブな状態で、3D シーンでレガシーのビルダ ブラシが見えるという問題を修正しました。
	* ブラシを作成するように Lathe ツールを修正しました。
	* 機能しないため、Volumetric と Sheet のブラシ形状を削除しました。
* **ランドスケープとフォーリッジ (葉)**
	* New:ランドスケープ スプラインは、スプラインのメッシュ用に、**Max Draw Distance** (最大描画距離) 設定を持つようになりました。 
	* New:ビューポートに新しいランドスケープ LOD (Level of Detail) プレビュー設定を追加しました。 
	* New:コリジョン設定用の新しいコントロールをフォーリッジ ツールに追加しました。 
	* New:Change Component Size ツールに **Resample** (再サンプリング) オプションを追加しました。 
	* New:ランドスケープ スプラインのスプライトが大きくなりすぎないように、スプラインの幅に自動的にスケーリングします。 
	* New:コンポーネントの選択が何もアクティブになっていない場合に、ランドスケープの **move-to-level** (レベルへ移動) ツールが、カーソルの下にあるコンポーネントで機能するようにしました。
	* ランドスケープのビジュアライザ メニューを更新しました。
* **メッシュのペイントツール**
	* New:ペイント ブラシの半径がエディタの preferences (環境設定) で保存されるようになりました。
	* デフォルトのペイント ブラシの半径を 128 に更新しました。
* **データ テーブル エディタ**  
	* New:読みやすくするために、偶数行と奇数行は異なる背景色になりました。
	* New:データ テーブル エディタで検索機能が実装されました。
* **シーンアウトライナー**
	* New:シーン アウトライナーの右クリックのコンテキスト メニューでアクタやフォルダを管理するためのオプションが増えました。
	* シーン アウトライナーにあるフォルダでの元に戻す / やり直すの機能を修正しました。 
* **ワールド ブラウザ** 
	* New:World Browser -map=PersistentMapName?worldcomposition によって作成されたワールドに対するクッキングを処理するためのオプションを追加しました。 
	* New:タイルの距離のストリーミングのロード/アンロードの要求間の時間閾値を追加しました。以下のコンフィギュレーション ファイルで変更できます。**TilesStreamingTimeThreshold.**  
	* New:レベルのタイルに対する位置スナッピングを追加しました。 **Ctrl + 左クリック** してドラッグします。
	* レベルのタイルのワールド ブラウザの非同期読み込みを、ブロッキング ロードと置き換え、"long operation" メッセージを追加しました。 
	* **Always Loaded** レベル タイプを削除しました。
* **デバイス プロファイル エディタ**
	* New:デバイス プロファイル エディタは、以下から常に利用できるようになりました。Window Menu -> Device Profile Editor
	* デバイス プロファイル エディタの UI を主要な用途を反映するレイアウトになるように更新しました。
	* CVar の追加、削除、ペアレンティングがプロファイルではるかに明確になるように更新されました。
* **翻訳エディタ**
	* New:翻訳エディタは、ローカリゼーション ファイルがどのプロジェクト/言語が翻訳可能であるかを決定するためにエンジン、エディタ、現在読み込まれているプロジェクトのディレクトリを検索するようになりました。 
	* New:データをファイルに書き込む、ユーザーが保存を忘れたことによる、またはエディタのクラッシュによるデータ損失を防ぐために、プロパティの変更によってトリガーされるイベントを翻訳データ オブジェクトに追加しました。 
	* 再度ソース コントロールから同期する代わりに、可能な場合、古いマニフェストのローカルでキャッシュされているバージョンを読み出すように修正しました。 

#### ブループリント

* New:ブループリント エディタ内のコンポーネント モードでコンポーネントのアタッチ / デタッチの操作に対する元に戻す / やり直しの機能を追加しました。 
* New:ブループリント グラフでグラフ ノードの再配置に対して元に戻す / やり直しの機能を追加しました。 
* New:ブループリント エディタ内のコンポーネント モードでコンポーネントの複製に対して適切な元に戻す / やり直しの機能を追加しました。 
* New:コンポーネント モードで 2 つの異なるブループリント エディタのウィンドウ間でのコンポーネントのドラッグ機能を追加しました。 
* New:ブループリント エディタ内のコンポーネント モードで複数のコンポーネントを選択した状態でのドラッグ & ドロップ機能を追加しました。 
* New:ユーザーが名前変更可能なノードを名前変更する機能を持つブループリント エディタの詳細ビューにグラフ ノード セクションを追加しました。 
* New:あるインターフェイスから別のインターフェイスにキャストするための機能をブループリントのキャスト ノードに追加しました。 
* New:**Float * (LinearColor)** ブループリント ノードを使用して、浮動小数値によって LinearColors を乗算処理できるようになりました。
* New:文字列を簡単に分割するために新しい **ParseIntoArray** 関数を追加しました。
* New:変数 Get/Set ノードは、充実したツールチップを表示できるようになりました。ツールチップを表示するには、ノード上にマウスを合わせ、Ctrl+Alt を押したままにします。
* New:**Alt + 右クリック** は、ブループリント グラフをズームする代替方法として使用できるようになりました。
* New:Debug Object ドロップダウンに、メニュー拡張性のあるフックを追加しました。
* New:ノードが選択されている場合、[詳細] パネルからグラフ ノードの名前変更ができるようになりました。
* New:ブループリント インターフェイスを検索するためのサポートを追加しました。
* New:Blueprint Interface の関数を名前変更すると、実装しているBlueprints にある関数も適切に名前変更されるようになりました。
* New:ブループリント内からモンタージュの **PlayRate** を設定するための機能を追加しました。 
* New:**OnProjectileBounce** に Impact Velocity パラメータを追加し、ブループリントでバウンス べロシティ ベクターのオーバーライドができるようにしました。 
* New:スライダーの UI 範囲 ("slider UI range") に合わせるために、ブループリントの数値の変数に値 (クランプ) 範囲 ("value (clamp) range") の公開を追加しました。
* ブループリントから特定の呼び出しサイトでの複数の保留中の潜在的なアクションを可能にする更新を行いました。 
* ブループリント エディタのコンボボタン メニューのスケーリングを修正しました。
* Blueprint Components モードのビューポートにおける **リアルタイム** レンダリングを修正しました。ブループリント エディタ内でコンポーネント モードが非アクティブな場合、リアルタイム レンダリングは無効になります。
パーティクル システム ヘルパーを含むブループリント アクタ上で作業するための **Toggle Particle System Helpers** オプションを修正しました。
* 絶対的および相対的な変形設定の間で切り替える際に、ブループリントが修正されたことを示すフラグが適切に付けられるようになりました。
* グラフ上でノードを移動後に元に戻す / やり直しができないという問題を修正しました。
* コンポーネント モードでコンポーネントを平行移動している間のグリッド スナップを修正しました。
* スプライト コンポーネント ビジュアライザが、エディタでシミュレーション (Simulate in Editor) またはエディタでプレイ (Play in Editor) を行っている間にブループリント エディタのプレビューでデフォルトの「アクタ」アイコンに切り替わるという問題を修正しました。
* Blueprint Interface 関数の名前変更を修正し、実装している Blueprints で適切に名前変更されるようになりました。

#### レンダリング

* **一般**
	* New:DBuffer デカール エフェクト (マテリアルのデカール反応) の一部を無効にする機能を追加しました。 
		* カラー、法線、ラフネスをマスクすることができます。
		* これにより、テクスチャ サンプリング ユニットを解放し、パフォーマンスを向上させ、制御を強化します。 
	* New:グラフィックス アダプタ (r.GraphicsAdapter) を選択、またはこれをシステムに自動的に行わせる機能を追加しました。
		* デフォルトでは一体型ではないグラフィックカードが優先されます (現在、アダプタ名で "Intel" をチェックしています)。
	* スカイライトの改善点:  
		* New:可動オブジェクトが、静的シャドウキャスターからスカイ シャドウイングを受け取ります。 
		* TLM_Surface マテリアルがスカイの反射を適切にレンダリングするように修正しました。 
	* 光沢のあるスクリーン空間の反射を改善し、ノイズを減らすようにしました。 
	* レンダー ターゲットを D3D11 RHI でより低いミップ レベルで設定する場合に、ビューポートのディメンションが不正確に計算されうるという状況を修正しました。
		* D3D テクスチャ オブジェクトの不適切なキャストが行われうるという問題を修正しました。 
* **Android** 
	* New:反射キャプチャ データは、現在マップ パッケージに格納されています。 
		* これにより、ES2 に対するクッキングは、常に再保存されているマップに対して有効な反射を持つようになります。 
	* モーション ブラー、UIBlur、およびスクリーン空間の環境オクルージョンを最適化しました。 
	* ゲームスレッド、レンダリング スレッド、イベント スレッドに対して affinity マスクを設定することで CPU のパフォーマンスを向上させました。 
	* バージョン 53.0 以降のドライバを持つ Adreno 330- ベースのデバイス上でDisjointTimerQueries をオンにすることで GPU の処理を向上させました。 
	* デバイス上で **STAT UNIT** の GPU フレームタイム測定を有効にするために、CVar の **r.DisjointTimerQueries** を更新しました。 

#### ゲームプレイとフレームワーク

* New:Project Settings (プロジェクト設定) の [Input] セクションで、マウスがタッチビヘイビアをシミュレーションする旨を示すことができます。 
* つまり、PC でプレイされる簡単なタッチゲームに対してイベントを 1 セットだけマッピングすればよいことになります。 
* New:プロジェクト設定に Audio Settings セクションを追加しました。ここで、Default Sound Class と Default Base Sound Mix を指定できます。 
* New:プロジェクト設定の Maps & Modes セクションに分割スクリーン オプションを追加しました。 
* New:ビジビリティ テストを用いて、いくつかの重要でないパスポイントをスキップし、コンポーネントのパスを簡素化しました。デフォルトでは無効になっています。
* New:ランドスケープのコリジョン データのクッキングを追加しました。クッキングされたランドスケープは、クッキングされたデータのバイナリ ストリームからコリジョン オブジェクトを作成し、これにより、レベルのストリーミング パフォーマンスを高めます。
* New:Text Render Actor は、静的頂点とインデックス バッファを生成し、キャッシュするようになりました。 
* モーフ ターゲットがモーフィングした法線を計算する方法を改善しました。
* 互換性がないためにモジュールの読み込みに失敗した場合のフィードバックの欠如を修正しました。エラーメッセージが表示されるようになりました。
* クッキング中にエディタのみのスプライトが読み込まれることを修正しました。
* 移動コンポーネントがアナログ入力を正確に処理するように修正しました。
* マテリアル インデックスと LOD マッピング インデックスのクラッシュの問題を修正しました。
* 非同期パッケージの読み込みでは、プリロードする前にポストロードできなくなるように修正しました。
* デバイス プロファイル例の選択プラグインのUE4 を起動する要件を修正しました。
* いつも読み込まれている (Always Loaded ) レベルが、デフォルトで「可視状態 (Should be Visible)」としてフラグ付けされるように修正しました。 

#### ネットワーキング

* **一般**
	* New:Character Movement Componen モードがレプリケートされるようになりました。  
	* New:**Launch Character** は、ローカル外で制御されるキャラクターに対してクライアント側でシミュレートできるようになりました。
	* New:**Only Relevant to Owner** の設定が、ブループリントで利用できるようになりました。
	* リモートのネットワークのクライアントとシミュレートされたプロキシに対する移動するプラットフォーム上のキャラクタの動きを改善しました。
* **PlayStation 4**
	* ソケットのサブシステムが、UDPP2P ソケットをサポートしています。

#### アニメーション

* New:参照ポーズ スケーリングのサポートが追加されました。
分岐点をオーバーラップしないように **AnimMontages** を修正しました。

#### 物理

* New:PhysX は 3.3.1 に、APEX は 1.3.1 にアップグレードされました。
* 物理データを再クックする必要があるケースがあるかもしれません。 
* このアップグレードでは、いくつかの物理関連のバグを修正します。詳しい情報については、NVIDIA のリリースノートをご覧ください。
* New:BodyInstance の最高角速度が、コードとブループリントで公開されました。
* New:ポーンは被破壊メッシュと衝突するようになりました。大きなチャンクと小さなチャンクとでは、ポーンと異なるインタラクションを行うように設定できます。
* New:ラグドールと物理アセットで破壊可能ジョイントを利用できるようになりました。
* New:ラグドールと物理アセットでクロス (布地) をサポートします。
* ボディ質量を暗黙的に使用するように、柔体 (soft) の物理コンストレイントを更新しました。
* Async 物理シーンがデフォルトで無効になるように更新しました。
* この機能は幾分高度であり、多くのメモリを使用します。そのため、デフォルトではオフになっており、以下の順序に従い、変更できます。 **Edit Menu -> Project Settings -> Physics -> Simulation ** category
* Async シーンが無効になっていれば、アクタで Enable Async フラグがあってもすべてのアクタは通常のシーンに配置されます。
* デフォルトで、プレイヤーのポーンが Async シーンでインタラクションしないようになりました。
* オーバーラップ イベント関連のバグを修正しました。オーバーラップ フラグに関する現在の挙動が、間違った挙動に依存する古いコンテンツでは動かない可能性があります。
* 2 つのオブジェクト間のコリジョンは、Ignore、Overlap、または Blocking に設定することができます。
* 2 つのオブジェクトがオーバーラップし、その **両方** で **Generate Overlap Events** フラグが true に設定されているとオーバーラップ イベントが発生します。
* コードのバグによって、オーバーラップしているオブジェクトのひとつでフラグが false に設定されていても、ある状況でオーバーラップがトリガーされるようになっています。
* つまり、以前発行していたオーバーラップ イベントは、フラグ付けが不適切なために停止する可能性があります。
* コリジョンがオーバーラップとしてマーク付けされている場合に限り、Overlap イベントが発行するように修正しました。
* コリジョンが Blocking としてマークされても、場合によっては Overlap イベントが発行するというバグがありました。
* Hit Events は、**Simulation Generates Hit Events** を有効にすることによって、両方のオブジェクトをオプトインする必要性があるように修正しました。

#### オーディオ

* New:PIE 設定に **Enable Sound** オプションを追加しました。 
* New:**Add Input** ボタンを適切な Sound Nodes に追加しました。 
* 作成 / 修正後に DialogueWaves をただちに再生できるように改善しました。 
* [Preselect at Level Load] 設定が使用されている場合、PIE での Random Sound ノードの選択を制限しました。 

#### コア

* New:UnrealBuildTool は、XML コンフィギュレーション ファイルを使用して設定できるようになりました！
* このツールは、以下の 2 箇所で BuildConfiguration.xml ファイルを探します(Engine/Saved/UnrealBuildTool と My Documnets/Unreal Engine/UnrealBuildTool)。1 つめは、ブランチ / エンジンの構成に対して、2 つめはパーソナル設定に対して使用します。環境変数設定は、こうした値が設定されるとオーバーライドされることがわかるでしょう。 
* この記法は、以下に掲載されています。\Engine\Programs\UnrealBuildTool\BuildConfiguration.xml 
* New:クロス コンパイルする Linux クライアントに対するサポートが追加されました。 
* New:すべてのプラットフォームのメモリとアロケータ メモリの統計を、統計システムで利用できるようになりました。 
* New:統計システムにスレッドとスレッド グループのメタデータを追加しました。
* New:統計ファイルの保存形式を改善しました (まだ完全には利用されていません) 。
* New:[Windows] シェルの統合では、エンジンの複数バージョンを並べることをサポートしています。 
* エンジンのインストールを追加する、またはシェル拡張やファイルの関連付けのセットアップを初めて行うには、各 Engine\Binaries\Win64 ディレクトリから UnrealVersionSelector を実行します。 
* 各 .uproject ファイルは、別のエンジンのインストールで開くように設定することができます。 
* New:-UTF8Output コマンドライン引数は、エンジンを使用する任意のプログラムに渡して stdout を UTF-8 モードに強制することができます。
* 記録している Unicode 文字列にクエスチョンマークがある場合に、これを使用します。
* Visual Studio アクセサ (特に Express に対する) を改善しました。 
* Visual studio 2010 だけが存在しない場合に、Visual Studio のバージョンが何もインストールされていないという問題について InstallVisualizers.bat を修正しました 。
* Win32 設定でエディタをビルドしようとすると UnrealBuildTool で早期にエラーを発生するように修正しました。
* 国際管理化ライブラリのサイズを修正しました。  
* 国際管理化は、静的ライブラリからではなく、バイナリファイルからのデータを読み込むようになりました。 

#### プラットフォーム

* Android
* アンドロイドのデバイス検知を改善しました。スレッド化され全般的に効率が高まっています。
* 接続されたアンドロイド デバイスがサポートしていないテクスチャ フォーマットが Launch に表示される問題を解決しました。接続されたアンドロイド デバイスがサポートしているテクスチャ フォーマットがだけを Launch に表示されるようになりました。
* Mac 
* New:Mac でパッケージ化すると、独立したアプリケーション バンドルが作成されます。 
* New:現在、Mac UE4 は Epic のクラッシュ レポータを使用しています。 
* New:エンジンに同梱されているものの代わりに Mac にインストールされている Mono を使用する機能を追加しました。 
* New:Mac OS X に同梱されている dSYM デバッグ記号を生成するためのUBT のサポートを追加しました。 
* New:Mac プラットフォーム用のテキスト入力方法システムを実装しました。 
    * これは、 Mac OS X 上のネイティブの Cocoa InputMethod サービスを使用し、異なる入力方法をサポートします。 
* Xcode プロジェクトを簡素化し、Xcode でのコードのインデックス付けを改善しました。
* iOS
* New:Retina ディスプレイの iPad mini に対してデバイスの列挙型変数を追加しました。
* New:Game Center 成績表をアプリ内で表示する実験的サポートを追加しました。(EXPERIMENTAL_ShowGameCenterLeaderboard)。
* New:Windows のワークフローのビルド経由で iOS ビルドをシッピングするために **-compress=best** コマンドラインを追加しました。
* iAd サポートのために様々な改善とバグ修正を行いました。
* iOS ゲームセンターでのスレッディング問題を修正しました。
* PlayStation 4
* New:**PlayGo** のサポートを追加しました。
* New:Achievements (プレイヤーの統計) を実装しました。
* New:シェーダのスクラッチ メモリのサポートが追加されました。
    ConsoleVariables.ini ファイルで **r.ShaderScratchBuffers=1** を有効にします。
* New:HZB オクルージョンのカリングが、PS4 でサポートされます。
* レンダー ターゲット / シェーダーの不一致をランタイムに検知する機能を追加しました。
* レンダー ターゲットの出力形式を、シェーダ ファイルにあるSLOT 定義を使用するのではなく、**ModifyCompilationEnvironment** を通して設定するように更新しました。
Xbox One
* New:Xbox One に 10:10:10 の最終Color 出力を追加しました。これにより、トーンマッパの量子化ノイズを取り除くことが可能になり、処理速度が一段と速くなります。
* New:スクリーンの safe area (安全領域) が実装されました。
* New:Achievements (プレイヤーの統計) を実装しました。
* すべてのピクセル シェーダーの最適化を有効にしました。
* より完成度が高い機能になるように、XAudio2 実装を改善しました。
* 様々な GPU のハングアップを修正しました。

#### UnrealVS (Visual Studio の拡張)

* New:コマンドライン ボックスは、UE4.sln にある 'Game' プロジェクトに対してゲーム プロジェクト ファイルを自動的に追加するようになりました。 
* New:Visual Studio のカスタマイズ機能は、UnrealVS のツールバー コマンドをサポートするようになりました。 
* New:[UnrealVS Quick Build] メニューでは、IDE で config を変更せずに、どのコンフィギュレーションのビルドでも簡単にアクセスすることができるようになりました。
* New:デバッグを支援するためにロギングを追加しました。
* ゲーム専用のエディタ ビルド (例、MyGame "Debug Editor|Win64") に対するコード プロジェクトでは、UnrealVS でコマンドラインに追加するプロジェクトが不要になるように変更しました。 
* 上記の例で、エディタをデバッグするための UnrealVS コマンドライン引数はこれまで、"MyGame.uproject" でした。 
* 上記の例の UnrealVS コマンドライン引数は現在単に " " であり、プロジェクトが実行されると、UnrealVS は自動的にプロジェクト名を追加します。 
* プロジェクト名はまだエディタ実行ファイルに渡されますが、現在 UnrealVS はプロジェクト名を自動的に追加し、それを表示しません。 
* 既存のコマンドラインは、これまでどおり機能しますが、表示は異なります。 
* プロジェクト名を入力しないと、UnrealVS は表示されているコマンドラインからそれを除き、警告ダイアログをポップアップします。
* Windows 以外のプラットフォームで実行可能プロジェクトを正確に認識するように Startup Project セレクタと Batch Build を修正しました。 

## API の変更

#### ゲームプレイとフレームワーク

* bForceRescan パラメータを IAssetRegistry::ScanPathsSynchronous に追加しました。True ならば、パスのスキャンではスキャン済みのパスを無視しません。
* IAssetRegistry に GetDerivedClasses を追加しました。これは、単に既存の GetSubClasses に対するラッパー関数です。
* GameViewportClient で DrawTransition の青色の画面上のメッセージを無効にするフラグを追加しました。 
* ブループリントで GetOverlapInfos を使用するための機能を追加しました。
* IOnlineExternalUI::ShowLoginUI に対するパラメータとして OnClosed デリゲートを追加しました。
* GameViewportClient で DrawTransition の青色の画面上のメッセージを無効にするフラグを追加しました。
* 複数のパスから ObjectLibrary を読み込むためのサポート、およびメモリに ObjectLibrary を簡単に作成するためのコンストラクタを追加しました。
* UObject::CreateLibrary を呼び出す場合、ObjectLibrary でのブループリントのサポートを改善しました。bHasBlueprintClasses が true の場合、設定されていると、タイプをチェックしてくれます。
* ワールドではなくプレイヤーにバインドするため、FGameWorldContext から FLocalPlayerContex に名前変更しました。
* World Context 参照を戻す GetWorldContextFrom 関数を、GetWorldContextFrom*Checked に名前変更しました。  
* GetWorldContextFrom は、ポインタを戻し、供給された入力に対してWorldContext が存在しなければ NULL を戻します。
AHUD から FSimpleReticle を取り除きました。必要に応じてこれをサブクラスに追加することができます。
* AGameMode から、使用されていないライフサイクル イベント、OnEngineHasLoaded を削除しました。
* 不要になったため、SGameWidget クラスを削除しました。
* GameEngine から PendingLevelPlayerControllerClassName を削除し、LocalPlayer にある PendingLevelPlayerControllerClass と置き換えました。 
* これにより、他の PlayerController の参照と同様に機能するようになり、マップを結合するたびに混乱を招く警告が出ないようにします。
* 使用するカメラ コンポーネントを見つけようとする場合、コンポーネントを有効にするか否かを考慮するように、AActor::CalcCamera を変更しました (アクティベーションを管理することにより、複数のカメラ コンポーネント間での選択を可能にしました) 。
* SKismetLinear 表現式は関数として表示されるという点でより許容度が高くなりました (現在、1 つの出力を持つ任意の pure K2Node を何とかしようと試みています)。
* ADebugCameraController と ADebugCameraHUD は拡張可能になり、エンジン モジュール外部からアクセスすることができます。

#### エディタとツール

* スレートのドラッグ & ドロップ操作では、継承と互換性がある RTTI を使用するようになりました。これにより、DragDrop::IsTypeMatch が適切に機能するようになり、継承の階層のあらゆるレベルに静的キャストができるようになります。 
* GetTypeId in FDragDropOperation 派生の以前のインスタンスを、DRAG_DROP_OPERATOR_TYPE に置換してください。 
* FSlateApplication::GetDragDropReflector() は、現在使用されなくなり、削除されました。 
* 使用されていない Linked Obj Editor フレームワークを削除しました。

#### プラットフォーム

* Mac
*  Mac OS X のサポートされる最低限のバージョンは現在、10.9.2 です。 
    * 10.9.2 より前の OS X はサポートしなくなりました。以前のバージョンでは修正されない GL ドライバのバグと機能不足によるものです。
* Mac のビルドは、現在 OS X 10.9 SDK を使用しており、コードとコンパイルの設定は、Xcode 5.1 と互換性があるように更新されています。
* config ファイルは、~/Library/Preferences に移動し、ログは~/Library/Logs に、Saved フォルダからの他のすべてのファイルは、現在、~/Library/Application Support/Epic にあります。 
* PlayStation 4
* TitleID、パッケージの PassCode やその他のデータの仕様は、 Build/PS4/PackagingDataPS4.txt 配下のプロジェクト ディレクトリのテキスト ファイルにあります。これは、UBT にある古いメタデータ システムを置き換えるものです。   例は、ShooterGame とベースの Engine/BuildPS4 ディレクトリにあります。
Xbox One
* March 2014 XDK に対してビルドするためにコードを更新しました。 
* 非推奨の関数 (D3DAllocateGraphicsMemory など) を削除 / 置換しました。

#### コア

* FPlatformString::Stricmp は、std::stricmp に合わせるために小文字に変換されました。
* 文字列がアンダーラインだけ、またはASCII の小文字と大文字の範囲の間でのみ異なる場合、若干異なるソート順になる場合があります。
* 不正な文字列変換中に警告が発行されるようになりました (例、ASCII で表すことができない Unicode 文字)。
* コード内でこれが頻繁に起こると出力ログに余分なデバッグ テキストが存在するかもしれません。
* TArray::Append and TArray::Insert は、オーバーロードされ、一度に複数エレメントを挿入できるようにします。
* 現在、TSet は operator () の代わりに operator [] を通してアクセスされます。 
* C++11 の ranged-for 構文を使用したい場合に TobjectIterator を使用するのと同じように TObjectRange を使用できるようになりました。
* 例: for (UClass* Cls :TObjectRange<UClass>())
* 使用されていないプロパティ フラグ、CPF_AlwaysInit を削除しました。 
* 使用されていない構造体フラグ、STRUCT_Transient を削除しました。 
* GConfig->SetVector4 および GConfig->GetVector4 を使用して、FVector4 を config ファイルに保存および読み込むためのサポートを追加しました。
* 以下の言語以外のカルチャー (ロケール) を使用しているライセンシーは、ロケール データを含むために ICU データをリビルドする必要があります。
* German – de, English – en, Spanish – es, French – fr, Hindi – hi, Italian – it, Japanese – ja, Korean – ko, Polish – pl, Portuguese – pt, Russian – ru, Swedish – sv, Chinese – zh
* DrawDebugHelpers、浮動小数点値のヒストグラム表示するためのサポートを追加しました。サンプルを記録するために FDebugFloatHistory を使用し、ゲームで描画するために DrawDebugFloatHistory を使用します。ブループリントでも利用できます。 

#### ネットワーキング

* FFastArraySerializerItem 上の PreReplicatedRemove、PostReplicatedAdd、PostReplicatedChange の関数を修正し、所有している配列シリアライザも表すパラメータも持つようにしました。 
* bOnlyRelevantToOwner 設定をブループリントに公開しました。

#### アニメーション

* New:AnimInstance は、ブレンドスペースに対する **CalculateDirection** 関数を持つようになりました。 


