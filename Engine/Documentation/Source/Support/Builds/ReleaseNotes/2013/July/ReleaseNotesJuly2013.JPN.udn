INTSourceChangelist:2615122
Title:2013 年 7 月リリースノート
Crumbs:%ROOT%, Support/Builds
Description:
Availability:Licensee
Template:ReleaseNotes.html

[TOC(start:2 end:2)]

## ビルド情報


[REGION:simpletable]
| アイテム | 情報 |
| ---- | ---- |
| **ラベル** | QA_APPROVED_UE4_BUILD_2013_07 |
| **チェンジリスト #** | 1735924 |
| **VISUAL STUDIO VERSION** | Microsoft Visual Studio 2010 version 10.0.40219.1 SP1 Rel |
| **DIRECTX** | 2010年6月 |
[/REGION]

## 重要情報

 * 現時点のエンジン開発ロードマップ: [UE4 Roadmaps](https://udn.unrealengine.com/questions/topics/roadmap.html)
 * QA ビルド ディレクトリへの変更: [July 2013 QA Build Directory Changes](https://udn.unrealengine.com/questions/170530/qa-build-directory-changes-201307.html)
 * 修正されたバグ： [UE4 Fixed Bugs July 2013](UE4_Fixed_2013_July.xlsx)
 * 周知のバグ： [UE4 Outstanding Bugs July 2013](UE4_Bugs_2013_July.xlsx)


## 主な新機能

####エディタ ツール
* **プラグイン エディタ**
	* プラグインの表示、ブラウズ、管理を可能にするインターフェースが新登場しました。ビルトインされたタイプとゲーム プロジェクトにインストール済みのタイプの両方です。     
		![](pluginsEd.png)
	* カテゴリのブラウズ、検索 / フィルタ、プラグインの有効化 / 無効化、アンインストールをすべてこのインターフェースで行うことができます。
* **New PlayerController と Mouse Interface Events**
	* 新しいマウス インターフェース / カーソル システムが、PlayerController によって実装されました。  
		![](nc1.png)
	* ShowMouseCursor はシステムを有効化し、インゲームの場合にデフォルトのマウス カーソル表示を開始します。注記: Play in Viewport では動作しません。Play in New Window を使う必要があります。
	* オブジェクトに "触る" ために、インターフェースは非常にシンプルな入力タッチ イベントとインデックスを使用します。  
		![](mc2bpnode.png) ![](mc2bpnode2.png) ![](mc2bpnode3.png)
* **プレースメントブラウザでボリュームを追加する**
	* プレースメントブラウザで様々な種類のボリュームを置くことができるようになりました！  
		![](PBVolume.png)(h:480)
* **Play In Interface の改善点**
	* [Play In] ボタンの表示を薄くして、現在アクティブな Play モードが強調されるようにしました。
	* PlayInNewProcess を PlayOn to Play In から移動させて、メニューの構成も変更しました。  
		![](playin.png)

####ブループリント
* **ブループリントでのボーン操作**
	* ボーンを直接操作するブループリント関数する新しいコンポーネント (PoseableMeshComponent) が追加されました。  	 
		![](BPbones.png)(h:480)
	* スケルトンのボーンの位置/回転/スケーリング + リセット関数を、直接ゲット / セットできるようになりました。


## 新機能の追加

####ブループリント
* ブループリントが何も値を返さない関数を呼び出した場合、呼び出しが無効のターゲットであれば 'Access None' ログが生成されなくなりました。
* ブループリントのデバッグ処理が改善されました (実行シーケンスがデバッグ可能になり、非純粋関数のブレークポイントで再発したバグが修正されました)。
* ブループリントの親の変更をすると、ブループリントから新たに警告が出されるようになりました。
* Level ブループリントまたはアクタのブループリントからの参照状態を表示してユーザーが対処できるように、アクタの削除時のチェックを追加しました。
* グラフの種類を区別してレンダリングを簡素化するために、ブループリント エディタにアイコンが追加されました。


#### サウンド
* Reverb 設定をリバーブ ボリュームなしに指定できるようになりました。


####コア
* UENUM とその値がツールチップにコメントを表示するようになりました。これらはプレフィックス付きのコメントである必要があります。
* Redistributable (再配布が可能な) プラグインへのサポートを追加しました。
	* モノリシック (単一) ビルドの場合、プラグインがメインの実行ファイルとリンクしている静的なライブラリをビルド時に生成するようになりました。
	* これらのライブラリのソースコードが存在しない場合、 lib/dll ファイルはコンパイル済みで、何かしらリンクがあると見なされます。
*コードブロックがログを実行し、モニタリングロードに使われる時間を出力する SCOPE_LOAD_TIME マクロを追加しました。
* コンテナ、文字列、アロケーター上のセマンティクスを移動することで、一時的なコンテナのコピー (値でそれらを返す関数) が最適化されます。
	* 移動操作を明示的にトリガーする `MoveTemp` (`std::move` と同等) もあります。
* 他のクラスからオブジェクトが (クラス リダイレクトで) ロードされている時の Notify 関数 `UObject::LoadedFromAnotherClass` を追加しました。
	* 1 スレッド (`-singlethread` コマンドライン パラメータ) だけでエンジンを起動する機能を追加しました。
	* DDC pak を任意の数だけマウントする機能を追加しました (`DDC.MountPak` および `DDC.UnmountPak` コンソール コマンド)。
	* DDC pak ファイルの 2GB の制限を取り除きました。


####エディタ ツール
* **スレートと UI**
	* テキスト自動ラップ サポートを STextBlock (新しい **AutoWrapText** 属性) に追加しました。 
		* テキストをラップして、ウィジェットが利用できるスペースを自動調整する機能です。 
		* 重要な注意事項があります。詳細はパラメータのコメントを見てください。
	* タッチスクリーン プラットフォーム用 (`-faketouches`/`-simmobile` を付ければデスクトップ用) にスレート バーチャル ジョイスティック (初回パス) を追加しました。

* **エディタ**
	* アクティブになっているプロジェクトの名前が、タイトル領域の一番右側に表示されるようになりました。
	* 主要なタブだけではなく、すべてのタブに [Close (終了)] ボタンを追加しました。
	* "Select All Brushes" を右クリックのコンテキスト メニューに追加しました。
	* 実行時に SIE/PIE にスポーンされた一時的なアクタを隠すために、 Scene Outliner フィルタを追加しました。 
	* シーン アウトライナーのビューモードに [Show Only Selected (選択項目のみを表示)] を追加しました。 
	* 他のフィルタと機能をもう少し控えめにするために、 Scene Outliner コードの幾つかをリファクタリングしました。 
	* シーン アウトライナーに、常にアクタ数が表示されるようにしました。
	* スクロールバーのスクロール領域をクリックすると、ビューがスクロール位置にスナップし、ドラッグでそのままスクロールが継続できるようになりました。
	* アクタの名前変更を、シーン アウトライナーの中でインラインで行えるようになりました。
	* 現在のストリーミング方法では、現在選択中のレベルと一致するオプションの横にチックが表示されます。
	* [Open Project] ダイアログの表示が抑制可能になりました。
	* 「変換」操作をするターゲット クラスの選択時に、どのクラスがターゲットなのか分かりやすくするために、ツールチップをクラス アイテムに追加しました。
	* Replace Actor With を使う時にペイントされたメッシュ頂点カラーが保存され、新規アクタに互換性のあるアセットのメッシュ コンポーネントが含まれるようになりました。
	* 既にマチネの一部となっているアクタが、次に続くマチネに追加されないようにするチェックを追加しました。

* UnrealBuildTool:* Visual Studio 2013 のサポートをプロジェクト ファイル ジェネレータに追加しました。 
	* これらのプロジェクトの作成には `GenerateProjectFiles.bat -2013` を使います。VS 2013 をコンパイルにはまだ使用できません。ご注意ください。

* **プロファイラ**
	* 複数のインスタンスの初期サポートを追加しました。ユーザーは一度に複数のインスタンスをキャプチャ/ プレビューすることができます。
	* プロファイラの安定性が若干改善されました。

* **ランドスケープ**
	* `PDI->DrawLine()` が DepthBias をサポートするようになりました。
	* メッシュが何も選択されていない場合、分かりやすくて選択しやすいように、ランドスケープ スプラインがエディタ内のシンプルな平面メッシュでレンダリングされるようになりました。
	* マテリアルをランドスケープ上にドラッグ / ドロップできるようにしました。


####ゲームプレイとフレームワーク
* **物理**
	* PhAT に、Bodies と Constraints 用に 2 つの異なるワークフローができました。ツールバー ボタンでモードを切り替えます。
	* SkeletalMesh Partial ラグドールがサポートされるようになりました。
		* それぞれのボディが PhAT の Fixed/Unfixed/Default を定義します。
		* シミュレーションとブレンディングが別々の操作になりました。シミュレーションを停止しても、なお物理へのブレンディングは行われます。
		* インスタンスに対しては、 BodyInstance ごとに **PhysicsBlendWeight** を修正することができます。

* **DisplayAllLocation** コマンドと **DisplayAllRotation** コマンドを追加しました。 
	* UE3 の `displayall [actorclass] location` および `displayall [actorclass] rotation` のように使用します。
* アクタに対する **AutoReceiveInput** のように、ポーンが **AutoPossess** に対してフラグを立てられるようにしました。
* **Replication** RepNotify:レプリケートされたプロパティの以前のローカル値を取得できるようになりました。[link](https://udn.unrealengine.com/questions/168304/repnotify-how-can-i-find-the-previous-value-of-a-r.html)


####プラットフォーム
* ほとんどのプラットフォームに対して APEX Clothing サポートを追加しました。
* 次の関数を Generic PlatformProperties に追加しました。
	* **SupportsFastVRAMMemory** - プラットフォームが高速の VRAM パスをサポートしていれば true、いなければ false を返します (デフォルトは false です)。
* TexCreate と BUF ヒント フラグ `*_FastVRAM` を追加しました。
	* テクスチャまたは頂点 / コンスタント バッファに利用できる場合、FastVRAM を使用するための RHI に対するヒント
* デフォルトの FFastVRAMAllocator クラスを追加しました (デフォルト状態では何もしません)。


####レンダリング
* プリミティブのユニフォーム バッファに、ローカル空間領域が含まれるようになりました。
* マテリアル システムがローカル空間領域へアクセスできるように、 **ObjectLocalBounds** エンジン マテリアル関数を追加しました。
* **Alpha** の新しい Texture 圧縮タイプを追加しました。(単一チャンネルです。ガンマ補正ではありません。)
* キューブまたは 2D テクスチャからの **Create Static Texture** が HDR (float16) ソース テクスチャをサポートします。
* Microsoft の新しいシャドウ手法がデフォルトで有効になりました (前の `r.shadow.method 0` に戻る)
	* 少なめのドローコール 
	* よりシンプルなコード
	* z-距離ベース (以前は放射状でした) 
	* カスケードのスムーズな切り替え 
	* シャドウ バイアスの改善と併せて、動的シャドウの品質もかなり改善されました。
* 前方レンダリング (ES2) パスが、 HDR、露出、ブルームをサポートするようになりました。
* **MinRoughness** ライト パラメータ (フィルライトに非常に便利) を追加しました。


####アニメーション / ペルソナ
* Animation ブループリント、 モンタージュ、 ブレンドスペース、AnimOffset アセットを、コンテンツ ブラウザのコンテクストメニューを使って、スケルタルメッシュから直接作成できるようになりました。
* AnimGraph で Export to Animation 機能がサポートされるようになりました。
	* 現在の anim graph をアニメーションへエクスポートできます (下体 / 上体の分割またはスプリングの場合に便利です)。
* スタティック メッシュ エディタでソケットを複製することができます。
* StaticMesh/SkeletalMesh 以外のコンポーネントに対して、ソケットが選択できるようになりました。
* ペルソナでのモード変更の間、現在再生中のアニメーションを繰り越します。
* モード スイッチの全オプションに対して、ビューポート ステートが確実に更新されるようになりました。



##アップグレード ノート

####ブループリント
* ブループリントの継承 (ブループリントのブループリント) が正式に有効になりました！ブループリントの新規作成時にクラスブラウザで親クラスを選択するか、コンテンツ ブラウザでブループリントをクリックするか、[Create child of this blueprint...] を選択することで、ブループリントのブループリントを作成することができるようになりました。
* ブループリントが TWeakObjectPtrs を適切にサポートするようになり、それらをパラメータとして使っている UFUNCTIONS を安全に実行できるようになりました。
* リファレンス変数でブループリントを設定できるようにしました。値を内部的に手書きのコードで操作する必要のあるパラメータをリファレンスでパスする関数に便利です。
* Creating ブループリントのアセットツリーにスクロールバーを追加しました。
* VimBlueprint を AnimBlueprint に、 VimInstance を AnimInstance に名前変更しました。変数名 / コメントをアップデートして、"Vim" という単語の削除を反映しました。


#### サウンド
* 新しい Sound クラス エディタを作成しました - すべての SoundClass の親が必ず 1 つになるように、すべての SoundClass を取り込んで再度保存することをお勧めします。
	* 複数の親を持つ SoundClass が取り込まれると、強制的に親を 1 つにする前に、ログの警告が生成されます。
	* 親はアルファベット順に処理されて希望と違ってしまう場合があるので、この警告を使って SoundClass の親が希望通りになっていることを確認します。
	* 新しいエディタは SoundClass の位置を保存しません。エディタが開かれるたびに、自動的に調整されます。
* SoundCue アクタに Find in Content Browser オプションを付けました。


####コア
* FString をリファクタリングしました。
* FString が TArray から継承されなくなりました。 
* `InStr` を `Find()` に変更し、 `Contains()` を追加しました ( **注記:パラメータとそのデフォルトを変更しました！** ) 
* Split 関数のパラメータを変更しました。 
* EndsWith、StartsWith、Replace、ReplaceInline、MatchesWildcard が ESearchCase を bool の代わりに第二引数として受け取るようになりました。 
* 文字列関数のデフォルト ビヘイビアを、大文字小文字の区別を無視するように変更しました。 
* FFilename 関数をすべて FPaths に移動し、静的にしました。文字列で直接機能するようになりました。
* FFilename タイプを削除しました。 
* パラメータを 5 つまでオーバーロードして FPaths::Combine() を追加しました。 
* パス結合演算子の `*` と `*=` を `/` と `/=` にそれぞれ変更しました。 
* FPaths を CoreMisc.h/.cpp から Paths.h/.cpp へ移動しました。
* USTRUCT は UFUNCTION を含むことができなくなりました。
* `TPreallocatedArray<Type, Count>` を削除しました。代わりに `TArray<Type, TFixedAllocator<Count> >` を使用してください。
* `FQuat::operator-` は、実装が非直感的なため、削除しました。ライセンシーは既存の全てのリファレンスを、同等の `FQuat::Inverse()` に変更する必要があります。
* TemplateMapMetadata アセット タイプを非推奨にしました。
	* テンプレート マップは DefaultEngine.ini (例は BaseEngine.ini を参照) の `[/Script/UnrealEd.UnrealEdEngine]` セクションで設定するようになりました。
	* ゲームに TemplateMapMetadata アセットがある場合、 コンテンツ ブラウザでテキスト フィルタを使って検索し削除します。
* CurveEdPresetCurve アセット タイプを非推奨にしました。
	* ゲームにこのアセットのインスタンスがある場合、コンテンツ ブラウザでテキスト フィルタを使って検索し削除します。
* プラグインは取り込む前に有効にしておく必要があります。DefaultGame.ini ファイルの `[Plugins]` セクションの EnabledPlugins リストに追加すると、プラグインが有効になります。
* TContainerTraits を TTypeTraits に変更しました。
	* 理由は、 TTypeTraits はコンテナ エレメントの trait を表現し、コンテナの trait を表現する TContainerTraits という新しい trait があるからです。
	*  TContainerTraits を指定するタイプがあれば、 TTypeTraits を指定するように変更しなければなりません。
	* **NeedsConstructor** trait は **NeedsMoveConstructor** と区別するために、 **NeedsCopyConstructor** に変更しました。


####エディタ ツール
* **エディタ**
	* CalcCamera のシグネチャ、その他内部カメラ手法の幾つかを変更しました (緩い変数ではなく FMinimalViewInfo struct の使用への切り替え、など)。
	* ビットフィールドの GET_MEMBER_NAME_CHECKED へのサポートを追加しました。
	* 拡張性の改善点
		* カスタム ノード ファクトリに加えて、カスタム ピン ファクトリも登録できるようになりました。 
		* UWorld ライフサイクル デリゲートを追加しました。 
		* バーチャルの APlayerController::GetAudioListenerPosition を追加しました。
	* 初めて追加された時に、Matinee カーブ トラックが正しく表示されるようになりました。
	* [Check Out Assets (アセットをチェックアウトする)] ウィンドウが表示されると、[Check Out Selected (選択項目をチェックアウト)] ボタンがフォーカスされ、[Enter] を押すとそのオプションが選択されます。
	* Matinee keyframe Set Time のアンドゥ / リドゥが可能になりました。
	* [Level Editor (レベル エディタ)] ウィジェットで、オブジェクトの負のスケーリングができるようになりました。
	* [Level Editor (レベル エディタ)] ウィジェットでオブジェクトをスケールあるいは回転する際に、カーソルが最初の位置にリストアされるようになりました。
	* Streaming Volumes のメニュー オプションを、[Levels] メニューの [Levels] セクションのサブメニューに移動しました。
	* パッケージ保存エラー時に出るエラー メッセージを改善しました。
	* マチネ グループでアクタを選択すると、シーン アウトライナーのアクタが選択されるようになりました。
	* そのタイプのプロパティをもたないアクタにマチネ トラックを追加しようとすると、エラー メッセージが表示されるようになりました。
	* シーン アウトライナー上に Actors Component Mobility 変数の 2 つ目のアイコンが表示されます。

* **ランドスケープ**
	* Retopologize tool + XYOffset が有効になりました。
	* PhysX データを LandscapeMeshCollision コンポーネントに追加しました。


####ゲームプレイとフレームワーク
* **短い名前のパッケージのサポートが ini ファイルから削除されました。セクション名も該当します。**
	* つまり、 `[Engine.GameEngine]` などのクラス セクション名は `[/Script/Engine.GameEngine]` に変更する必要があります。
* AEnvironmentVolume を削除しました。
* コンポーネントごとではなくバインディングごとに入力を消費するかどうかを、入力バインディングで指定できるようになりました。ConsumeNone/Bound/All を持つコンポーネントの代わりに、それぞれのバインディングがその入力を消費し、後続のコンポーネントが入力を受け取らないようにブロックすることを示す boolean bBlocksInput をコンポーネントが持つかどうかを指定するbConsumesInput boolean を持つようになりました。
* FGameWidgetWorldContext を FGameWorldContext に名前変更しました。
* 各種 MovementComponents の名前を命名規則と一致するように変更しました。 
	* Character
	* Rotating
	* Projectile
	* Vehicle
	* Shooter
* (UNavigationSystem から派生した) カスタムナビゲーション システムクラスを定義するゲーム専用オプションを実装しました。
* **Collision Profile Refactor**
	* ECC_WorldTrace はなくなりましたので、固定ジオメトリを探す場合は ECC_Static を使ってください (Movement チャンネルは ECC_Static なので、Mobility は Movable ではありません)。
	* グローバル デフォルトは、コードと INI ファイルで定義されます。グローバル デフォルトは、すべてがブロックされるわけではなくなりました。
		* デフォルト応答が含まれるように、デフォルト チャンネルの記法の定義を変更しました (グローバル デフォルト)。

				+CustomTraceChannel=(Channel=GameTraceChannel1, Name=Interact, Response=Ignore)
		* プロファイル定義から DefaultResponse を削除しましたた。ただし、グローバル デフォルトから開始します。
	* CollisionResponse データ構造を変更して、グローバル デフォルトから修正されたチャンネルのみ利用できるようにしました (これは CDO 値ではなく、グローバル デフォルトであることに注意してください)。
	* まだまだ変更はあります！
* **UPhysicalMaterialProperty を非推奨にしました**。PhysicalMaterial に DEFAULT.INI で変更できる一般的な列挙型変数値が含まれるようになりました。
	* プロジェクトごとにカスタムできる EPhysicalSurface 列挙型変数をエンジンに追加しました。
	* UPhysicalMaterialProperty とそれぞれの子クラスを非推奨にしました。  
	* `DefaultEngine.INI` の例です。

			[PhysicalMaterial.SurfaceTypes]
			SurfaceType1=Asphalt
			SurfaceType2=Dirt
			SurfaceType3=Water
* MeleeRange 変数がAPawn から削除されました。ローカルのポーンで使用には、ゲームの派生クラスに入れておく必要があります。
* **SkeletalMeshComponent の PhsyicsWeight を削除しました**。`bBlendPhysics` を使うか、または BodyInstance ごとに `PhysicsWeight` を定義します。


####オンライン
* Stream を参照する OnlineSubsystemLive のスペルミスを修正しました。
* プラットフォーム レイヤーに HTTP が追加されました。
	* プラットフォームごとにそれぞれの http リクエスト / レスポンスが追加されました。
	* 未実装のプラットフォームは GenericPlatformHttp を使用していることにご注意ください。


####レンダリング
* (レンダリング スレッド コマンドの順序で) レンダリング スレッドにプロパゲートしたステートを取得するために、新しいコンソール変数フラグ ECVF_RenderThreadSafe を作成しました。これは他のスレッドに対しては機能しません。
* 複数のポストプロセス ボリュームを組み合わせる場合、アンビエント キューブは追加ではなく線形補間を行うようになります。
* 今後のイタレーションに対する加算ライティング条件を削除しました。


####プラットフォーム
* TargetType ではなく TargetRules オブジェクトを受け取るように PrepTargetForDeployment 関数を変更しました。 
* D3D11Drv を D3D11RHI に変更しました。
* 全ての D3D11 RHI を 1 つのモジュールにまとめました。
	* WinRTRHI を削除しました。


####アニメーションとペルソナ
* Static Mesh Editor Socket プロパティ変更に対して、アンドゥ / リドゥ操作ができるようになりました。
* Static Mesh Editor Socket 削除に対して、元に戻す / やり直し操作ができるようになりました。



## 継続事項と改善

#### 分析
* エンジン分析の改善点
	* エラー レポートを改善しました。
	* 再マップされたキーバインディングをトラックします。
	* OS 言語と GPU ドライバーのバージョンをトラックします。
	* 新規作成されたブループリントをトラックします。
	* 主要なサブ エディタ ツールの動作時間をトラックします。


####ブループリント
* ブループリントのルート コンポーネントは、適用された変形を保てなくなりました。
* ブループリント インターフェースの編集時に、新規関数を純粋関数としてマークできなくなりました。
* [DELETE] キーを使って選択アイテムをブループリント エディタの [My Blueprint] タブから削除できるようになりました。
* アンドゥ / リドゥ操作を続けて早く実行しても、ワークスペースをスパムしなくなりました。
* UObject サブクラス ピンを引き出すと、IsValid ノードが正しく表示されるようになりました。
* 派生した変数のカテゴリは変更できなくなりました。
* ルート コンポーネントが選択されると、変形ウィジェットがブループリント コンポーネント エディタで非表示になりました。
* 浮動小数点値表示で、連続するゼロが少なくなりました。
* 変数の Find Instances から返された結果を見直して、関連のある結果のみが表示されるようにしました。
* ウィンドウ メニューからアクセスすると、ブループリントの親変更メニューにタイトルが追加されるようにしました。
* 引き出したピンを変数に昇格させるオプションを追加しました。


#### サウンド
* Enveloper ノードにモジュレーション設定を追加しました。
* コンテンツ ブラウザで右クリックしても、サウンドがポーズしなくなりました。


####コア
* コマンドライン `AllowStdOutLogVerbosity` を追加しました。`* -Cmd.exe` を実行すると、ログレベルが詳細モード以下のログをすべて stdout に出力します。
* Plugin Descriptor に新規の変更があります。 
	* プラグイン記述子に入力フィールドを多数追加しました。(文書はまもなく更新されます!)
	* プラグインに Resources サブフォルダ (Icon128.png サムネイル) を追加しました。
* Simplygon が VS 2012 ビルドにコンパイルされます。
* モジュールを `FModuleManager::LoadModule` 経由でロードする前に、DLL のバージョンの互換性がテストされるようになりました。
	* FindModules で発見されたモジュールは、リストへの追加前に現在のエンジンのバージョンとの互換性を確認するようにしました。
* パスにスペースがある場合、VSAccessor がソリューション ファイル パスを開けるようになりました。
* [New Project] ダイアログで c++ プロジェクトを作成後、エディタではなく visual studio が開くようになりました。実際に c++ プロジェクトを確実にビルドできるように、強めのテスティングを追加しました。
* プロジェクトが自動ロードに失敗すると、エディタが正常にロードされるまで自動ロードが無効になるようにしました。
* 新規プロジェクト ダイアログは、最初のページがテンプレート、2 ページ目が名前と位置を選択するウィザードになりました。
* コンテンツ ブラウザ フィルタは、フィルタがアセットの表示を妨げる場合のみ、アセットとの同期時にリセットされます。
* プロジェクトのデフォルト位置が、My Documents の直下ではなく、My Documents の中のフォルダになりました。
* ファイルがテキスト形式でパーフォースに追加されないように、フェイルセーフ コードを追加しました。
* サービスが利用できない場合、SCC コレクションと作用するためにコレクション エラー処理を追加しました。
* コンテナの最適化全般


####エディタ ツール
* **スレートと UI**
	* スレート スタイル システムを改良中です。

* **エディタ**
	* Play in Editor セッションと Simulate セッションの起動パフォーマンスを改善しました。
	* フレームレートが許容範囲内の場合を除き、ほとんどのメニューとツールチップ アニメーションをスキップするようにしました。
	* PIE/SIE モードの時は、シーン アウトライナーのボーダーとパディングを取り除きました。
	* カラーピッカーのスポイトツール マウスポインタは、アクティブになるとピッカー ウィンドウ外に表示されるようになりました。
	* [PromptForCheckoutAndSave] ウィンドウは、ユーザーにチェックされていないパッケージを記憶します。
	* エントリにアイコンが付くように、Consolidate ウィンドウを適切なラジオボタン スタイルに合わせました。
	* ラジオボタンのアイコンとスタイルをアップデートしました。
	* 変更の計算とテクスチャへのペイントにかかる時間を短縮して、メッシュペイントのパフォーマンスを改善しました。
	* **Select Actors Using This Asset** を使う場合、アセットがアクタの親ではなく実際のオーナーに対して確実にトラックされるようにしました。
	* ポップアップ メニューがアクティブの間、自動保存通知と機能はサスペンドとなります。
	* 列挙型変数名をリストの終わりに一致させずにエントリをソートすることで、Property Matrix のフォールト トレランスを強化しました。
	* Property Matrix テーブルのソートを変更して、列挙型変数名をバイト数値ではなくアルファベットで比較できるようにしました。
	* 1-3 の間でバラバラだったカメラ速度を均一にして、小さめのジャンプは 4->3 、大きめは 2->3 としました。
	* 名前変更の際に選択を維持できるようにシーン アウトライナーを変更し、強調表示の問題を解決するために完全にフォーカスに従うように名前編集ボックスを変更しました。
	* アクタの追加後など、ビュー全体をリフレッシュする場合、最後の選択までスクロールするようにシーン アウトライナーを変更しました。
	* Select Actors が選択肢に追加されるのではなく置換されることを記述するためにツールチップを変更しました。
	* FBX インポート オプションで、インポート時にアセットを保存し再度使用できるようになりました。この機能は、スタティックメッシュ、スケルタルメッシュ、アニメーション シーケンスが対象です。
	* コンテンツ ブラウザの [New] メニューの大きさが、画面の高さの半分以上にならないようにしました。
	* アクタを変換しても、アクタのラベルが変更されなくなりました。
	* マップ ファイル エラーの内容を原因に関連した説明にしました。
	* エクスポート ダイアログをユーザーに提示する場合、FBX が最初のオプションとしてリストされるようになりました (適用可能な場合)。
	* 複数のアセット プロパティをマージして表示する場合、RowName が強制的に修正されなくなりました。
	* カテゴリが選択されると、変数 Category ComboBox が自動的に閉じます。
	* シーン アウトライナーが開くと、(レベル内で) 選択されたアクタが (リストで) 選択されるようになりました。
	* 終了ダイアログ抑制フラグが、依存しない config に保存されるようになりました。
	* アセット命名エラー メッセージがより正確になりました。
	* ユーザーの検索条件とアクションがより正確に一致するように、GenerateFilteredItems を修正しました。
	* Create Destructible Mesh が故障の可能性を防ぐようになりました。
	* 保存内容に応じてマップまたはアセットを参照するように、パッケージ保存エラーを修正しました。
	* タイトルバーの下の部分で、移動を選択できるようになりました。
	* Editors Windows リストがアルファベット順になりました。
	* 無効なインデックス チェックをさらに防ぎました。
	* 'exists in package' となっている箇所を 'exists in file' に変更しました。
	* エディタの URL がデータドリブンになりました。
	* 選択したアクタを移動するコードは、選択されたアクタがあることを想定しなくなりました。
	* アクタが NULL かどうかをリスト追加前に GetAttachedActors がチェックするようになりました。

* **ワールド ブラウザ**
	* レベル間の親 -> 子の関係を追加しました。
	* ワールドのレベル位置が親レベルと相対的な位置に保存されます。
	* リストとフォルダのビューが、レベル階層ビューに変更されました。
	* 距離に基いたレベル ストリーミングを追加しました。
		* ストリーミング距離をワールド レイヤーごとに指定できるようになりました。
	* 指定されたワールド位置から見えるかもしれないストリーミング レベルのプレビュー (強調表示) を追加しました (**Alt + MousePosition**)。
	* ポストロード時ではなく、レベルがワールドに追加された時にレベル位置が発生するようになりました。
	* レベルがワールドの基点からある程度距離があると、強制ロードはされずに非表示 (shelved) となります。ワールド基点にある程度近い場合、自動的に表示 (unshelved) されます。
	* レベルに AlwaysLoadedLevel タグを追加しました。タグが追加されたレベルは、ユーザーがエディタでワールドを開くと自動的にロードされます。
	* 親->子の関係を使って、デモコンテンツ ワールドを再構成しました。
	* 編集不可能なレベルを持つタイルは、無効ステート (グレーアウト) で表示されます。
	* 階層ビューでのドラッグ＆ドロップ操作でストリーミング レベルを追加 / 削除する機能を追加しました。
	* ゲーム内でワールド合成を開く機能を追加しました (`/Game/Maps/MyWorldRoot?worldcomposition`)。
	* ワールド合成を、エディタにロードするデフォルト マップとして指定する機能を追加しました。
	* 矢印キーでレベルを移動する機能を追加しました。
	* ワールド基点の移動が SIE でも機能するようになりました。
	* エディタの環境設定の WorldBrowser を有効 / 無効した後、エディタを再起動しなくても変更が反映されるようになりました。

* **レベル ストリーミング**
	* `UWorld::UpdateLevelStreaming` が、永続的なワールドおよび表示される全てのストリームインレベルで、ストリーミング オブジェクトが更新されるようになりました。
	* 同じレベルを参照するストリーミング オブジェクトを複数持つことができるようになりました。
	* すべてのストリーミング オブジェクトのコマンドが / 非表示となっている場合のみ、レベルはアンロード / 非表示にされます。

* **ランドスケープ**
	* コンパイルを終了するマテリアルのコールバックを追加しました。ランドスケープ エディタ モードとランドスケープ レイヤー サムネイル コードでシェーダー マップ ポインタをテストする代わりにこれを使用します。
	* Landscape NavMesh 生成を最適化しました。 
	* 新規ランドスケープ グリッドとグラウンド フロア パネルと Z-fighting しないように、Perspective ビューポートのエディタ グリッドへオフセットを追加しました。

* **プロファイラ**

####ゲームプレイとフレームワーク
* **物理**
	* PhAT コンテクスト メニューを整頓しました - 単一のボディに対して追加されたオプションを解除し削除しました。
	* ワールド オプションを **bShouldSimulatePhysics** に追加しました- このオプションは有効化 / 無効化することができます。
	* シミュレーション許容制限を公開しました。
	* エディタ レベル ビューポートにデフォルトで StaticMeshComponent 、SkeletalMeshComponent 、BrushComponent に対するコリジョンが付きました。
		* デフォルトで "Query Only" コリジョンを有効にします。

* **最適化** 
	* コンポーネント アタッチの最適化：**UseAttachParentBound**
 
* 配列は、ロードされた順番通りに config へ保存されるようになりました。
* スプライト コンポーネントを ALight アクタから ULightComponent へ移動しました。


####オンライン
* GameCenter OnlineSubsystem のスタブ モジュールを追加しました。
* Facebook OnlineSubsystem のスタブ モジュールを追加しました。


####レンダリング
* GPU スプライトがエミッタの基点と回転を構成するようになりました。
* テクスチャ プレビュー ツールは、正しいアスペクト比でアンラップされたキューブ テクスチャを表示します。
* ライトマップ オーバーラップに対する Lightmass の耐性を強化しました。エラーの報告を行うのは、許容値の 1% を超えなければなりません。
* フォグは正投影カメラでのビューではレンダリングされません。
* テクスチャ プレビュー ツールは HDR テクスチャをクランプしなくなりました。露出制御で HDR の詳細が明らかになりました。
* DX11 の RHIReadSurfaceFloatData のメモリ要件を 8x だけ減らしました。
* 指向性ライトの幾つかのプロパティ名を変更して、より明確にしました。
* 動的と静的の間のフェードを調整するために、カスケード シャドウ マップの設定をエクスポーズ / 名称変更しました。
* MSAA テクスチャの **VisualizeTexture** サポートを追加しました。
* ゲームにおけるポーズが MotionBlur を適切にポーズします (MotionBlur 品質の操作に便利です)。
* SystemSettings のうち、以下をコンソール変数としてエクスポーズしました。
	* `r.UseVSync` 
	* `r.MaxAnisotropy`
	* `r.MaxShadowResolution`
	* `r.ParticleLODBias`
	* `r.SkeletalMeshLODBias`
	* `r.TranslucencyLightingVolumeDim`
	* `r.DetailMode`
* `r.UseTextureStreaming`(注記: `r.TextureStreaming` に変更されました) も導入され、ランタイム時におけるテクスチャ ストリーミングの切り替えが可能になりました。
* ライトマップ ミップマップ生成を改善しました。
* **bFlipGreenChannel** が、再インポートまたはオーバーライト中に、設定はそのままでテキスト上に保存されるようになりました。
* Material Expressions Clamp での **ClampMin and ClampMax** の使用を交換しました。
	* **注記:** 'Clamp' ノードが CL 1672610 (03/06/2013) と 1706681 (25/06/2013) の間に変更されたマテリアルはすべて確認が必要です。ClampMin 値と ClampMax 値は初期のチェンジリストでは交換されていますが、前から存在していたアセットは最近までこれに対して注意されていませんでした。


####プラットフォーム
* クックされたプラットフォームは、バイナリが GameAgnosticExe でない場合、 (個別) プロジェクトベースで実行することができません。
	* 理由は、ゲームがデフォルト クラス (QAGameInfo など) をオーバーライドする可能性があり、アセットを参照しているこれらのクラスがプロジェクト ファイルで使用できなくなってしまうからです。
* Freetype2 update (2.4.12) 
* サポートされていないプラットフォームにターゲットをビルドしようとする場合、UBT はビルド処理中に次のようなメッセージを付けて例外をスローします: <Target> does not support the <platform> platform
* DynamicRHI の作成を整理しました (コードをプラットフォーム専用ファイルに分けました)。 
* SM_PCD3D_SM5 の単なる確認に変わるように、 RHISupportsTessellation(EShaderPlatform) 関数を追加しました。
* エンジンとエディタを Mac にポートしました。


####アニメーションとペルソナ
* メッシュの再インポート後も、LoD 設定ウィンドウが正しく機能するようになりました。
* 現在選択している LoD が削除されると、Persona mesh LoD 設定が "Auto" に変更されるようになりました。
* ペルソナのフロアがメッシュの原点位置ではなくて、バウンディング ボックスの一番下に置かれるようになったので、メッシュと交わることがなくなります。
* 現在選択されているボーンを、ペルソナ ビューポートで「選択中のアイテム」の色でレンダリングします。
* ペルソナ ビューポートの空のスペースをクリックすると、ソケット / ボーンの選択が解除されます。
* アニメーション タイムライン スライダをスクラブ再生すると、マウスのクリックを放した時ではなく、リアルタイムでアニメーションがアップデートされます。
* FBX がコンテンツ ブラウザ (これまでどおりペルソナも) の AnimSequences 用のエクスポート オプションになりました。
* 削除キーでペルソナ スケルトン ツリーで選択されたアセットとアタッチされたアセット削除することができるようになりました。
* スケルトン ソケットがシーン アウトライナーにアタッチできるようになりました。
* **Set Mesh Root Translation** オプションがペルソナ ビューポートから取り除かれました。
* PhAT の **Delete All Bodies** で、アンドゥ / リドゥ操作に必要なアクションが 1 つだけになりました。
* ペルソナの **Import LoD** が正しく機能するようになりました。
* 現在のアクションがいつスケルトンとなり保存 (デフォルトのメッシュの変更) が必要になるかを、ペルソナがペルソナがユーザーに知らせるようになりました。
* ペルソナがエラーの有無をエラーログに表示するようになります。
