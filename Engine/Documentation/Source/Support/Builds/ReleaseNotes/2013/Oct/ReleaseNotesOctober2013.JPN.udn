INTSourceChangelist:2688164
Title:2013年10月リリースノート
Crumbs:%ROOT%, Support/Builds
Description:
Availability:Licensee

[TOC(start:2 end:2)]

## ビルド情報


[REGION:simpletable]
| アイテム | 情報 |
| ---- | ---- |
| **ラベル** | QA_APPROVED_UE4_BUILD_2013_10 |
| **チェンジリスト#** | 1897729 |
| **VISUAL STUDIO VERSION** | Microsoft Visual Studio 2012 バージョン 11.0.60610.01 Update 3 |
| **DIRECTX** | 2010年6月 |
[/REGION]

## 重要情報

 * 現時点のエンジン開発ロードマップ: [UE4 Roadmaps](https://udn.unrealengine.com/questions/topics/roadmap.html)
 * 修正されたバグ： [UE4 Fixed Bugs October 2013](UE4_Fixed_2013_October.xlsx)
 * 既知の問題: [UE4 Outstanding Bugs October 2013](UE4_Bugs_2013_October.xlsx)
 

##主な新機能

####エディタとツール
* **新しいランドスケープ エディタ**
	* **ランドスケープ エディタ** の UI は現在、いろいろな改善を反映させて全体を再ビルドしています。

		![](LandScapeEditor01.png)

	* 用途に合わせてツールを 3 つのモードに分類しました。
		* **Manage** モードには、 **新規ランドスケープ** 、 **コンポーネント** 、 **スプライン** ツールが含まれています。
		* **Sculpt** モードには、リージョンの選択およびコピーペーストに加えて全てのスカルプト (高さマップ) ツールが含まれています。
		* **Paint** モードにはペイント (ウェイト マップ) が含まれています。
	* ウィンドウ フィリング ツール セレクタを廃止し、シンプルなドロップダウン セレクタにしたため、UI がぐっとコンパクトになりました。
	* ランドスケープ エディタを詳細パネルに基づくようにしました。その結果、エディタの残りの部分と整合が取れ、設定名と設定値の間の調整スプリッタなどの新機能が追加されます。
	* スカルプト処理は、 _ペイント_ ではなく **スカルプト** と呼ばれるツールで行うようになりました。	 

		![](LandScapeEditor02.png)

	* レイヤ セレクタは Layer Painting モード時には表示のみにで、エディタの他の部分からの場合と同様にドロップダウン アセット セレクタを使用するようになりました。		

		![](LandScapeEditor03.png)

	* **[New Landscape]** (新規ランドスケープ) ウィンドウが改善され、 **Import** モードと同様に **New** モードでも、 **Landscape** _マテリアル_ およびレイヤ情報リストの設定が可能になりました。 

		さらに、直近で選択したランドスケープ マテリアルも記憶しています！

	* _Material_ セレクタはサムネイルを表示し、エディタの他の部分で見られるアセット セレクタを使用するようになりました。
	* レイヤ情報リストはターゲット レイヤ リストと一致するように改善され、新しいドロップダウン アセット セレクタとスタイリングも使用しています。

		![](LandScapeEditor004.png)

	* **Landscape** View モードからランドスケープ エディタが排除され、代わりにビューポート ビューモード ドロップダウン経由での利用が可能になりました。

* **ビューポートのレイアウト**
	* レベル ビューポートが、各ビューポートのメインメニューから利用できる異なるレイアウトに対応するようになりました。 

		![](ViewportLayouts.png)

	* レイアウトを選択して、現在のタブ内のビューポートの配置を変更します。現在アクティブになっているレイアウトがオレンジ色で表示されます。
	* レイアウトは、 **レベルビューポート** の **[Keyboard Shortcuts]** (キーボード ショートカット) ウィンドウのコマンドとしても利用できます。
	* キーボードでレイアウトを切り替える場合、キーボード入力フォーカスによりビューポートのタブがコマンドで切り替えられます。ビューポートがフォーカスを持たない場合、特に何も起こりません。

* **新しい環境設定：Show Frame Rate and Memory (フレームレートとメモリの表示)**
	* メイン エディタの UI にフレーム レートを切り替えるエディタ環境設定を追加しました。
	* 場所：**Editor Preferences > Developer Tools > Show Frame Rate and Memory** (デフォルトはオン)

		![](ShowFrameRateandMemory01.png)

	* 切り替え前のフレームレート：		

		![](ShowFrameRateandMemory02.png)

	* 目標のフレームレート：	

		![](ShowFrameRateandMemory03.png)

* **Subversion ソース コントロールのサポート**
	* UE4 に Source Control オプションとしてSubversion へのサポートを追加しました。
	* 有効にするには、エディタの右上隅の **ソース コントロール** インジケーターをクリックします。

		![](Subversion01.png)

	* [Provider] メニューから Subversion を選択します。

		![](Subversion002.png)

	* ログイン情報を入力します。

		![](Subversion03.png)

	* Subversion によりパスワードが安全にエディタ外に格納されるようになります。
	* UE4 における Subversion サポートのワークフローは、Perforce のワークフローとほぼ一緒です。それぞれの違いは以下の通りです。
		* アセットはすべて Binary なので、_チェックアウト_ (Subversion には _チェックアウト_ を内臓するというコンセプトはありません) 時にロックされます。
		* ファイルはディスク上で読み取り専用としてマークされません。
		* UE4 で Subversion で作業する前に Subversion レポジトリの _作業コピー_ を用意しておく必要があります。現在、エディタ内でこの設定は行わず、サードパーティ ツールなどを使用しています。
	* 詳細については、http://subversion.apache.org/docs/  に掲載されている Subversion ドキュメントを参照してください。


#### ブループリント
* **詳細パネルの変数デフォルト値の編集**
	* ユーザーは Graph モードの **[Details]** パネルで変数のデフォルト値を編集できます。ここで他の変数のプロパティも編集できます。

		グラフ内で変数取得または編集設定のいずれかを選択します。

		![](EditingVariableDefaultValues01.png)		
		または、 **マイブループリント** リストで変数を選択します。	

		![](EditingVariableDefaultValues02.png)

* **Blueprint Macro と ForEach Node の Wildcard (ワイルドカード)**
	* マクロの出入力を編集する場合、ユーザーは _ワイルドカード_ ピン作成オプション (または _ワイルドカード配列_ ピン) が使えるようになりました。  

		このグレーのピンが、接続するタイプへ自動変換してくれます。

		![](WildcardBlueprint01.png)	

	* この機能は以前まで、 **ForEachLoop** ノードと **ForEachLoopWithBreak** ノードを **StandardMacros** ライブラリに追加するために使用していました。

		[REGION:caption]
		**変換前**
		[/REGION]
		![](WildcardBlueprint02.png) 
		[REGION:caption]
		**変換後**
		[/REGION]
		![](WildcardBlueprint03.png)

* **ブループリント エディタ UI の最新情報**
	* **[ROOT]** エントリ を **Components** モードのActual Scene Root Component ノードに結合しました。	 
	ドラッグアンドドロップ操作中に出るツールヒントの説明文をもう少し分かりやすくしました

		![](BlueprintEditorUpdates01.png)

	* **Components** モードと **Graph** モードの**[Details (詳細)]** タブからオブジェクト タイプの記述を省きました。 
	* **Graph** モードの変数セクションの **[Search]** ボックスを非表示にしました。	 

		![](BlueprintEditorUpdates02.png)

	* 選択後、 **Components** モードの **[Add Component]** のドロップダウン フィルター テキストがクリアされ、リスト全体が再度表示されるようになります。

* **ブループリント エディタの Web Browser Navigation**
	* 新規タブで新規グラフを 1 つ 1 つ開くのではなくて、ユーザーがフォーカスした最後のタブが開き、新規グラフへの移動が Web ブラウザのリンクのようになりました。	

		![](WebBrowserNav01.png) 

	* **シンプル履歴ナビゲーション**
		* マウス左上のボタンで移動できます (Web ブラウザと同様でウェブボタン **4** と **5** です)。 
		* 移動中のグラフ内の位置とズームは常に保存されるので、簡単に戻ったり進んだりできます。
	* **全履歴ナビゲーション**
		* [戻る] ボタンまたは [進む] ボタン上を **右クリック** してタブ履歴リストを表示すれば、いつでも好きな場所にジャンプできます。

		![](WebBrowserNav02.png)

	* **新規タブを開く**
		* グラフを **Ctrl + ダブルクリック** すると、グラフが新規タブの中で開きます。 
		* この機能を使えば、 2 つの異なるタブで同じグラフを開いて、それぞれを別々にパンしたり移動させることができます。 


#### レンダリング
* **UE4 の Oculus Rift サポート**
	* UE4 が Oculus Rift をサポートするようになりました！  
	* Rift にプラグインし、ゲームを起動するだけで、 Oculus Rift を利用できます！  

		Rift は自動検出されるので、レンズの歪みを有効にしておくと、ゲームがステレオスコピックでレンダリングされて表示されます。

		![](OculusSupportUE4_01.png)

	* 有効の場合、プレイヤー カメラの回転が Rift の方向にロックされます。この設定は **ロックした** ままにすることをお勧めします。
	* **ElementalVR** サンプル プロジェクトは、現在メインの、唯一テスト済みの VR 体験です。このプロジェクトを GDC で披露し、 60 FPS に達しました。ユーザーの皆様、是非 VR を体験してみてください！
	* 最高の体験についてのメモ：
		* 60 FPS でデモを動かすカードの場合、 **vsync を有効** にすることをお勧めします。HD キットを使用する場合は、スクリーンの向きにより明らかにティアリングが発生するため、特に推奨します！
		* **フレーム バッファ処理の無効化** このオプションは nVidia のコントロール パネルにあります。1 に設定してデバイスの遅延を減らします。

			![](OculusSupportUE4_02.png)

	* 紹介しておきたい進行中の案件は以下の通りです。
		* **全画面自動探知**：現在、Rift が主要モニタになっていない場合、ウィンドウを手動で Rift に移動してコンソールで全画面に切り替える必要があります (「fullscreen] と入力) 。
		* **レンダリング機能は、ステレオスコピック レンダリングと互換性がない場合もあります**。今のところ、 Environmental Reflections はステレオスコピック レンダリングと互換性がありませんし、他にもレンダリングに失敗する機能があるかもしれません！右目が黒い四角で表示されたら、恐らくそれは互換性のない機能なのかもしれません。  
		* **遅延の改善** 今のところ、Rift の現在方向に対してカメラ位置を向けるために、まずゲームスレッド上で 1 回、そしてレンダリングの直前に 1 回と、計 2 回更新を行っていますが、まだ最適化の余地があります。Rift プラグインがレンダースレッド上での最終的な更新用に使用するインターフェースも問題なく使えます。明らかな遅延を減らせるのであればゲームに Rift は要らない場合、ゲームは同じインタフェースで 入力の読み取りと調整を別に行える可能性があります。

* **PC とコンソール用スクリーン空間のライト シャフト**
	* ライト シャフトには、 **フォグ オクルージョン手法** と **加算 / ブルーム手法** の 2 種類があります。それぞれにコストがかかるので、希望する方法を 1 つ使用するのが良いでしょう。
	* **オクルージョン**
		* オクルージョン手法は画面上のオブジェクトの深度からマスクの作成、ライトから離れてマスクへブラーの適用、またフォグや大気のマスクがけに使用します。  
		* 太陽は、スクリーンからわずかに外れてオクルージョン ライト シャフトを取得することが可能ですが、現時点ではユーザーが太陽から 90 度の角度でアプローチするとフェードアウトしてしまいます。_指向性ライト_ のみオクルージョン手法を使用できます。

			![](Occlusion.png)

	* **ブルーム**
		* ブルーム手法はワールド空間の光源周りのシーンカラー（透明度やフォグ イン スキャタリングを含む）をキャプチャして、ライトから離れた位置で放射状ブラーを適用します。  
		* ライト シャフト ブルームはすべてのタイプの _ライト_ (_Point_、_Spot_、_Directional_) 上で有効にできますが、点上や _スポットライト_ 上では作業しにくいかもしれません。光源に近い明るく不透明なサーフェスからブルームするカラーをピックアップします。

			![](Bloom.png)

* **Mobile Rendering:Distance Field Shadows (ディスタンス フィールド シャドウ)**
	* 太陽の光はディスタンス フィールド シャドウを使い、ピクセル単位で計算されるようになりました。	 

		![](DistanceFieldShadows01.png)![](DistanceFieldShadows02.png)

* **Lightmass (ライトマス) の品質改善**
	* ビルド時間を大幅に増やさずに品質を高める方法として適応サンプリングを使用することにしました。
	* **Indirect Lighting Quality** 設定を変更することにより、アーティストは品質とビルド時間のバランスも取れるようになりました。  

		[REGION:imagetable]
		| ![](LightmassQuality01.png) | ![](LightmassQuality02.png) |
		| --- | --- |
		|改善前|改善後|
		[/REGION]

####アニメーション

* **AnimNotifyState Notification**
	* 継続するなど、時間の範囲を定義する以外は、 AnimNotifyEvents と似ています。AnimNotifyClass ブループリントで NotifyBegin、NotityTick、NotifyEnd をトリガします。

		![](AnimNotifyState01.png)

	* アニメーションがティックされるとイベントが送信されます。

		![](AnimNotifyState02.png)(convert:false)


## 追加項目

#### エディタとツール
* **[Open Project (プロジェクトを開く)]** で **プロジェクト ブラウザ** を使用するようになりました。
* コードベースおよびコードベースではないゲーム プロジェクトのパッケージを実装しました (**[Main Menu] > [File] > [Package Project]**)。
* エディタの子ウィンドウが Windows のタスクバーに加わり最小化できるようになりました。
* **新しいランドスケープ エディタの UI**
* ソケットを接続点にして、 _ランドスケープ_ スプライン制御点にスタティック メッシュの割り当てが可能になりました。
* _スレート_ ベースのロード画面が実装されました。
*エディタにユーザビリティ テスティングのための色覚障碍フィルタを実装しました。
* エディタ UI HUD にフレーム レートとメモリ表示を切り替える環境設定を新しく加えました。 
	* **[Editor Preference (エディタの環境設定)] > [Developer Tools (デベロッパーツール)] > [Show Frame Rate and Memory (フレームレートとメモリを表示)]** (デフォルトはオン)。 
* **ビューポートのレイアウト**
	* 4 ペイン 2x2 レイアウトの他に 2 、 3 、 4 つのビューポート ペインが新しく登場しました。
	* レベル ビューポートは、それぞれのビューポートのメインメニューにアクセスし、様々なレイアウトに対応させました。
	* レイアウトを選択して、現在のタブ内のビューポートの配置を変更します。
	* レイアウトは、 **レベルビューポート** の [Keyboard Shortcuts (キーボードショートカット)] ウィンドウのコマンドとしても入力できます。
* 高密度のスタティック メッシュのインポート時の速度の改善に合わせてトライアングル順序最適化アルゴリズム (Forsyth) が新しくなりました。
	* NVTriStrip は、コンソール変数 r.TriangleOrderOptimization を 0 に設定すれば使用できます。
* 新規の LOD のインポートや既存の LOD をスタティック メッシュに置き直す機能を追加しました。
* **プロファイラ**
	* イベント グラフを改善しました (Average と Maximum イベント グラフの選択オプションが追加されました）。
	* エクスプローラーからプロファイラへ ue4stats ファイルをドロップ＆ドロップする機能を追加しました。
	* プロファイラのパフォーマンスが改善されました (キャプチャされた総計ファイルのロード時間の高速化に関するものがほとんどです)。


#### ブループリント
* **[My Blueprint**]** パネルあるいは選択対象の Get/Set ノードで変数が選択された場合に、 **[Details]** パネルの変数デフォルトを編集する機能を追加しました。 
* ライト用の IES プロファイル テクスチャがブループリントに設定できるようにしました。
* **ブループリント エディタ** の中に **Components** モードで作成した変数を割り当てられるようにしました。
* **ブループリント エディタ** の **Graph** モードに **Components** モードで作成した変数の割り当てを可能にしました。
* 編集中の機能の変数名、ツールチップ、カテゴリが **ブループリント エディタ** の **Components** モードの **[Details]** タブに追加されました。編集中の変数名も **Graph** モードの **[Details]** タブに再保存されるようになりました。
* _ブループリント_ の _マクロ_ がワイルドカード パラメータ タイプを受け取れるようにしました。ワイルドカードにできるピンの数は決まっていませんが、今のところ _マクロ_ のインスタンスにつきワイルドカードは 1 つに制限されています。
* StandardMacros ライブラリの **For Each Loop** ノード は _ブループリント_ の配列イタレーションを簡素化します。
* _ブループリントされた_ 全てのアクタに **Received Destroyed** イベントを追加しました。
* **ブループリント エディタ** で Web ブラウザのような体験が出来るようにしました。
	* 戻るへナビゲート、全履歴表示、タブの再利用でグラフを開きます。
* ドラッグ＆ドロップで **[My Blueprint]** タブの変数 / カテゴリの並び替え機能を追加しました。
* **Get All Actors With Interface** を追加しました。


#### ゲームプレイとフレームワーク
* **Oculus Rift サポート**  
	* このビルドにはサポート対象のプラットフォームの Oculus Rift ハードウェアに対する予備サポートが含まれています。エンジン立ち上げ時にデバイスをプラグインすると、ステレオスコピック レンダリング、 HMD 、歪み、読み取りセンサー データが有効になります。この機能は開発中のため、適切なモニターを探知する機能などはまだ動作しています。
* r.MaterialQualityLevel がランタイム時に変更できるようにまりました (マテリアル式 **QualitySwitch** を使用するとアートの見栄えの調整が簡単になります)。 
* ガウス ブラー処理のポストプロセス パスの最適化を追加し、大きめのブルームのみにデフォルト使用する r.FastBlurThreshold で調節可能にしました。
* 内側および外側の半径、フォールオフ指数、最小ダメージに対する引数で、ApplyRadialDamageWithFalloff() 関数を GameplayStatics に追加しました。
* Subversion へのサポートを追加しました。
* ソース コントロールがプラグインで管理されるようになりました。
* Combo ボックス (およびそのコンテンツ) のキーボード制御を可能にしました。
* カメラ コンポーネントの最大比が 10 から 100 になりました。
* **Render in main pass** オプションをプリミティブに追加しました。
	* これにより、プリミティブがメインとなるシーンで描画されなくなりますが、他のパス (カスタム 深度パス) では描画されます。
* テクスチャ キューブ アセットへエクスポートする HDR を追加しました。
* 方向ベクターを返す FRotator::Vector() と混乱しないように、 FQuat::Vector() を FQuat::GetRotationAxis() に変更しました。 
* **AnimNotifyState** を追加しました。AnimNotifyState は AnimNotifyEvents とは異なり、継続するなど、時間の範囲を定義します。また AnimNotifyClass ブループリントにおいて、 NotifyBegin 、 NotityTick 、 NotifyEnd をトリガします。 
* エディタでの AnimNotify 描画を改善しました。アクティブな通知がハイライトされます。  
* AnimMontage が現在のスケルトン上で再生できない場合のログ警告を改善しました。 
* FText の数字 / パーセント / 通貨の形式を改善し、場所と記号を制御ができるにしました。
* **PhAT** - 選択中のスタティック メッシュから頂点を選択中のボディにコピーします。


#### レンダリング
* チューブライトが公開されました。ライトの **SourceLength** プロパティを使用してください。 
* PC のポストプロセスに微粒子フィルムを追加しました。 
* **Lightmass の品質改善**
	* 新しい調整用 GI ソルバを使用して品質を大幅に改善しました。
	* **WorldSettings** の **IndirectLightingQuality** で改善が必要なレベルでソルバ品質を選択的にあげることができます。
	* オブジェク同士トが交わる部分の暗いテクセル アーティファクトを減らしました。
* **移動オブジェクトの数が多い個所を中心にレンダリング スレッドを最適化**
	* 1400 の移動オブジェクトのあるテストシーンの RT (リプレイ タイム) の合計は40% 削減されました。
* **スクリーン空間のライトシャフト**
	* 安定性を維持するために Temporal AA を使用します。
	* 異なる 2 つの機能があります。フォグ オクルージョン手法は現実的で、ブルーム / 加算手法は制御しやすいです。
* **モバイル**
	* ディスタンス フィールド シャドウを追加しました。
* **Min** と **Max** マテリアル式を Math カテゴリに追加しました。


#### プラットフォーム
* PC がコンソールと同じキャッシュ化されたテクスチャ ストリーミング(優先されるキャッシュのヒューリスティックによるテクスチャ プール) を使用するようにしました。デフォルトのプールサイズは VRAM の 50% ですが、好きな時に変更できます。
* Deployment to Linux へのデプロイ (転送) は **Unreal Automation Tool** (UAT) でサポートされています。
* **IOS**
	* IPhone5S (64-bit ファットバイナリ) へのサポートと IOS7 の修正を追加しました。
* **Mac**
	* **Unreal Automation Tool** (RunUAT.command) に対するサポートが追加されました。
* Facebook IOS サポートがエンジンを追加しました。
* ステータス更新の共有などに使用するために OSS 用オンライン共有インターフェースを追加しました。
* Facebook IOS SDK をサードパーティ ソースに追加しました。


## 更新ノート

#### エディタとツール
* **ランドスケープ**
	* テクスチャ サンプリングを保存するために、高さマップ法線がウェイトマップにマージしました。
* ストリーミング レベル用の **Edit properties** コマンドで、 AWorldSettings プロパティではなく ULevelStreaming オブジェクトのプロパティを表示するようにしました。
* **コンテンツブラウザ** のアセットを**[Delete]** キーで削除できるようにしました。
* アセット ビューに表示するアイテムがない場合、 **コンテンツブラウザ** が _「Nothing to show; check your filter」_ というメッセージを表示するようにしました。
* コラム ビューの中では **コンテンツブラウザ** サムネイル スケーリングを無効にしました。
* テクスチャ インポートの通知が OK または [Revert] ボタンのクリック直後に消えるようにしました。
* 単一の **Active Bookmark** カテゴリへのブックマーク メニュー入力を移動しました。
* 無効化されたプロパティに対するコードをプロパティは作成しません ( _マテリアル_ が不透明な場合のオパシティ プロパティなど)。
	* 今までは、コード作成用に無効化されたプロパティに適用する式を持ってシェーダーにこっそり使うことができましたが、今後は適用できませんので修正する必要があります。
* アクタ アニメーションの詳細パネルのビルドを変更し、プロパティ表示がデリゲートでの制御を可能にしました。これにより、アニメーションをアクタにドラッグするとパネルのステートが不整合のままになるという問題が修正されました。
* **Create Dynamic Material** _Blueprint_ ノードのツールチップが修正されました。
* **Play In Editor** 中にリアルタイムな **Enable**/**Disable** ができるようにビューポート作成の動作を変更しました。
* _Preview Only_ であることを示すペルソナの **スケルトンツリー** にアセット表示用のテキストとツールチップを追加しました。
* オリジナル機能の出力を削除したので、エラーが表示されなくなりました。 
* Viewport Visualize Buffer メニュー オプションをローカライズしました。
* Import FBX オプション ウィンドウのヘッダーメニューをローカライズしました。
* Viewport Show メニュー オプションをローカライズしました。
* スプラッシュ スクリーンのバージョンと読み込み情報をローカライズしました。
* サウンドキュー エディタのメニュー オプションをローカライズしました。
* ブループリント編集のデフォルトをローカライズしました。
* エディタ設定のキーバインドのオーバーライドに対する通知をローカライズしました。
* PhAT Editor Animation ツールバー テキストをローカライズしました。
* ビューポートをローカライズしました。プレビュー：最近使用したのセクション ヘッダー
* Matinee Group コンテキスト メニューの [Rename Group (グループ名を変更)] をローカライズしました。
* Forsyth のトライアングル順序最適化アルゴリズム (サードパーティ ライブラリとして) をメッシュ インポート パイプラインに統合しました。


#### ブループリント
* _CharacterMovementComponent_ の **Acceleration** プロパティが保護され、GetCurrentAcceleration() のみを使用して _ブループリント_ でアクセスできるようにしました。
	* **Acceleration** を修正して移動するブループリントは、代わりに **InputVector** 使用できるように変換されるはずです。
* ソースファイル数、モジュール数、 Object クラス数、 Blueprint クラス数、 Asset Package 数、マップの数、クラス タイプごとのオブジェクトのインスタンス数に関するプロジェクト リソース 統計を追う分析を追加しました。
* **ブループリント エディタ** に、 **[Details]** パネルと **[Component]** コンテキスト メニューから _コンポーネント_ に対するイベントを追加する機能を追加しました。
* _ブループリント_ にある全てのスーパー コール リファレンスは、コードとユーザーが目にする名前の両方とも _Super_ から _Parent_ に変更しました。
* ただ四角にレ点を入れるのではなくマップ チェック関数としてすぐに見分けをつくように [マップ チェック] アイコンを置き直しました。
* プロジェクトの使用を記録する分析を追加しました。
* プループリント_ コンテキスト メニュー表示で抜けた _foo_ 関数を呼び出すアイコンを追加しました。
* ブループリント配列の **RemoveItem** 関数で全てのインスタンスを除外して、 TArray の動作との一致を可能にしました。


#### ゲームプレイとフレームワーク
* UGameEngine::UserSettings を GameUserSettings に変更し アンリアル エンジン へ移動しました。
* UEditorEngine::UserSettings を EditorUserSettings に変更しました。
* スポーンされ読み込まれたアクタと順序が一致するように PreInitializeComponents を PostActorConstruction に移動しました。 
* AActor::Spawned を AActor::PostActorCreated に変更しました。 
* OnConstruction の前にスポーンされたアクタの PostLoad に類似するように AActor::PostActorCreated を移動しました。
* UWorld の GameMode ポインタがプライベートになりました。GetAuthGameMode() アクセサを使用します。
* **名前が変更された Vehicle クラス**：

	[REGION:simpletable]
	| 変更前 | 変更後 |
	| --- | --- |
	| Vehicle | WheeledVehicle |
	| VehicleMovementComponent | WheeledVehicleMovementComponent |
	| VehicleMovementComponent4W | WheeledVehicleMovementComponent4W |
	[/REGION]

* _NoDrive_ ビークル モデルのサポートは除外されました。 
* Y-up の座標をもつ APEX Clothing アセット上で自動的に **Y-up** から **Z-up** へ変更します。
* エスケープするためには、メッセージ フォーマット パターン文字列で ' の代わりに \` を使用することになりました。
	* メッセージ フォーマット パターン文字列で { or } を使う場合、個別に \`s - の間を { and } でラップする、あるいは 2 つを一緒にラップします。
	* \` の後に { or } をエスケープせずに印刷するには \` を重ねて (\`\`) 使用します。
* 高解像度のスクリーンショット パスの実行中、モーション ブラーを無効にしました。 
* LoadPackageAsync は関数ポインタの変わりにデリゲートを受け取れるようになりました。


#### コア
* Arithmatic と名づけられた各種タイプを Numeric に変更しました。
* ブランチがアーカイブでそれぞれのエントリを定義できるように追加されたカスタム仕様のバージョン スキームを、列挙型変数から UID ベースに変更しました。
	* これまで列挙型変数はカスタム仕様のバージョンの特定のために使われてきました。ObjectVersion.h の EUnrealEngineObjectCustomTag に置かれていました。
	* 今後、カスタム仕様のバージョンは GUID で特定されます。
	* 列挙型変数ベースのカスタム仕様のバージョンが含まれる既存のパッケージは、 GUID の 00000000-00000000-00000000-<enum value> との広報互換性があるので、これらのパッケージにはこの値の GUID を使用することが望まれます。
	* FCustomVersionRegistration 変数は、カスタム仕様のバージョンの用途を記述している列挙型変数および文字列ではなく GUID で定義されるべきです。

			FCustomVersionRegistration GMyModule((EUnrealEngineObjectCustomTag::Type)0x12345678, MyLatestVersion);

		は、以下のようになります:

			FCustomVersionRegistration GMyModule(FGuid(0, 0, 0, 0x12345678), MyLatestVersion, TEXT("My module"));
 
* FMaterialVertexParameters の中で計算された TangentToWorld はスケーリングを除外し、ピクセル シェーダーに渡された TangentToWorld と一致します。 
* UnrealBuildTool  (モジュラー ビルド内のエンジン) は、ルート内で 「*.uprojectdirs」ファイルを使い「uproject」ファイルに対して表示するフォルダを 1 レベル深い場所で検索します。 
	* この機能は bUseUProjectDirs を false に設定すれば、 UnrealBuildTool で無効にできます。 


#### プラットフォーム
* クックされていない UE4 とゲームバイナリを取り除きました。 
	* UE4Editor.exe を実行、またはコマンドレットを実行すれば、クックされていないゲームをいつでもテストできます。 
	* 生成されたプロジェクト ファイルの中に、 Uncooked オプションは存在しなくなりました。その代わりにエディタを使用します。 
	* エディタのコマンドラインに -game オプションを渡してゲームを実行します。 
	* **Play in Standalone** プロセスを使用してエディタからゲームを実行することもできます。 

		[REGION:note]
		Uncooked ターゲットは既存プロジェクトが削除するはずです。GameUncooked が有効な TargetType ではなくなりました。差し当たり、 UnrealBuildTool はこれらのファイルを自動でスキップします。
		[/REGION]

* 数ある「*.mm」ファイルを「*.cpp」に更新しました。
 

#### ネットワーク
* 専用サーバー用のデフォルト マップ / ゲーム情報の ini オプションを追加しました。 
* 少なめのコマンドライン パラメータで専用サーバーを起動させることが可能です。 
* StartupMap コンセプトは DefaultMap と機能的に同じなので削除しました。


####オンライン
* IsEnabled() 機能はすべてのオンライン サブシステムで一貫しています。
* 新規ログ オプションとして LogOnlineGame と LogBeacon を追加しました。   
* IsRunningServer から IsRunningDedicatedServer に変更して分かりやすくしました。
* JoinFriendSession から FindFriendSession に変更して用途を明確にしました。 
	* FindFriendSession は友達の場所の検索結果のみを返します。 
	* その結果を使って後に JoinSession を呼び出し、フローを完成させなければなりません。
*  IOS 向けに Facebook Identity を追加しました。
* IOS 向けに Facebook Friends Access を追加しました。OnlineSubsystem Sharing インターフェースを使って権限申請を行います。
* OSS ユーザーに関するデータをホストする OnlineSubsystem::GetUserInterfac の初回導入を追加しました。
* OnlineSubsystem Facebook を更新したので IOS と Windows のビルドを並べることができます。
* サービス キーと権限に関する MCP コンフィギュレーションを config ファイルではなく NoRedist ソース ファイルへ移動しました。
      * 開発便宜上、これらの値の取得には DefaultEngine.ini メソッドを維持しています。
      * ゲームはコールバック デリゲートを使ってコンフィギュレーションをオーバーライドすることができます。
* Http
	* wininet の http モジュールに対してのタイムアウトが公開されました。
		* HttpConnectionTimeout=60 
		* HttpReceiveTimeout=30 
		* HttpSendTimeout=30
	* リクエストはタイムアウトを待たず早めに失敗します。


## 今後の追加および継続事項

#### エディタとツール
* **ワールド ブラウザ**
	* ブランクのパーシスタント レベルをランタイム パッケージからディスク上の実際のパッケージに変更しました。**Open World** コマンドはフォルダではなくマップ ファイルを要求します。 
	* **右クリック** するとカーソルを合わせたタイルが正しく選ばれます。
* アクティブになっているビューポートに表示されるビューモード名がメニューリストの表示と同じになりました。
* ロック時、レベルを現在のレベルにするためにメニュー オプションを無効にします。
* データのみの場合と通常の _ブループリント_ には同じアイコンを使用し、両者の区別を付けるため色だけ別にします。
* シーン テクスチャ ノードにビューポート サイズに対する UV をクランプするオプションが付きました。
* アセットを新規作成されたコレクションにドラッグしてもエディタがクラッシュしないようになりました。
* 開始時と同じフレームでゲームを終了した場合のクラッシュを防ぎます。
*  _Matinee_ アクションに対して欠けていたツールチップを追加しました。
* _Matinee_ の新規作成時に **コンテンツブラウザ** アセットが選択されてもエディタはクラッシュしなくなりました。
* **Placement Browser** - コレクション ビューでは、無効なパラメータによるエントリ作成の試みは行われなくなります。
* **コンテンツブラウザ** はテキストではなくアイコンを使用してコレクション タイプを表示するようにしました。
* **Matinee** のドロップダウンに **Matinee を追加** のオプションを付けました。
* ソース コントロールが切断されている時、右クリックしたりコレクションの新規作成をしても警告が出ないようにしました。
* Zoom と _ブループリント_ の見出しをローカライズしました (可能な範囲で)。
* **ブループリント** / **ペルソナ** モードの見出しをローカライズの表示にしました。
ドロップダウンの **[浮動トラックを追加]** をローカライズの表示にしました。
* BSP Pan をローカライズの表示にしました。
* _Matinee Actor_ の [詳細] セクションを **Transform** の下に表示しました。
* **Ctrl + W** で複製する場合は、もう 1 回だけ取り消しをする必要があります。
* _SoundCue_ と _SoundWave_ はダブルクリックしても再生されなくなりましたので、 **サウンドキュー エディタ** を開いてください。
* **Hidden In Game** としてマークされた _DecalActors_ はエディタに正しく描画します。
* ガウス曲線の DOF エフェクトを最適化します。**Near Blur Size** がコンソール変数 `r.DepthOfField.NearBlurSizeThreshold` によって定義された閾値より小さければ、近いブラー エフェクトが無効化され、その代わりに負荷の小さいシェーダーが使用されます。
* バッファのビジュアル化システムを へ平行投影ビューモードで正しく動作しています。
* Alt + ドラッグでビュー回転をしても、 _ランドスケープ_ がリサイズしようとしなくなりました。
* ラインの複雑さを緩和し DrawDashedLine() を最適化して、エディタ内での _ランドスケープ_ スプラインのレンダリングを最適化しました。 
* UI 全般における改善点：
	* 40x PNG のみで [ViewMode] のアイコンを新規に追加しました。
	* ローカル、共有、プライベート用に追加した新規アイコンは接続する必要があります。
	* [Profiler] アイコンを新規作成し、ビルドに追加、接続しました。
	* [Colorblind Solution] アイコンを更新しました。自動的に動作するはずなので、ビルドを破壊せずにPNG へ置き換える状態にはなっていません。
	* 現在の「コンテンツブラウザ」フォルダのアイコンが光るように調整します。デフォルト アイコンを前のバージョンの外見に戻す色調を弱めるためのコードが必要です。 
	* 翻訳ツールバー オプションの既存アイコンを修正し、新規にアイコンを作成しました。PNG アセットが置き換えられたので、新規翻訳アイコンにコード合わせが必要です。 
	* メインの [Add Event Caller blueprint] ボタン (40x サイズ) およびコンテクスト メニュー (16x サイズ) の両方のアイコンを新規作成しました。 
	* Import FBX Chunks @ 40x のアイコンを新規作成しました。エディタでのコード合わせが必要です。変更は PNG アセットのみ。 
	* 16x と 40x の両方の解像度で、「カメラ位置でのスタンドアローン ゲーム」と「再生開始のスタンドアローン ゲーム」用にそれぞれアイコンを新規作成しました。PNG アセットのみで、コード合わせが必要です。 
	* [Enum]、[Bluprint Delegate]（16 と 24x）、接続中まはた切断中の [Delegate Pins] のアイコンを新規作成しました。PNG アセットのみで、既存の PNG ファイルを置き換えます。 
* 新しいエンジンの分析法であるエディタ トラックのソース管理プロバイダーが変ります。
* ビューポート ツールバー ボタンが通常のツールバー ボタンのように動作し、クリックすると開いているメニューが閉じます。
* EpicSurvey プラグイン用のブランチサポートが追加されました。
* 新しいサーベイの利用可能時にEpicSurvey 通知方法がトースト表示されるように変更し、通知アイコンに対して定義可能な時間遅延と継続時間を追加しました。
* エディタが **Save All** を使う際に選択を解除したパッケージは、アプリケーションの寿命の限り、その状態を記憶します。
* ビューポートでのズーム時に使用するマウスホイールのスクロール速度を分けるために新規エディタ設定を追加しました。
* **コンテンツブラウザ** の検索ボックスには合致する検索結果が全て含まれるようになり、ユーザーは特定のアイテムではなくフォルダ全体を検索できます。 
* PhAT で物理ボディーを開くと対応するボーンを持たない物理ボディを自動削除するオプションを追加しました。
* エディタのファイル メニューからコンテンツのクックおよびプロジェクトのパッケージが機能するようになりました。ただし、プラグインには若干課題が残っています。 
* プロジェクトの新規作成時、 Open Project ツールが非表示になるようにしました。
* _コンテクスト ブラウザ_ 中のテキスト「Nothing to show; check your filter」を中央寄せにしました。
* _Cube Texture_ サムネイルが 2:1 のアスペクト比で描画されるようになりました。
* プロジェクト ファイル ジェネレータを改善しました。
	* 生成プロジェクトに .uproject ファイル、.uplugin ファイル、プラグイン ファイルが含まれるようにしました。
* 起動時のマウス制御を Play In Window モードで可能にしました。
* ユーザーがエディタに明示的にマウス制御を返した場合、インゲーム コンソールを使用してもビューポートの制御が失われないように、マウス制御にのみ従うようにPIE ビューポートは変更します。
* 右のシフトが下方位置で動かなくなってしまわないように、曖昧だった左右のシフトを正確に排除しました。
* タスクのプログレス ダイアログ ポップアップによりキーボードフォーカスが奪われないようにすることで、コンテンツ ブラウザのアクションにあるアクションの無限再帰 (呼び出し) を防ぎます。
* Matinee の [Editing Crosshair (クロスヘア照準を編集)] メニュー オプションに永久チェックボックスが表示されるようにしました。


#### ブループリント
* **MakeArray** ノードは、非純粋関数呼び出しノードだけではなく、全てのノードの前に置けるようにしました。 
* ブループリントのスポーンパラメータに FName が使えるようになりました
* **ブループリント エディタ** の **Components** モードに追加する新規コンポーネントを選択した後、検索フィルタ ボックスをクリアするようにしました。
* **ブループリント エディタ** の **Graph** モードで変数を選択すると、[詳細] タブから検索バーとプロパティ グリッドを削除しました。
* 子の _Blueprint_ Component 変数名が親の _ブループリント_ の _コンポーネント_ 変数名と衝突することがなくなりました。
* **BeginPlay** およびその _ブループリント_ 版である **ReceiveBeginPlay** は、最初に再現されたプロパティがクライアント側で受け取られた _後で_ 動的にスポーンされたアクタに対して呼び出されるようにしました。
* 選択中のアクタを _ブループリント_ の変換する際は、 _ブループリント_ に対してアタッチされている全てのアクタではなく、選択中のアクタのみを選択します。
* ドラッグ中の変数をコンテクスト メニューにプロモートして、 _ブループリント_ ペインにある新規変数の名前を自動的に編集するようにしました。


#### ゲームプレイとフレームワーク
* 任意のクラスと派生クラスのオブジェクトの繰り返しのみなので、 TObjectIterator はかなり速くなりました。
	* 派生クラスは除外して指定されたクラスのオブジェクトを明示的に繰り返すことだけも可能になりました。TObjectIterator のコンストラクターをご覧ください。
* ローカライズされた単語数レポート生成コマンドレットを修正して、 Windows 形式の新規改行文字を正しく処理できるようになりました。
* さらに効率的にするためのマイナーな最適化をいくつかのハードウェアで実施しました。
* スケーラビリティを SynthBenchmark に追加し (必要に応じて速くできますが精度は下がります)、品質を判断するために debugoutput を追加しました。
* Enable / DisableInput を Pawn 、 PlayerController 、 LevelScriptActor から呼び出すようにしました。
* **コリジョン** 
	* CollisionProfile の ObjectTypeName によりコード定義されたチャネル ではなく チャネルの DisplayName を許可します ( ECC_GameTraceChannel1 など) 。
	* UI に関する改善点：トレース型とオブジェクト型に分けて、 Collision Profile を Collision Preset に変更しました。 
	* Get Hit Result Under Cursor もトレース型とオブジェクト型に対応します。
	* コリジョン プロファイルに対するツールチップ サポートを追加しました。HelpMessage の使用  
* アクタ名を NAME_SIZE の長さに制限することにしました。
* 完全なオーディオ アセットをあらかじめロードすることで、オンザフライでロードされないようにしました。
* レベル エディタベースのメインフレームが表示されるまでは、メッセージ ログが表示されないようにしました。
* debug draw delegates 配列へ同時アクセスしてもクラッシュしなくなりました。
* 自動検索選択機能を改善しました。
* GetTextSize が const になったので、 GetTextSize 経由の起動時に実行する必要はありません。
* キーがかけている FText プロパティアセットのロード時の警告を追加しました。
* **Unreal Front Launcher**
	* この機能は開発中です。ランチャーをこの QA ビルドで再有効化し、 Unreal Automation Tool を利用してゲームをビルド、クック、起動します。全機能が実装されているわけではありませんが、 iOS iPad のビルドとパッケージ化だけではなく、ほぼ全ての Windows 設定でテストしています。
* **専用サーバーの最適化**
	* これらの環境で NeedsLoadForClient/Server == false でアクタをスポーンすることはできません。 
	* bAllowTickOnDedicatedServer を FTickFunction に追加します。
	* ParticleSystemComponents は DS にチェックをいれず、 PSC.ActivateSystem をするようにしました。 
	* bAllowReceiveTickEventOnDedicatedServer を AActor に追加し、希望に応じて全てのブループリントに DS にチェックを入れることができないようにしま。す。
* ビークルに関して改善しました


#### レンダリング
* シャドウ キャスティングは (以前は LoD ごとでしたが)  _スケルタル メッシュ_ のマテリアルごとになりました。
* 法線から合成ラフネステクスチャ機能に改善しました。スペキュラ エイリアシングに役立つ機能です。
* **モバイル**
	* キューブマップ用の HDR エンコードを改善しました。 


#### オーディオ
* SoundWaves から SoundCues を作成すれば、固有で有効な名前を持つ SoundCue が作成されます。


#### コア
* Slate モジュールの反映が EditorStyle には依存しなくなりました。
	* SlateStyle を EditorStyle に変更しました。
	*統計値にあまり頼らず、スタイル システムの大幅なリファクタリングを行います。コンテンツを経由してウィジェットのスタイリングを操作するために使用する新規アセット タイプの Slate Widget Style を導入しました。
	* 古いボタンおよびチェックボックス スタイル アセットのファクトリを削除すれば、新規にファクトリを作成なくてすみます (まもなく廃止となります)。
* 表示テキスト変数の定義時に、新しい SLATE_TEXT_ARGUMENT もしくは SLATE_TEXT_ATTRIBUTE マクロを使用するためにコア スレート ウィジェットを更新します。これにより、ユーザーは FStrings または FText for values のいずれかをパスすることができます。スレート ウィジェットを何回かのステップを踏んで対応する完全なる FText へ変換してみようと思います。最初のステップでは、現在渡されてい る FText 用の .ToString() を削除することができます。次に ANSI* と TCHAR* へのサポートを削除して、 FText を使うために十分な数だけ場所が切り替わったら、マクロロジックを反転して Ftext を TStrings にではなく、 FStings を FText に変換できます。この時点で、 FText を内部で使用するためにコア ウィジェットを変換し、 FString のサポートを段階的に削除し、最終的には完全に削除できます。
	* コア スレート ウィジェット テクスト フィールドの ANSI*  および  TCHAR* に対するサポートを削除します。
* UnrealAutomationTool と UnrealBuildTool のビルド用基礎構造に対する改善と修正がいろいろあります。
* コードベースではないプロジェクトへのコード追加に合わせて uproject ファイルが更新されるようになりました。
グリッド パネルに行も列もないということが起こらないように注意します。
* TabManager からアンロード済みオブジェクトに対するリファレンスをなくしました。
* プロパティ内の上付き文字は強制的に下付き文字になりました。
* 使用が未承認の FindText をクリーンアップします。
* テキスト エレメントにはダブル スペースの改行はもう含まれません。
* ツールバーをクリックすると、ローカライズされたツールバーが展開します。
* マテリアル エディタ式カテゴリをローカライズしました。
* 反射 の命名規則の整合を強化しました。
* バッファの視覚化の命名規則の整合を強化しました。
* サウンドのスプライトの切り替えをしてもライトのスプライトは切り替わらなくなりました。
* UDoubleProperty に Double 型の UObject プロパティを追加しました。
* バイトサイズを人間が読み取れる文字列に合わせるため FText::AsMemory() を追加しました。
* UHT がエラーを起こさずに空のヘッダファイルを処理できるようにしました。


#### プラットフォーム
* Static Library Support を Android ツールチェーンに追加しました。
* **Mac** 
	* エンジンとエディタを Mac へポート中です。
	* Mac OS X の Intel HD 4000 カードへのソフトウェア フォールバックを避けるために、スケルタルメッシュ ボーン マトリクスには大型のユニフォーム バッファではなく頂点バッファおよび頂点テクスチャ フェッチ(Vertex Texture Fetch) を使用します。
	* バッファは常に存在し、結合し、 (FVector4) 以上のサイズで、プラットフォーム間の正しい挙動を確保しています。
	* OpenGL ES2 でレンダリングする場合では、またユニフォーム バッファが使用されます。
	*  Mac OS X 上では、高精度のマウス操作の間、カーソル位置を常に手動で更新しエディタ ツールが機能していることを確認します。
	* Mac OS X 用 Forsyth Xcode プロジェクトとライブラリを追加しました。






