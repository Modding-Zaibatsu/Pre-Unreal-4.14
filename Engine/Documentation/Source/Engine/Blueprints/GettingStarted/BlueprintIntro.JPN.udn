INTSourceChangelist:3037940
Availability:Public
Title:ブループリント入門
Crumbs: %ROOT%, Engine, Engine/Blueprints
Description:ブループリント入門者向けに機能の概要を説明します。 
version:4.9
parent:Engine/Blueprints
order:1


[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Blueprints/GettingStarted:title%](Engine/Blueprints/intro_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/blueprint_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Blueprints/GettingStarted:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Blueprints/GettingStarted:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Blueprints/GettingStarted]
	[/PARAM]
[/OBJECT]
[/VAR]
[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine/Blueprints/GettingStarted:title%](Engine/Blueprints/intro_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/blueprint_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Blueprints/GettingStarted:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Blueprints/GettingStarted:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Blueprints/GettingStarted]
	[/PARAM]
[/OBJECT]
[/VAR]


[TOC (start:2)]

[EXCERPT:Intro]
アンリアル エンジンの **ブループリント ビジュアル スクリプティング システム** は、アンリアル エディタを使用したゲームプレイ エレメントの作成に、 
ノードをベースとするインターフェースの概念を基礎としたゲームプレイ スクリプティング システム一式です。一般的な多くのスクリプト処理言語と同様に、エンジンでオブジェクト指向 (OC) クラスまたはオブジェクトを定義します。 
UE4 を使う場合、ブループリントを使って定義したオブジェクトは通常口語的に「ブループリント」と呼ばれます。 

非常に柔軟かつパワフルなシステムで、一般的にプログラマーだけが使用できるとされてきたコンセプトとツールをデザイナーが事実上すべて使うことができます。さらに、
アンリアル エンジンの C++ インプリメンテーションで利用できるブループリント固有のマークアップにより、プログラマーはデザイナーが拡張する基本システムを作成することができます。
[/EXCERPT:Intro]

ブループリント アナトミーと含むブループリントの概要、およびブループリントの UE3  Kismet およびアンリアル スクリプトとの関連性については [](Engine/Blueprints\Overview) で詳細をご覧いただけます。


## ブループリントの仕組み
ブループリントは基本的に、ユーザーのゲームに付加される視覚化されたスクリプトです。ノード、イベント、関数、そして変数をワイヤーと接続して複雑なゲームプレイ要素を作成します。

ブループリントは、オブジェクト構築、個々の関数、一般的なゲームプレイ イベントなど、様々な目的を持つノードのグラフを使って機能します。これらのノードは各インスタンスに固有で、動作や様々な機能を実装します。


## 一般的なブループリントの種類

作業でよく使われる種類は、Level ブループリントと Blueprint クラスです。  

この 2 種類の他にも、[ブループリントの種類](Engine/Blueprints/UserGuide/Types) には [ブループリント マクロ](Engine/Blueprints/UserGuide/Types/MacroLibrary) や [ブループリント インターフェース](Engine/Blueprints/UserGuide/Types/Interface) があります。

[OBJECT:TopicList]
	[PARAM:title]
		[Level ブループリント](Engine/Blueprints/UserGuide/Types/LevelBlueprint)
	[/PARAM]
	[PARAM:description]
		[REGION:lightbox]
		[![](Engine/Blueprints/GettingStarted/Level_Blueprint_Main.png)(w:640)](Engine/Blueprints/UserGuide/Types/LevelBlueprint) 
		[/REGION]
		Level ブループリントはアンリアル エンジン 3 における Kismet と同じ役目を果たし、同じ性能を持っています。レベルごとに専用の Level ブループリントが存在し、レベル内でのアクタへの参照と操作、Matinee アクタを使用したシネマティックスの制御、レベル ストリーミングやチェックポイントやその他のレベル関連システムの管理が可能になります。さらに Level ブループリントは、レベル内に配置された Blueprint クラス (次のセクションで例を紹介します) と相互作用し、例えば変数の読み取り / 設定や中に含まれるカスタム イベントのトリガーなどが可能です。
	[/PARAM]
[/OBJECT]

[OBJECT:TopicList]
	[PARAM:title]
		[Blueprint クラス](Engine/Blueprints/UserGuide/Types/ClassBlueprint)
	[/PARAM]
	[PARAM:description]
		[REGION:lightbox]
		[![](Engine/Blueprints/GettingStarted/Blueprint_Main.png)(w:640)](Engine/Blueprints/UserGuide/Types/ClassBlueprint)
		[/REGION]
		Blueprint クラスはドア、スイッチ、収集アイテム、破壊される景色などのインタラクティブなセットの作成に理想的です。上の画像では、ボタンとドアのセットがそれぞれ別のブループリントで、各ブループリントにはプレイヤー オーバーラップ イベントに反応し、アニメートさせ、サウンド エフェクトを再生し、マテリアルを変更するために必要なスクリプトが含まれています (例えば、ボタンは押されると光ります)。

		この場合、ボタンを押すとドアのブループリント内のイベントがアクティブになり、ドアを開きます。ただし、ドアは他の種類のブループリントあるいは Level ブループリント シーケンスでも簡単にアクティブにすることができます。ブループリントは性質上は独立しているので、レベルの中にドロップする方法で構築することが可能で、最低限の設定で簡単に機能します。つまり、プロジェクト全般で使用するブループリントを編集すれば、インスタンスごとに更新されます。
	[/PARAM]
[/OBJECT]

## ブループリントのその他の機能
ここまで Level ブループリントとブループリント Class について学習しましたが、ブループリントは次のようなこともできます。 

[OBJECT:TopicList]
	[PARAM:title]
		コンストラクション スクリプトを使用したカスタマイズ可能なプレハブの作成
	[/PARAM]
	[PARAM:description]
		![](Construction_Script.png)

		コンストラクション スクリプトは、ゲームプレイ中でない場合にエディタにアクタが配置あるいは更新されると実行されるブループリント Class 内のグラフの種類です。マテリアルを自動更新してポイントライト コンポーネントの色や輝度に一致させる照明設備、あるいはエリア上のフォーリッジ メッシュをランダムに散らすブループリントなど、背景アーティストの作業を早めるカスタマイズが簡単なプロップの作成に便利です。

		コンテンツ サンプル マップの長い部屋はそれぞれのサンプルが含まれていますが (上図)、実は多数のコンポーネントからなる 1 つのブループリントで構成されています。ブループリントのコンストラクション スクリプトは、ブループリントの **[Details (詳細)]** パネルに公開されるパラメータに基いて、様々なスタティック メッシュやライトを作成し調整します。それぞれのコンテンツ サンプル マップを作成したら、デモルームのブループリントで長さ、高さ、作成する部屋の数の値 (その他いくつかのオプション) を設定します。すると、あっという間に部屋の設定が完了します。

		このようなブループリントは初期の作成に時間がかかりますが、使用頻度が高いのであれば、レベルのビルド時間を短縮でき、変更も楽に行えるので、使う価値はあります。
	[/PARAM]
[/OBJECT]

[OBJECT:TopicList]
	[PARAM:title]
		プレイ可能なゲーム キャラクターの作成
	[/PARAM]
	[PARAM:description]
		![](Game_Characters.png)

		Pawns (ポーン) もまた Blueprint クラスの 1 つで、ブループリント グラフでプレイ可能なキャラクターに必要なエレメントをまとめることができます。カメラのビヘイビアを操作し、マウス、コントローラ、タッチスクリーン用に入力イベントを設定し、スケルタル メッシュ アニメーションを処理するための Animation Blueprint アセットを作成することができます。

		新規作成された Character ブループリント には、動き回り、ジャンプし、泳ぎ、落ちるために必要なビヘイビアのほとんどがビルトインされたキャラクター コンポーネントが付いているので、希望するキャラクターの制御方法にあった入力イベントの追加のみ必要となります。
	[/PARAM]
[/OBJECT]

[OBJECT:TopicList]
	[PARAM:title]
		HUD の作成
	[/PARAM]
	[PARAM:description]
		![](Create_HUDs.png)

		ゲームの HUD の作成にブループリント スクリプトを使用することができます。イベント シーケンスと変数を含むことができる点で Blueprint クラスと似ていますが、直接レベルに追加されるのではなくプロジェクトの GameMode アセットに割り当てられます。

		別のブループリントから変数を読み取るように HUD を設定し、ヘルス値バーの表示、スコア値の更新、オブジェクティブ マーカーの表示などに使用することができます。HUD は、クリック可能なボタン、またはモバイル ゲームであればタッチ入力に反応するボタンのようなエレメント用のヒットボックスの追加にも使用できますし、

		上のサンプル写真はすべて UE4 で使用できるサンプル コンテンツに入っています。**Content Examples**、**First Person Shooter**、**Swing Ninja** プロジェクトでじっくりご覧いただけます。
	[/PARAM]
[/OBJECT]

## ブループリント エディタとグラフ

Level ブループリントでも Blueprint クラスでも、[ブループリント エディタ](Engine/Blueprints/Editor) の [ブループリント エレメント](Engine/Blueprints\UserGuide) を使用します。  

[REGION:lightbox]
	[![](Engine/Blueprints/Editor/blueprint_editor_example.png)(w:480)](Engine/Blueprints/Editor/blueprint_editor_example.png)
[/REGION]


作業しているブループリントのタイプに合わせて、様々な **ブループリント エディタ** が利用可能になります。**ブループリント エディタ** のメイン機能は **Graph** モードです。 
中央の [Graph] タブでブループリントのネットワークをレイアウトします。  

##ブループリントのサンプルとチュートリアル

ブループリント システムについて更に学べるリソースを以下に紹介します。 

* [](Resources/Showcases/BlueprintExamples)
* [ブループリント リフト チュートリアル](http://wiki.unrealengine.com/Blueprint_Lift_Tutorial)
* [ブループリント パワーアップ チュートリアル](http://wiki.unrealengine.com/Blueprint_Power_Up_Tutorial)





