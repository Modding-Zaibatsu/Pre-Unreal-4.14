INTSourceChangelist:2685020
Availability:Public
Title:3.射撃対象となる岩をスポーンする
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:スポーン ポイントに設定した位置の 1 つで岩をスポーンするボタンをプレイヤーが押せるようにしてみましょう。 
version:4.9


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[前のステップ](Engine\Blueprints\HowTo\BPHT_2 "%Engine\Blueprints\HowTo\BPHT_2:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How To ホーム](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[次のステップ](Engine\Blueprints\HowTo\BPHT_4 "%Engine\Blueprints\HowTo\BPHT_4:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

Description:プレイヤーがボタンを押して射撃対象となる岩をスポーンできるロジックを設定します。レベル内にスポーン ポイントを幾つか定義してあります。それらの 1 つを取得するために、 **イベントディスパッチャー** を使って **Level ブループリント** (次のステップで作成します) 内にイベントを実行して、これらの位置の 1 つを取得して Character プリントに送ります。 


それではまず、プレイヤーがキーを押して、射撃対象となる岩をスポーンできるようにしましょう。 

1.	**FirstPersonCharacter** ブループリント内で、グラフをどこか **右クリック** して、 **F** Key Event を追加します。 

	![](FKeyEvent.png)

1.	**B** を押したまま、グラフ内で **左クリック** して、**Branch** ノードを作成します。 

1.	**Alt** を押しながら **isActive** 変数をドラッグしてチェックボックスにチェックを入れて、以下のように接続します。 

	![](BranchAdded.png)

1.	**Control** を押しながら、 **isActive** 変数と **Pulls** 変数をドラッグします。 

1.	**isActive** を **NOT Boolean** ノード (true でない) に接続し、 **Pulls** を **>** ノード (0 に設定) に接続します。 

	![](TwoNodesAdded.png)
	[REGION:note]
	古いバージョンのエンジンでは、**NOT Boolean** ノードは **!=** ノードと扱われています。
	[/REGION]

1.	上記の出力を 2 つとも **And** ノードに接続し、 **Branch** の **Condition** につなぎます。 

	![](AndAdded.png)

	ここで、 **isActive** 変数が true ではなく、プレイヤーの **Pulls** 数が 0 より大きいかどうかを確認することにより、プレイヤーが岩をスポーンできるかどうかを判断するロジックを設定します。両方のステートメントが true であれば、 **Branch** ノードの **True** 側を処理して岩をスポーンします (スクリプトはまだ完全ではないので、以下で設定をします)。 

1.	**Alt** を押しながら **Pulls** 変数をドラッグして **Set IsActive** ノードの次に接続します。

1.	**Control** を押しながら **Pulls** 変数をドラッグして **Int - Int** ノード (1 に設定) に接続し、さらに **Set Pulls** に接続します。 

	![](PullsSet.png)

1.	**Compile** をクリックし、 **Set Pulls** ノードを引き出して **ResetShots** Custom Event を追加します。 

	![](CallCustomEvent.png)

	設定はこのようになっているはずです。 

	![](ScriptBeforeEventDispatcher.png)

	プレイヤーが岩をスポーンできる時に対するロジックはされました。次はスポーン位置を取得するためにレベルと通信する必要があります。**F** が押されると呼び出される **イベントディスパッチャー** を使って行います。**Level ブループリント** はイベントディスパッチャーをリッスンし、呼び出されると独自のイベントを実行してスポーン ポイントの 1 つの位置を取得し、それを Character ブループリントへ渡します。 

1.	**[My Blueprint]** ウィンドウで**[+ Event Dispatcher (イベントディスパッチャーを追加)]** ボタンをクリックします。 

	![](AddEventDispatcher.png)

1.	新しいイベントディスパッチャーをクリックして選択した状態で **F2** を押して名前を「**GetSpawnLocation**」に変更します。 

	![](RenameEventDispatcher.png)

1.	**Reset Shots** 関数の次のグラフに、**Call GetSpawnLocation** ノードを追加します。 

	![](CallEventDispatcher.png)

	Event Dispatcher が追加されたことが、ノードの右上端に封筒のアイコンで表示されます。 

	![](NewNodeAdded.png)

1.	**GetSpawnLocation** ノードを引き出して **Spawn Actor from Class** ノードを追加します。 

 	![](SpawnActorNode.png)

1.	**Spawn Actor** ノードの **Class** を **BP_Rock** に設定します。 

1.	**Spawn Actor** ノードでも、 **SpawnLocation** 変数を **Spawn Transform** ピンにドラッグ＆ドロップします。 

	![](SpawnActorComplete.png)

	射撃対象となる岩をスポーンし、岩をスポーンする **Transform** 位置を受け取るように、Character ブループリントが設定されました。 

次のステップでは **Level ブループリント** を使用して、Character ブループリントのイベントディスパッチャーが呼び出された時に、スポーン ポイントの 1 つの位置を取得して、その情報を Character ブループリントに渡します (こうすることで、 Character ブループリントから Level ブループリントとその逆という、双方向で情報を渡します)。 





<!--
前のページでは、 **イベントディスパッチャー** を使って **Level ブループリント** 内の **Begin Play** 上でバインドされた **イベント** を呼び出しました。次は、アクタがスポーンされた時に **イベント** を **バインド** する方法を学びましょう。 

[OBJECT:TopicList]
	[PARAM:title]
		スポーン上でイベントをバインドする
	[/PARAM]
	[PARAM:description]
	アクタがスポーンする時にバインドできる異なる **イベント** はいろいろありますが、ここでは、 **On Actor Begin Overlap Event** をスポーンされた岩にバインドして、プレイヤーが岩に適用されたトリガーにオーバーラップすると何かが起こるようにします。

	[/PARAM]
[/OBJECT]

1.	**ゲーム / ブループリント** の **コンテンツ ブラウザ** で、 **MyCharacter** ブループリントを **ダブルクリック** して開きます。 

1.	**SpawnActor BP_Rock_C** ノードの **Return Value** を引き出し、 **Assign On Actor Begin Overlap** Event Dispatcher ノードを探して追加します。  

	![](BPHT3_1.png)

1.	追加した **イベント** に 「**OverlapRock**」 などの名前を付けます。 

1.	**SpawnActor BP_Rock_C** ノードの **Return Value** を引き出して、 **Get Destructible 1** ノードを検索して追加します。 

	![](BPHT3_2.png)

	_これにより、 **BP_Rock** ブループリントから被破壊性メッシュ コンポーネントが取得されて、それを使って何かをすることができます (ここでは吹き飛ばす) 。_

1.	**Destructible 1** ピンを引き出して、 **Apply Radius Damage** ノードを探して追加します。 

	![](BPHT3_3.png)

	_**Radius Damage** ノードはオブジェクトの爆発のトリガに適しており、 **Apply Damage** ノードはダメージに合わせた発射物に適しています。_

1.	**OverlapRock** イベントを **Apply Radius Damage** ノードに接続し、 **Base Damage** と **Impulse Strength** を **10000** に設定します。 

	![](BPHT3_4.png)

1.	**Destructible 1** ピンを引き出して、 **Get World Location** ノードを探して追加します。 

	![](BPHT3_5.png)

1.	**Get World Location** ノードを **Apply Radius Damage** ノードの **Hurt Origin** ピンに接続します。 

	![](BPHT3_6.png)(w:740)

	_この時点で、近づくと岩は爆発するので、パーティクルエフェクトを追加することができます。_

1.	**Apply Radius Damage** 出力ピンを引き出して、 **Delay** ノードを **0.4** に設定します。 

	![](BPHT3_7.png)

1.	**SpawnActor from Class** ノード (**Class** は **Blueprint_Effect_Fire** に設定) を追加して、 **Spawn Location** 変数を **Spawn Transform** に追加 / 接続します。 

	![](BPHT3_8.png)(w:740)

	_これにより、岩がスポーンされたその位置で岩が爆発した 0.4 秒後に、炎のエフェクトをスポーンするよう指示が出されます。_

1.	**[MyBlueprint]** ウィンドウで、 **[Add Variable (変数を追加)]** ボタンをクリックして **bool** 変数を追加し、名前を「**isSpawnActive**」にします。 

	![](BPHT3_9.png)

1.	**Alt** キーを押したまま、 **isSpawnActive** 変数をドラッグして **Bind Event** ノードに接続し、チェックボックスをクリックして **True** に設定します。

	![](BPHT3_10.png)

	_**Bind Event** の後に引き続き **ブループリント** コード (ここでは変数を true にフラグ) を実行することができます。_

	_岩がスポーンされたかをチェックします。スポーンされていれば最初の岩が破壊されるまでプレイヤーに別の岩をスポーンさせないようにします。_

1.	**Set Is Spawn Active** ノードをコピーし、 **SpawnActor Blueprint_Effect_Fire_C** ノードの後ろに貼り付けて、チェックボックスのチェックを外して **False** にします。

	![](BPHT3_11.png)

1.	**F ** キーのノードを引き出して、 **Branch** ノードを探して追加します。 

	![](BPHT3_12.png)

	_これにより、 **True** か **False** が作成され、 **True** の場合と **False** の場合で別々のことが実行されるようになります。_

1.	**Control** キーを押したまま、 **isSpawnActive** 変数をドラッグして放し、 **==** (***Equal Boolean**) ノードを探して追加します。 

	![](BPHT3_13.png)

1.	**==** ノードを **Branch** の **Condition** に接続します (**==** ノードのチェックは外したまま)。 

	[REGION:lightbox]
	[![](BPHT3_14.png)(w:740)](BPHT3_14.png)
	[/REGION]

	_完成したシーケンスはこのように見えるはずです。全画面表示にするには画像をクリックしてください。_

1.	ブループリントを **コンパイル** し **保存** して、エディタ ボタンの **[Play (プレイ)]** をクリックします。 

	![](GIF3.gif)(convert:false)

	_**F** を押した時に 1 回につき岩を 1 つだけスポーンすることができ、岩は近づくと炎のエフェクトを残したまま爆発することが分かります。._

次のページでは、キャラクターから HUD への情報の渡し方 (ヘルス値の伝え方) を学習します。 

-->


%Steps%











