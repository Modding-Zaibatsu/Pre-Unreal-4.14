INTSourceChangelist:2684983
Availability:Public
Title:2.必要なキャラクターの設定
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:プレイ可能なキャラクターのゲーム設定を正しく行ってみましょう。 
version:4.9


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[前のステップ](Engine\Blueprints\HowTo\BPHT_1 "%Engine\Blueprints\HowTo\BPHT_1:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How To ホーム](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[次のステップ](Engine\Blueprints\HowTo\BPHT_3 "%Engine\Blueprints\HowTo\BPHT_3:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

本ページでは、このガイドの後半で HUD に渡す変数を追加して、Character ブループリントで操作します。条件を追加して、起動した 1 つの岩に対してプレイヤーが発射できる回数を定義します。 

## Character の設定 

Character ブループリントを使います。 

1.	**コンテンツ ブラウザ** で **[Content]>[FirstPersonBP]>[Blueprints]** を選択して、**First Person Character** ブループリントを開きます。 

	![](FirstPersonCharacter.png)

1.	グラフの **Stick Input** と **Movement Input** と **Jump** セクションを削除して、以下のセクションだけが残るようにします。 

	![](CleanUp.png)

	このサンプル ゲームで必要なのは、プレイヤーが振り向いて撃つことだけなので、その他のスクリプトは削除してブループリントを整理します。 

1.	再びグラフ内を **右クリック** して、 **Event Begin Play** ノードを検索して追加します。 

	![](EventBeginPlay.png)

1.	**Event Being Play** ノードを引き出して **Create Widget** ノードを検索して追加します。 

	![](CreateWidget.png)

	ゲームの再生開始時に **HUD** Widget ブループリントを呼びだし、それを表示します。 

1.	**Create Widget** ノードの **Class** で **[HUD]** を選択したら、**Return Value** を引き出して、**Add to Viewport** ノードを使用します。 

	![](AddToViewport.png)

	HUD が表示されるようになるので、HUD に渡す変数を作成する必要があります。それでは実践してみましょう。 

1.	**[MyBlueprint]** ウィンドウの **[Add Variable (変数を追加)]** ボタンをクリックします。 

	![](AddVariable.png)

1.	作成された変数を選択して **[Details (詳細)]** パネルで名前を「 **isActive** 」に変更し、 **Boolean** 型であることを確認します。 

	![](NewVariable1.png)

1.	もう 1 つ変数を作成し、名前を「**SpawnLocation**」に変えて、 **Transform** 型であることを確認します。 

	![](NewVariable2.png)

	この変数はスポーン位置を岩に伝え、レベルから更新されます。 

1.	もう 1 つ変数を作成し、名前を「**Pulls**」に変えて、 **Integer** 型であることを確認します。 

	![](NewVariable3.png)

	この変数は、プレイヤーがボタンを押してスポーン可能な岩の残数を保持します。 

1.	 **Integer** 変数をあと 2 つ作成します。 1 つは「**Shots**」、もう 1 つを「**Score**」という名前にします。 

	![](AllVariables.png)

	追加した変数はこのように見えます。 

1.	**[Compile (コンパイル)]** ボタンをクリックしたら **[Details (詳細)]** パネルで **[Pulls]** の **[Default Value (デフォルト値)]** を **10** に設定します。 

	![](DefaultValuePulls.png)

1.	**[Shots]** の **[Default Value]** を **3** 、そして **[Score]** を **0** に設定します。 


## 射撃武器の設定

ここでは、プレイヤーが引き金を 1 回引く毎に発射される回数を少し変更していきます。 

1.	**InputAction Fire** event を見つけたら、それを引き出して **Do N** ノードを追加します。 

	![](DoN.png)

	このノードは後に続くスクリプトを設定回数実行します (プレイヤーの射撃回数を制御することができます)。 

1.	**N** を **3** に設定したら、 **Alt** を押したまま、それを **[My Blueprint]** ウィンドウから **Shots** 変数にドラッグし、ノードを再接続します。 

	![](SetDoN.png)

	**Shots** ノードの後に、 **Set** を **Montage Play** ノードに接続します。 

1.	**Control** キーを押しながら、 **Shots** 変数を再度ドラッグして、それを **Integer - Integer** ノード (**1** に設定) に接続してから、以下のように接続します。 

	![](ConnectShots.png)

	ここで、Shots を **Fire** が 1 回押されるごとに 1 減る設定にします。 

1.	**Shots** の横にあるグラフ内を **右クリック** して、 **ResetShots** という **Custom Event** を追加します。 

	![](CreateCustomEvent.png)

1.	**Alt** を押したまま **Shots** をドラッグして **3** に設定し、 **Custom Event** 、そして **Do N** ノードの **Reset** に接続します。 

	![](ResetEventSet.png)

	このカスタム イベントが呼ばれると、Shots の設定を 3 に戻し、Do N ノードがリセットされ、再度実行することができます。 



<!-- Old

[OBJECT:TopicList]
	[PARAM:title]
		ブループリント / Event Dispatchers をスポーンする
	[/PARAM]
	[PARAM:description]
	**Spawn Actor** ノードを使用して **BP_Rock** ブループリントをスポーンします。岩のスポーン位置を取得するように **Level ブループリント** に命令すつ **Event Dispatcher** も設定していきます。 
	[/PARAM]
[/OBJECT]

1.	**コンテンツ ブラウザ** の **Content/ThirdPersonBP/Blueprints** で **ThirdPersonCharacter** ブループリントを開きます。 

	![](BPHT1_8.png)

1.	グラフ ウィンドウのどこかを **右クリック** して、「 **F** 」と入力して **F** Key イベントをグラフに追加します。 

	![](BPHT1_9.png)

	_プレイヤーが **F** キーを押すと、配置したスポーン位置のうちの 1 ヶ所で **BP_Rock** がスポーンされます。_

1.	**左クリック** して **F** key ノードの **Pressed** ピンを引き出して、 **Spawn Actor from Class** ノードを見つけて追加します。 

	![](BPHT1_10.png)

1.	**Spawn Actor** ノードで、 **[Class]** ドロップダウン メニューをクリックして **BP_Rock** を選択します。 

	![](BPHT1_11.png)

1.	**[MyBlueprint]** ウィンドウの **[Add Variable (変数を追加)]** ボタンをクリックします。 

	![](BPHT1_12.png)

1.	 新規変数の[Details] パネルで **変数名** を **[SpawnLocation]** に、また **変数の種類** を **[Transform]** に設定します。 

	![](BPHT1_13.png)

1.	**MyBlueprint** ウィンドウで、 **SpawnLocation** 変数を **Spawn Transform** ピンにドラッグします。 

	![](BPHT1_14.png)

	_これにより Spawn Transform (または岩をスポーンする位置) として使用するように変数が接続およびアサインされます。自由に岩を取得してスポーンしたい位置は、レベル内に配置したスポーン地点に基いているので、 **イベントディスパッチャー** を使って **Level ブループリント*** の **イベント** を呼び出し、位置情報を MyCharacter ブループリントに戻すように指示します。_

1.	**[MyBlueprint]** ウィンドウの **[Add Event Dispatcher (イベントディスパッチャーを追加)]** ボタンをクリックして選択し、 **F2** を押して名前を「 **GetLocation** 」に変更します。 

	![](BPHT1_15.png)

1.	**F** キーのノードの **Pressed** ピンを引き出して、 **Call GetLocation** Event Dispatcher ノードを検索して追加します。 

	![](BPHT1_16.png)

	[REGION:note]
	Event Dispatcher が見えない場合は、メイン ツールバーの **[Compile]** ボタンをクリックして、再検索してください。
	[/REGION]

1.	Event Dispatcher を追加すると、 **Spawn Actor** ノードが自動的に接続され、以下のようになります。 

	![](BPHT1_17.png)

1.	**ブループリント** を **コンパイル** して **保存** して終了します。 

[OBJECT:TopicList]
	[PARAM:title]
		Casting To ブループリント
	[/PARAM]
	[PARAM:description]
	**イベントディスパチャー** を終了し、 Character ブループリントで呼び出すと、 **Level ブループリント** が通知され、スポーン位置の 1 つをプルし、岩をスポーンする目的地として渡します。 
	[/PARAM]
[/OBJECT]


1.	メイン エディタ ビューの **[World Outliner (ワールド アウトライナー)]** ウィンドウで、 **ターゲット** を検索して、それぞれのターゲットポイントを選択します。 

	![](BPHT1_20.png)

	_これらを **Level ブループリント** に追加して、それぞれの位置を Character ブループリントに渡すことができるようにします。_

1.	**メイン ツールバー** で **[ブループリント]** ボタンをクリックして、 **Open Level ブループリント** を選択します。 

	![](BPHT1_21.png)

1.	グラフ内をどこかを **右クリック** し、 **[Add references to 4 selected Actors (選択した 4 つのアクタにリファレンスを追加)]** オプションを選んでグラフに追加します。 

	![](BPHT1_22.png)

1.	グラフを **右クリック** して、 **Event Begin Play** ノードを検索して選択します。 

	![](BPHT1_23.png)

1.	グラフ内を **右クリック** して、 **Get Player Character** ノードを検索して選択します。 

	![](BPHT1_24.png)

1.	**Get Player Character** ノードの **Return Value** を引き出して、 **Cast To ThirdPersonCharacter** ノードを検索して追加します。 

	![](BPHT1_25.png)

	_**Cast To** ノードを使うと、 **ThirdPersonCharacter** ブループリント内のすべての機能と変数へのアクセスが可能になります。_

1.	**As Third Person Character** ピンからドラッグして、 **Promote to variable** を選択し、変数 **DefaultCharacter** を呼び出します。 

	![](PromoteToVariable.png)

1.	作成された変数を選択して **[Details]** パネルで名前を「 **MyCharacter** 」に変更し、 Boolean 型であることを確認します。 

	![](SetToMyCharacter.png)

	_Begin Play でリファレンスとしてこれを格納してから、後に Character ブループリントにアクセスしようとする場合に時間を節約できます。

1.	**MyCharacter** ピンを引き出して、 **Assign Get Location** Event Dispatcher ノードを検索して追加します。 

	![](BPHT1_26.png)

	_これにより、 **Bind Event** ノードと **Custom Event** ノードの 2 つノードが自動作成されます。Bind Event は、Character ブループリントで Event Dispatcher が呼ばれた場合は、Level ブループリントでリンクされた Custom Event も実行したいということを述べています。

	[REGION:note]
	それが表示されない場合は、 **Compile** をクリックして、もう一度行ってください。 
	[/REGION]

1.	**Target Point** ノードの近くを **右クリック** して、 **Make Array** ノードを検索して追加します。 

	![](BPHT1_27.png)(w:740)

	_ここでレベルから **ターゲットポイント** の **配列** を作成します。

1.	**Add pin** アイコンを 3 回クリックして、 3 つのピンをノードに追加します。 

	![](BPHT1_28.png)

1.	**Target Point** ノードをそれぞれ **Make Array** ノードに接続して、 **Array** ピンを引き出して、 **Get** ノードを検索して追加します。 

	![](BPHT1_29.png)

1.	**Get** ノードの **Integer** ピンを引き出して、 **Random Integer in Range** ノードを検索して追加し、 **Min** を **0** に、 **Max** を **3** に設定します。 

	![](BPHT1_30.png)

	_これにより、スポーン位置として使うターゲットポイントが 1 つ任意に選択されます。_

1.	**[MyBlueprint]** ウィンドウで、 **Control** を押しながら **MyCharacter** 変数をドラッグします。 

1.	**MyCharacter** 変数を引き出して、 **Set Spawn Location** ノードを検索して追加します。 

	![](BPHT1_32.png)

	_これは、レベルからのデータで設定する Character ブループリント内の変数と同じ変数です。_

1.	**Get** ノードのピンをドラッグして、 **Get Actor Transform** ノードを検索して追加し、Min を 0 に、Max を 3 に設定します。 

	![](BPHT1_33.png)

1.	**Get Actor Transform** ノードの **Return Value** を **Set** ノードの **Spawn Location** につなぎ、残りのノードに接続します。 

	[REGION:lightbox]
	[![](BPHT1_34.png)(w:740)](BPHT1_34.png)
	[/REGION]

	_**Level ブループリント** はこのように見えるはずです。全画面表示にするには画像をクリックしてください。_

1.	**コンパイル** し **保存** してから **Level ブループリント** を終了します。 

1.	エディタで再生している場合は、 **F** キーを押すと、ターゲットポイントのどれかで岩が任意にスポーンされます。 

	![](GIF_1.gif)(convert:false)

本ページでは、イベントディスパッチャーを Cast To ノードを一緒に使って Level ブループリント で指定した位置で Actor ブループリント (被破壊性の岩) をスポーンするために Character ブループリントからコマンドを発行することを学習しました。 

Event Dispatcher は、Level ブループリントにターゲットポイントのうちの 1 つの位置を取得するよう指示し、 Cast To ノードは位置情報を Character ブループリントに戻して、そこで変数をアップデートし、その変数が Actor ブループリントがスポーンすべき場所を示します。 

-->



%Steps%












