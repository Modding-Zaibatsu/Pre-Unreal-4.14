Availability: Public
Title:2. Required Character Setup
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:In this step we are going to make sure our playable character is setup correctly for our game. 
version: 4.9


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[Previous Step](Engine\Blueprints\HowTo\BPHT_1 "%Engine\Blueprints\HowTo\BPHT_1:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How To Home](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[Next Step](Engine\Blueprints\HowTo\BPHT_3 "%Engine\Blueprints\HowTo\BPHT_3:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

On this page, we will work on our Character Blueprint by adding the variables that will be passed to the HUD later in this guide. We will also add some conditions to determine how many times the player can shoot at each rock that is launched. 

## Character Setup 

Let us get to work on our Character Blueprint. 

1.	Inside the **Content Browser** under **Content/FirstPersonBP/Blueprints**, open the **First Person Character** Blueprint. 

	![](FirstPersonCharacter.png)

1.	Inside the graph, delete the **Stick Input**, **Movement Input**, and **Jump** sections so that you only contain the sections below. 

	![](CleanUp.png)

	For our sample game, we only need to allow the player to turn and shoot so we have removed the other script to clean up our Blueprint. 

1.	**Right-click** in the graph and search for and add the **Event Begin Play** node. 

	![](EventBeginPlay.png)

1.	Drag off the **Event Being Play** node and search for and add the **Create Widget** node. 

	![](CreateWidget.png)

	We are going to call our **HUD** Widget Blueprint upon begin play of the game and display it. 

1.	On the **Create Widget** node for **Class** select the **HUD**, then off the **Return Value**, use the **Add to Viewport** node. 

	![](AddToViewport.png)

	Our HUD will now be displayed and we need to create some variables to pass to it. Let us do that now. 

1.	In the **MyBlueprint** window, click the **Add Variable** button. 

	![](AddVariable.png)

1.	Select the new variable, then in the **Details** panel, rename it to **IsActive** and make sure it is the **Boolean** type. 

	![](NewVariable1.png)

1.	Create another variable, rename it to **SpawnLocation** and make the type a **Transform**. 

	![](NewVariable2.png)

	This variable will be used to tell the rock where to spawn and will be updated from the level. 

1.	Create another variable, rename it to **Pulls** and make the type a **Integer**. 

	![](NewVariable3.png)

	This variable will hold the amount of rocks left the player can spawn by button press. 

1.	Create two more **Integer** variables, one called **Shots** and the other called **Score**. 

	![](AllVariables.png)

	Your added variables should look similar to above. 

1.	Click the **Compile** button, then in the **Details** panel for **Pulls** set its **Default Value** to **10**. 

	![](DefaultValuePulls.png)

1.	Set the **Default Value** for **Shots** to **3** and **Score** to **0**. 


## Firing Weapon Setup

Here we are going to make some minor changes to how many times the player can fire a shot per pull. 

1.	Find the **InputAction Fire** event and drag off it and add the **Do N** node. 

	![](DoN.png)

	This node will execute the script following it a set number of times (allowing us to control the number of times the player can shoot). 

1.	Set the **N** to **3**, then while holding **Alt** drag in the **Shots** variable from the **My Blueprint** window and reconnect the nodes. 

	![](SetDoN.png)

	Following the **Shots** node, connect the **Set** back to the **Montage Play** node. 

1.	While holding **Control**, drag in the **Shots** variable again and connect it to a **Integer - Integer** node (set to **1**) and connect as shown. 

	![](ConnectShots.png)

	Here we are setting shots to decrement by 1 each time **Fire** is pressed. 

1.	**Right-click** in the graph next to **Shots** and add a **Custom Event** called **ResetShots**. 

	![](CreateCustomEvent.png)

1.	**Alt** drag in **Shots** and set it to **3**, then connect it following the **Custom Event** and into the **Reset** on the **Do N** node. 

	![](ResetEventSet.png)

	When this custom event is called, it will set shots back to 3 and reset the Do N node so that it can be executed again. 



<!-- Old

[OBJECT:TopicList]
	[PARAM:title]
		Spawning Blueprints / Event Dispatchers
	[/PARAM]
	[PARAM:description]
	Here we will use the **Spawn Actor** node to spawn our **BP_Rock** Blueprint. We will also set up the **Event Dispatcher** which well tell the **Level Blueprint**, retrieve a spawn location for the rock. 
	[/PARAM]
[/OBJECT]

1.	In the **Content Browser** under **Content/ThirdPersonBP/Blueprints**, open the **ThirdPersonCharacter** Blueprint. 

	![](BPHT1_8.png)

1.	**Right-click** anywhere in the graph window, then enter **F** and select the **F** Key Event to add it to the graph. 

	![](BPHT1_9.png)

	_When the player presses the **F** key, we will spawn our **BP_Rock** at one of our spawn locations we placed._

1.	**Left-click** on and drag-off the **Pressed** pin of the **F** key node and search for and add the **Spawn Actor from Class** node. 

	![](BPHT1_10.png)

1.	On the **Spawn Actor** node, click the **Class** drop-down menu and select the **BP_Rock**. 

	![](BPHT1_11.png)

1.	In the **MyBlueprint** window, click the **Add Variable** button. 

	![](BPHT1_12.png)

1.	In the **Details** panel for the new variable, set the **Variable Name** to **SpawnLocation** and the **Variable Type** to **Transform**. 

	![](BPHT1_13.png)

1.	In the **MyBlueprint** window, drag the **SpawnLocation** variable onto the **Spawn Transform** pin. 

	![](BPHT1_14.png)

	_This will automatically connect and assign the variable for use as the Spawn Transform (or location to spawn our rock). Since the location we want to get and spawn our rock at will be based off the spawn points we placed in our level, we will use an **Event Dispatcher** to call an **Event** in our **Level Blueprint*** telling it to pass the location information back to our Character Blueprint._

1.	In the **MyBlueprint** window click the **Add Event Dispatcher** button, then select it and press **F2** to rename it to **GetLocation**. 

	![](BPHT1_15.png)

1.	Drag off the **Pressed** pin of the **F** key node and search for and add the **Call GetLocation** Event Dispatcher node. 

	![](BPHT1_16.png)

	[REGION:note]
	Don't see your Event Dispatcher? Try clicking the **Compile** button from the Main Toolbar then try again.
	[/REGION]

1.	When you add the Event Dispatcher, it will automatically connect to the **Spawn Actor** node and look similar to below. 

	![](BPHT1_17.png)

1.	**Compile** and **Save** the Blueprint, then close it. 

[OBJECT:TopicList]
	[PARAM:title]
		Casting To Blueprints
	[/PARAM]
	[PARAM:description]
	Here we will finish the **Event Dispatcher** so that when it is called in our Character Blueprint, the **Level Blueprint** is notified and pulls one of the spawn locations and feeds that as the destination to where we will spawn the rock. 
	[/PARAM]
[/OBJECT]


1.	From the Main Editor view, inside the **World Outliner** window, search for **Target** then select each your Target Points. 

	![](BPHT1_20.png)

	_We need to add these to our **Level Blueprint** so that we can pass their locations along to our Character Blueprint._

1.	From the **Main Toolbar**, click the **Blueprints** button and select **Open Level Blueprint**. 

	![](BPHT1_21.png)

1.	**Right-click** anywhere in the graph and choose the **Create References to 4 selected Actors** option to add them to the graph. 

	![](BPHT1_22.png)

1.	**Right-click** in the graph again then search for and add the **Event Begin Play** node. 

	![](BPHT1_23.png)

1.	**Right-click** in the graph again then search for and add the **Get Player Character** node. 

	![](BPHT1_24.png)

1.	Drag off the **Return Value** of the **Get Player Character** node and search for and add the **Cast To ThirdPersonCharacter** node. 

	![](BPHT1_25.png)

	_Using the **Cast To** node grants us access all the functionality and variables inside our **ThirdPersonCharacter** Blueprint._

1.	Drag off the **As Third Person Character** pin and select **Promote to variable**. 
	
	![](PromoteToVariable.png)

1.	Select the new variable, then in the **Details** panel, rename it to **MyCharacter**. 

	![](SetToMyCharacter.png)

	_Since we are storing this as a reference at Begin Play, it will save us time later when trying to access our Character Blueprint._

1.	Drag off the **MyCharacter** pin and search for and add the **Assign Get Location** Event Dispatcher node. 

	![](BPHT1_26.png)

	_This will automatically create two nodes, a **Bind Event** and a **Custom Event**. The Bind Event is stating that whenever the Event Dispatcher is called in our Character Blueprint that we also want to execute the linked Custom Event in the Level Blueprint._

	[REGION:note]
	If you do not see it, click **Compile** then try again. 
	[/REGION]

1.	**Right-click** near the **Target Point** nodes and search for and add the **Make Array** node. 

	![](BPHT1_27.png)(w:740)
	
	_Here we will create an **Array** of our **Target Points** from the level, pulling one of them and using it's location as our spawn location._

1.	Click on the **Add pin** icon three times to add three pins to the node. 

	![](BPHT1_28.png)

1.	Connect each of the **Target Points** to the **Make Array** node, then drag off the **Array** pin and search for and add the **Get** node. 

	![](BPHT1_29.png)

1.	Drag off the **Integer** pin of the **Get** node and search for and add the **Random Integer in Range** node and set **Min** to **0** and **Max** to **3**. 

	![](BPHT1_30.png)

	_This will randomly pick one of our Target Points to use as the spawn location._

1.	From the **MyBlueprint** window, hold **Control** and drag in the **MyCharacter** variable. 

1.	Drag off the **MyCharacter** variable and search for and add the **Set Spawn Location** node. 

	![](BPHT1_32.png)

	_This is the same variable that is inside our Character Blueprint that we will now set with data from the level._

1.	Drag off the out pin of the **Get** node, search for and add the **Get Actor Transform** node. 

	![](BPHT1_33.png)

1.	Plug the **Return Value** of the **Get Actor Transform** node into the **Spawn Location** of the **Set** node and connect the remaining nodes. 
	
	[REGION:lightbox]
	[![](BPHT1_34.png)(w:740)](BPHT1_34.png)
	[/REGION]

	_Your **Level Blueprint** should look similar to above, click the image for the full view._

1.	**Compile** and **Save** then close the **Level Blueprint**. 

1.	If you play in the editor, pressing the **F** key should randomly spawn the rock at one of the Target Point locations. 

	![](GIF_1.gif)(convert:false)

So what we have accomplished on this page is, we have issued a command from our Character Blueprint to spawn an Actor Blueprint (our Destructible Rock) at a location specified through our Level Blueprint using a combination of an Event Dispatcher and a Cast To node. 

The Event Dispatcher tells the Level Blueprint to obtain the location of one of the Target Points, while the Cast To node passes that location information back to the Character Blueprint and updates a variable inside it which defines where our Actor Blueprint should spawn. 

-->



%Steps%












