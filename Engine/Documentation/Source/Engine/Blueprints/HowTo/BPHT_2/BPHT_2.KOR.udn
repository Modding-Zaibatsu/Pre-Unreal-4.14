INTSourceChangelist:2714483
Availability: Public
Title:2. 필수 캐릭터 구성
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:이번 단계에서는 플레이가능 캐릭터가 게임에 맞게 구성되어 있는지 확인하도록 하겠습니다.
version: 4.9


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[예전 단계](Engine\Blueprints\HowTo\BPHT_1 "%Engine\Blueprints\HowTo\BPHT_1:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[비법 홈](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[다음 단계](Engine\Blueprints\HowTo\BPHT_3 "%Engine\Blueprints\HowTo\BPHT_3:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

이번에는 나중에 HUD 에 전해줄 변수를 캐릭터 블루프린트에 추가해 주는 작업을 하겠습니다. 거기에 스폰된 바위를 플레이어가 몇 회나 쏠 수 있는지 결정하는 조건을 추가하는 작업도 해 주겠습니다.

## 캐릭터 셋업

캐릭터 블루프린트 작업을 시작해 봅시다.

1.	**콘텐츠 브라우저** 안에서 **Content/FirstPersonBP/Blueprints** 아래, **First Person Character** 블루프린트를 엽니다.

	![](FirstPersonCharacter.png)

1.	그래프 안에 **Stick Input**, **Movement Input**, **Jump** 섹션을 지워 아래 섹션만 남도록 합니다.

	![](CleanUp.png)

	샘플 게임에서는, 플레이어가 회전과 발사만 가능하도록 해 줘야 하므로 나머지 스크립트를 지워 블루프린트를 정리했습니다.

1.	그래프에 **우클릭** 한 다음 **Event Begin Play** 노드를 검색 추가합니다. 

	![](EventBeginPlay.png)

1.	**Event Being Play** 노드를 끌어 놓은 다음 **Create Widget** 노드를 검색 추가합니다.

	![](CreateWidget.png)

	게임이 시작되자마자 **HUD** 위젯 블루프린트를 호출하여 표시하도록 하겠습니다.

1.	**Class** 에 대한 **Create Widget** 노드에서 **HUD** 를 선택한 다음 **Return Value** 를 끌어놓고, **Add to Viewport** 노드를 사용합니다.

	![](AddToViewport.png)

	HUD 가 표시되며, 이제 거기에 전해 줄 변수를 만들어야 합니다. 지금 해 봅시다.

1.	**내 블루프린트** 창에서 **변수 추가** 버튼을 클릭합니다.

	![](AddVariable.png)

1.	새 변수를 선택한 다음, **디테일** 패널에서 그 이름을 **IsActive** 로 변경하고 **Boolean** 유형인지 확인합니다.

	![](NewVariable1.png)

1.	변수를 하나 더 만든 다음, 이름을 **SpawnLocation** 으로 변경하고 **Transform** 유형으로 만듭니다. 

	![](NewVariable2.png)

	이 변수는 바위에게 스폰 위치를 알려주는 데 사용될 것이며, 레벨에서 업데이트될 것입니다.

1.	변수를 하나 더 만든 다음, 이름을 **Pulls** 로 변경하고 **Integer** 유형으로 만듭니다.

	![](NewVariable3.png)

	이 변수는 플레이어가 버튼을 눌러 스폰시킬 수 있는 바위의 양을 저장할 것입니다.

1.	**Integer** 변수를 두 개 더 만듭니다. 하나는 **Shots**, 다른 하나는 **Score** 라 합니다. 

	![](AllVariables.png)

	추가된 변수는 위와 비슷할 것입니다.

1.	**컴파일** 버튼을 클릭한 다음, **Pulls** 에 대한 **디테일** 패널에서 **Default Value** 를 **10** 으로 설정합니다.

	![](DefaultValuePulls.png)

1.	**Shots** 에 대한 **Default Value** 를 **3** 으로, **Score** 는 **0** 으로 설정합니다. 


## 무기 발사 구성

여기서는 풀당 플레이어가 몇 번이나 쏠 수 있는지 약간 변경하도록 하겠습니다.

1.	**InputAction Fire** 이벤트를 찾아 끌어 놓은 다음 **Do N** 노드를 추가합니다.

	![](DoN.png)

	이 노드는 뒤따르는 스크립트를 지정된 횟수만큼 실행시킵니다 (플레이어가 쏠 수 있는 횟수를 조절하는 것이 가능합니다).

1.	**N** 을 **3** 으로 설정한 다음, **내 블루프린트** 창에서 **Alt** 키를 누른 채 **Shots** 변수를 끌어놓고, 노드를 다시 연결합니다.

	![](SetDoN.png)

	**Shots** 노드 뒤에 **Set** 를 **Montage Play** 노드로 다시 연결합니다.

1.	**Ctrl** 키를 누른 채 **Shots** 변수를 다시 끌어놓고, (**1** 로 설정된) **Integer - Integer** 노드에 연결한 뒤, 표시된 것처럼 연결합니다.

	![](ConnectShots.png)

	여기서는 **Fire** 가 눌릴 때마다 Shots 를 1 씩 줄여 설정하고 있습니다.

1.	그래프 안 **Shots** 옆에 **우클릭** 한 다음 **ResetShots** 라는 **Custom Event** 를 추가합니다.

	![](CreateCustomEvent.png)

1.	**Shots** 를 **Alt** 드래그한 다음 **3** 으로 설정하고, 뒤따르는 **Custom Event** 에 연결한 뒤, **Do N** 노드의 **Reset** 에 연결합니다.

	![](ResetEventSet.png)

	이 커스텀 이벤트가 호출되면, Shots 를 다시 3 으로 설정하고 Do N 노드를 리셋시켜 다시 실행 가능하도록 합니다.



<!-- Old

[OBJECT:TopicList]
	[PARAM:title]
		Spawning Blueprints / Event Dispatchers
	[/PARAM]
	[PARAM:description]
	Here we will use the **Spawn Actor** node to spawn our **BP_Rock** Blueprint. We will also set up the **Event Dispatcher** which well tell the **Level Blueprint**, retrieve a spawn location for the rock. 
	[/PARAM]
[/OBJECT]

1.	In the **Content Browser** under **Content/ThirdPersonBP/Blueprints**, open the **ThirdPersonCharacter** Blueprint. 

	![](BPHT1_8.png)

1.	**Right-click** anywhere in the graph window, then enter **F** and select the **F** Key Event to add it to the graph. 

	![](BPHT1_9.png)

	_When the player presses the **F** key, we will spawn our **BP_Rock** at one of our spawn locations we placed._

1.	**Left-click** on and drag-off the **Pressed** pin of the **F** key node and search for and add the **Spawn Actor from Class** node. 

	![](BPHT1_10.png)

1.	On the **Spawn Actor** node, click the **Class** drop-down menu and select the **BP_Rock**. 

	![](BPHT1_11.png)

1.	In the **MyBlueprint** window, click the **Add Variable** button. 

	![](BPHT1_12.png)

1.	In the **Details** panel for the new variable, set the **Variable Name** to **SpawnLocation** and the **Variable Type** to **Transform**. 

	![](BPHT1_13.png)

1.	In the **MyBlueprint** window, drag the **SpawnLocation** variable onto the **Spawn Transform** pin. 

	![](BPHT1_14.png)

	_This will automatically connect and assign the variable for use as the Spawn Transform (or location to spawn our rock). Since the location we want to get and spawn our rock at will be based off the spawn points we placed in our level, we will use an **Event Dispatcher** to call an **Event** in our **Level Blueprint*** telling it to pass the location information back to our Character Blueprint._

1.	In the **MyBlueprint** window click the **Add Event Dispatcher** button, then select it and press **F2** to rename it to **GetLocation**. 

	![](BPHT1_15.png)

1.	Drag off the **Pressed** pin of the **F** key node and search for and add the **Call GetLocation** Event Dispatcher node. 

	![](BPHT1_16.png)

	[REGION:note]
	Don't see your Event Dispatcher? Try clicking the **Compile** button from the Main Toolbar then try again.
	[/REGION]

1.	When you add the Event Dispatcher, it will automatically connect to the **Spawn Actor** node and look similar to below. 

	![](BPHT1_17.png)

1.	**Compile** and **Save** the Blueprint, then close it. 

[OBJECT:TopicList]
	[PARAM:title]
		Casting To Blueprints
	[/PARAM]
	[PARAM:description]
	Here we will finish the **Event Dispatcher** so that when it is called in our Character Blueprint, the **Level Blueprint** is notified and pulls one of the spawn locations and feeds that as the destination to where we will spawn the rock. 
	[/PARAM]
[/OBJECT]


1.	From the Main Editor view, inside the **World Outliner** window, search for **Target** then select each your Target Points. 

	![](BPHT1_20.png)

	_We need to add these to our **Level Blueprint** so that we can pass their locations along to our Character Blueprint._

1.	From the **Main Toolbar**, click the **Blueprints** button and select **Open Level Blueprint**. 

	![](BPHT1_21.png)

1.	**Right-click** anywhere in the graph and choose the **Create References to 4 selected Actors** option to add them to the graph. 

	![](BPHT1_22.png)

1.	**Right-click** in the graph again then search for and add the **Event Begin Play** node. 

	![](BPHT1_23.png)

1.	**Right-click** in the graph again then search for and add the **Get Player Character** node. 

	![](BPHT1_24.png)

1.	Drag off the **Return Value** of the **Get Player Character** node and search for and add the **Cast To ThirdPersonCharacter** node. 

	![](BPHT1_25.png)

	_Using the **Cast To** node grants us access all the functionality and variables inside our **ThirdPersonCharacter** Blueprint._

1.	Drag off the **As Third Person Character** pin and select **Promote to variable**. 
	
	![](PromoteToVariable.png)

1.	Select the new variable, then in the **Details** panel, rename it to **MyCharacter**. 

	![](SetToMyCharacter.png)

	_Since we are storing this as a reference at Begin Play, it will save us time later when trying to access our Character Blueprint._

1.	Drag off the **MyCharacter** pin and search for and add the **Assign Get Location** Event Dispatcher node. 

	![](BPHT1_26.png)

	_This will automatically create two nodes, a **Bind Event** and a **Custom Event**. The Bind Event is stating that whenever the Event Dispatcher is called in our Character Blueprint that we also want to execute the linked Custom Event in the Level Blueprint._

	[REGION:note]
	If you do not see it, click **Compile** then try again. 
	[/REGION]

1.	**Right-click** near the **Target Point** nodes and search for and add the **Make Array** node. 

	![](BPHT1_27.png)(w:740)
	
	_Here we will create an **Array** of our **Target Points** from the level, pulling one of them and using it's location as our spawn location._

1.	Click on the **Add pin** icon three times to add three pins to the node. 

	![](BPHT1_28.png)

1.	Connect each of the **Target Points** to the **Make Array** node, then drag off the **Array** pin and search for and add the **Get** node. 

	![](BPHT1_29.png)

1.	Drag off the **Integer** pin of the **Get** node and search for and add the **Random Integer in Range** node and set **Min** to **0** and **Max** to **3**. 

	![](BPHT1_30.png)

	_This will randomly pick one of our Target Points to use as the spawn location._

1.	From the **MyBlueprint** window, hold **Control** and drag in the **MyCharacter** variable. 

1.	Drag off the **MyCharacter** variable and search for and add the **Set Spawn Location** node. 

	![](BPHT1_32.png)

	_This is the same variable that is inside our Character Blueprint that we will now set with data from the level._

1.	Drag off the out pin of the **Get** node, search for and add the **Get Actor Transform** node. 

	![](BPHT1_33.png)

1.	Plug the **Return Value** of the **Get Actor Transform** node into the **Spawn Location** of the **Set** node and connect the remaining nodes. 
	
	[REGION:lightbox]
	[![](BPHT1_34.png)(w:740)](BPHT1_34.png)
	[/REGION]

	_Your **Level Blueprint** should look similar to above, click the image for the full view._

1.	**Compile** and **Save** then close the **Level Blueprint**. 

1.	If you play in the editor, pressing the **F** key should randomly spawn the rock at one of the Target Point locations. 

	![](GIF_1.gif)(convert:false)

So what we have accomplished on this page is, we have issued a command from our Character Blueprint to spawn an Actor Blueprint (our Destructible Rock) at a location specified through our Level Blueprint using a combination of an Event Dispatcher and a Cast To node. 

The Event Dispatcher tells the Level Blueprint to obtain the location of one of the Target Points, while the Cast To node passes that location information back to the Character Blueprint and updates a variable inside it which defines where our Actor Blueprint should spawn. 

-->



%Steps%











