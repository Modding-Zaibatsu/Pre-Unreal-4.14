INTSourceChangelist:2468092
Availability: Public
Title:2. 对所需角色的设置
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:在这个步骤中，我们会确认游戏的可玩角色设置正确。 


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[Previous Step](Engine\Blueprints\HowTo\BPHT_1 "%Engine\Blueprints\HowTo\BPHT_1:title%") 
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How-To Home](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[Next Step](Engine\Blueprints\HowTo\BPHT_3 "%Engine\Blueprints\HowTo\BPHT_3:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

在这个页面中，我们会通过添加稍后在本指南中传递到HUD的变量来完成对角色蓝图的设置。 我们还会添加一些条件来确定玩家射击发射的岩石的次数。 

## 角色设置 

让我们开始设置角色蓝图。 

1.	在 **Content/FirstPersonBP/Blueprints** 下的 **Content Browser** （内容浏览器），打开 **First Person Character** （第一人称角色）蓝图。 

	![](FirstPersonCharacter.png)

1.	在图表中，删除 **Stick Input**, **Movement Input** 和 **Jump** 部分，这样您看到的就如下图所示。 

	![](CleanUp.png)

	对于示例游戏来说，我们只需让玩家转身和射击，因此我们移除了其他脚本来让蓝图看起来更简洁。 

1.	在图表中 **右键点击** 并搜索和添加 **Event Begin Play** （事件开始播放）节点。 

	![](EventBeginPlay.png)

1.	把 **Event Being Play** 节点拉出来，然后搜索并添加 **Create Widget** （创建控件）节点。 

	![](CreateWidget.png)

	我们会在开始玩游戏时调用 **HUD** 控件蓝图并显示它。 

1.	在 **Class** （类）的 **Create Widget** （创建控件）节点上，选择 **HUD** ，然后关闭 **Return Value** （返回值），使用 **Add to Viewport** （添加到视口）节点。 

	![](AddToViewport.png)

	现在会显示出HUD，我们需要创建一些变量来传递给它。 让我们现在进行此操作。 

1.	在 **MyBlueprint** 窗口，点击 **Add Variable** （添加变量）按钮。 

	![](AddVariable.png)

1.	选择新变量，然后在 **详细信息** 面板中，将其重命名为 **isActive** 并确认其为 **Boolean** （布尔）类型。 

	![](NewVariable1.png)

1.	创建另一个变量，将其重命名为 **SpawnLocation** 并设置其类型为 **Transform** 。 

	![](NewVariable2.png)

	这个变量将被用于告知岩石生成的位置并从关卡处进行更新。 

1.	创建另一个变量，将其重命名为 **Pulls** 并设置其类型为 **Integer** 。 

	![](NewVariable3.png)

	这个变量将会通过按钮来保存玩家可以生成的岩石数量。 

1.	再创建两个 **Integer** （整数）变量，一个名称为 **Shots** ，另一个名称为 **Score** 。 

	![](AllVariables.png)

	您添加的变量应该看起来和上方内容类似。 

1.	点击 **Compile** （编译）按钮，然后在 **Pulls** 的 **详细信息** 面板中，将其 **默认值** 设置为 **10** 。 

	![](DefaultValuePulls.png)

1.	设置 **Shots** 的 **默认值** 为 **3** ，设置 **Score** 为 **0** 。 


## 武器发射设置

在这里，我们要对玩家能开枪的次数进行小小的变更。 

1.	搜索 **InputAction Fire** 事件并将其拖曳出来，然后添加 **Do N** 节点。 

	![](DoN.png)

	这个节点会对脚本执行指定次数（从而让我们可以控制玩家发射的次数）。 

1.	我们把 **N** 设置为 **3** ，然后在按住 **Alt** 的情况下，把 **Shots** 变量从 **MyBlueprint** 窗口中拖入，然后重新连接节点。 

	![](SetDoN.png)

	在连接 **Shots** 节点后，把 **Set** 连接回 **Montage Play** （播放动画剪辑）节点。 

1.	在按住 **Control** 不放的情况下，再次拉入 **Shots** 变量，并将其连接到 **Int - Int** 节点（设置为 **1** ）然后按照显示内容进行连接。 

	![](ConnectShots.png)

	在这里，我们把射击次数设置为与本身均等，每次按下 **Fire** 时都- 1。 

1.	**右键点击** **Shots** 旁的图表，然后添加名称为 **ResetShots** （重设射击次数）的 **Custom Event** （自定义事件）。 

	![](CreateCustomEvent.png)

1.	按住 **Alt** ，拉入 **Shots** ，并将其设置为 **3** ，然后先连接 **Custom Event** （自定义事件），再连接到 **DoN** 节点的 **Reset** （重设）。 

	![](ResetEventSet.png)

	当调用这个自定义事件时，它会把射击次数设置回3，然后重设DoN节点，这样就可以再次执行它。 



<!-- Old

[OBJECT:TopicList]
	[PARAM:title]
		Spawning Blueprints / Event Dispatchers
	[/PARAM]
	[PARAM:description]
	Here we will use the **Spawn Actor** node to spawn our **BP_Rock** Blueprint. We will also set up the **Event Dispatcher** which well tell the **Level Blueprint**, retrieve a spawn location for the rock. 
	[/PARAM]
[/OBJECT]

1.	In the **Content Browser** under **Content/ThirdPersonBP/Blueprints**, open the **ThirdPersonCharacter** Blueprint. 

	![](BPHT1_8.png)

1.	**Right-click** anywhere in the graph window, then enter **F** and select the **F** Key Event to add it to the graph. 

	![](BPHT1_9.png)

	_When the player presses the **F** key, we will spawn our **BP_Rock** at one of our spawn locations we placed._

1.	**Left-click** on and drag-off the **Pressed** pin of the **F** key node and search for and add the **Spawn Actor from Class** node. 

	![](BPHT1_10.png)

1.	On the **Spawn Actor** node, click the **Class** drop-down menu and select the **BP_Rock**. 

	![](BPHT1_11.png)

1.	In the **MyBlueprint** window, click the **Add Variable** button. 

	![](BPHT1_12.png)

1.	In the **Details** panel for the new variable, set the **Variable Name** to **SpawnLocation** and the **Variable Type** to **Transform**. 

	![](BPHT1_13.png)

1.	In the **MyBlueprint** window, drag the **SpawnLocation** variable onto the **Spawn Transform** pin. 

	![](BPHT1_14.png)

	_This will automatically connect and assign the variable for use as the Spawn Transform (or location to spawn our rock). Since the location we want to get and spawn our rock at will be based off the spawn points we placed in our level, we will use an **Event Dispatcher** to call an **Event** in our **Level Blueprint*** telling it to pass the location information back to our Character Blueprint._

1.	In the **MyBlueprint** window click the **Add Event Dispatcher** button, then select it and press **F2** to rename it to **GetLocation**. 

	![](BPHT1_15.png)

1.	Drag off the **Pressed** pin of the **F** key node and search for and add the **Call GetLocation** Event Dispatcher node. 

	![](BPHT1_16.png)

	[REGION:note]
	Don't see your Event Dispatcher? Try clicking the **Compile** button from the Main Toolbar then try again.
	[/REGION]

1.	When you add the Event Dispatcher, it will automatically connect to the **Spawn Actor** node and look similar to below. 

	![](BPHT1_17.png)

1.	**Compile** and **Save** the Blueprint, then close it. 

[OBJECT:TopicList]
	[PARAM:title]
		Casting To Blueprints
	[/PARAM]
	[PARAM:description]
	Here we will finish the **Event Dispatcher** so that when it is called in our Character Blueprint, the **Level Blueprint** is notified and pulls one of the spawn locations and feeds that as the destination to where we will spawn the rock. 
	[/PARAM]
[/OBJECT]


1.	From the Main Editor view, inside the **World Outliner** window, search for **Target** then select each your Target Points. 

	![](BPHT1_20.png)

	_We need to add these to our **Level Blueprint** so that we can pass their locations along to our Character Blueprint._

1.	From the **Main Toolbar**, click the **Blueprints** button and select **Open Level Blueprint**. 

	![](BPHT1_21.png)

1.	**Right-click** anywhere in the graph and choose the **Create References to 4 selected Actors** option to add them to the graph. 

	![](BPHT1_22.png)

1.	**Right-click** in the graph again then search for and add the **Event Begin Play** node. 

	![](BPHT1_23.png)

1.	**Right-click** in the graph again then search for and add the **Get Player Character** node. 

	![](BPHT1_24.png)

1.	Drag off the **Return Value** of the **Get Player Character** node and search for and add the **Cast To ThirdPersonCharacter** node. 

	![](BPHT1_25.png)

	_Using the **Cast To** node grants us access all the functionality and variables inside our **ThirdPersonCharacter** Blueprint._

1.	Drag off the **As Third Person Character** pin and select **Promote to variable**. 
	
	![](PromoteToVariable.png)

1.	Select the new variable, then in the **Details** panel, rename it to **MyCharacter**. 

	![](SetToMyCharacter.png)

	_Since we are storing this as a reference at Begin Play, it will save us time later when trying to access our Character Blueprint._

1.	Drag off the **MyCharacter** pin and search for and add the **Assign Get Location** Event Dispatcher node. 

	![](BPHT1_26.png)

	_This will automatically create two nodes, a **Bind Event** and a **Custom Event**. The Bind Event is stating that whenever the Event Dispatcher is called in our Character Blueprint that we also want to execute the linked Custom Event in the Level Blueprint._

	[REGION:note]
	If you do not see it, click **Compile** then try again. 
	[/REGION]

1.	**Right-click** near the **Target Point** nodes and search for and add the **Make Array** node. 

	![](BPHT1_27.png)(w:740)
	
	_Here we will create an **Array** of our **Target Points** from the level, pulling one of them and using it's location as our spawn location._

1.	Click on the **Add pin** icon three times to add three pins to the node. 

	![](BPHT1_28.png)

1.	Connect each of the **Target Points** to the **Make Array** node, then drag off the **Array** pin and search for and add the **Get** node. 

	![](BPHT1_29.png)

1.	Drag off the **Integer** pin of the **Get** node and search for and add the **Random Integer in Range** node and set **Min** to **0** and **Max** to **3**. 

	![](BPHT1_30.png)

	_This will randomly pick one of our Target Points to use as the spawn location._

1.	From the **MyBlueprint** window, hold **Control** and drag in the **MyCharacter** variable. 

1.	Drag off the **MyCharacter** variable and search for and add the **Set Spawn Location** node. 

	![](BPHT1_32.png)

	_This is the same variable that is inside our Character Blueprint that we will now set with data from the level._

1.	Drag off the out pin of the **Get** node, search for and add the **Get Actor Transform** node. 

	![](BPHT1_33.png)

1.	Plug the **Return Value** of the **Get Actor Transform** node into the **Spawn Location** of the **Set** node and connect the remaining nodes. 
	
	[REGION:lightbox]
	[![](BPHT1_34.png)(w:740)](BPHT1_34.png)
	[/REGION]

	_Your **Level Blueprint** should look similar to above, click the image for the full view._

1.	**Compile** and **Save** then close the **Level Blueprint**. 

1.	If you play in the editor, pressing the **F** key should randomly spawn the rock at one of the Target Point locations. 

	![](GIF_1.gif)(convert:false)

So what we have accomplished on this page is, we have issued a command from our Character Blueprint to spawn an Actor Blueprint (our Destructible Rock) at a location specified through our Level Blueprint using a combination of an Event Dispatcher and a Cast To node. 

The Event Dispatcher tells the Level Blueprint to obtain the location of one of the Target Points, while the Cast To node passes that location information back to the Character Blueprint and updates a variable inside it which defines where our Actor Blueprint should spawn. 

-->



%Steps%











