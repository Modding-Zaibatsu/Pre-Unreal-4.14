Availability: Public
Title:1. Required Asset Setup
Crumbs: %ROOT%, Engine, Engine/Blueprints, Engine/Blueprints/HowTo
Description:In this step we will set up the assets we will use in the project. 
version: 4.9


[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[How-To Home](Engine\Blueprints\HowTo "%Engine\Blueprints\HowTo:Title%")
	[/PARAM]
	[PARAM:next]
	[Next Step](Engine\Blueprints\HowTo\BPHT_2 "%Engine\Blueprints\HowTo\BPHT_2:title%") 
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

On this page, we will do a little bit of prep-work and set up the assets we will need to use later in this guide. We will create a destroyable Static Mesh, place down some spawn locations, and create a basic HUD to display information to the player about the state of the game. 

[REGION:note]
For this guide, we have created a new project based off the **Blueprint First Person** template with **Starter Content** enabled. If you are unsure of how to create a project based off a template or how to enable Starter Content, please see the [](Engine/Basics/Projects/Browser) documentation for information on setting up a project. 
[/REGION]

With your project created and open, press **Ctrl+N** to create a **New Level** and choose **Default** when prompted at the pop-up window. Once you have a fresh level created, follow the sections below to begin setting up each of the required assets. 

## Create a Destructible Static Mesh

Let us first create our shootable rock that will be destroyed when we hit it. 

1.	In the **Content Browser**, open the **Content/StarterContent/Props** folder. 

1.	In the **Props** folder, **Right-click** on the **SM_Rock** and choose **Create Destructible Mesh**. 

	![](CreateMesh.png)

1.	Open the **SM_Rock_DM** asset, then click the **Fracture Mesh** button from the toolbar. 

	![](FractureMesh.png)

	[REGION:note]
	If you do not see the rock in the preview window, close the window and re-open it. 
	[/REGION]

1.	**Save** and close the **SM_Rock_DM** asset. 

1.	**Right-click** on the **SM_Rock_DM** asset then choose **Asset Actions/Create Blueprint Using This...**. 

	![](CreateBlueprint.png)

	When prompted, give the Blueprint a name such as **BP_Rock**. 

1.	When the Blueprint opens, click the **Add Component** button, then add a **Projectile Movement** component. 

	![](AddProjectile.png)

1.	Click the **Projectile Movement** component, then in the **Details** set the **Initial Speed**, **Max Speed**, and **Velocity** for **X** to **1500.00**. 

	![](ProjectileDetails.png)

1.	Select the **Destructible** component, then in the **Details** panel under **Collision** check the **Simulation Generates Hit Events** option. 

	![](GenerateHits.png)

1.	Click the **Compile** and **Save** buttons, then close the Blueprint. 

## Place Spawn Points 

We will now create some spawn points in our level to launch the shootable rock from. 

1.	From the **Modes** menu, search for and add the **Target Point** to the level. 

	![](AddTargetPoint.png)

1.	Select the **TargetPoint** in the level, and set its **Transform** as shown below. 

	![](TargetPointTransform.png)

	**Location** for **X** is **7.0m, 0.0m, 0.0m** and **Rotation** is **0.0, 40.0, 0.0**. 

	[REGION:note]
	By entering 7.0m, it may convert the value to 700cm which is the equivalent value. Check out the [World Scale](Platforms/VR/ContentSetup) section on the VR Best Practies page as it gives a breakdown of how Unreal Units are calculated as well as how to change the way measurements are displayed. 
	[/REGION]

1.	In the level, with the **Target Point** selected, press **Ctrl+W** to duplicate it and set its **Details** as shown below. 

	![](Duplicate1.png)

	This will move the spawn point to the left of the first spawn point. 

1.	Press **Ctrl+W** to duplicate the **Target Point** again and set the new Target Point's **Details** as shown below. 

	![](NewDuplicate.png)

1.	Select the **PlayerStart** in the level, then press **E** to enter **Rotation** mode and rotate it so it faces the Target Points. 

	![](TargetPointsAdded.png)

	You will now have three spawn points across from the Player Start (controller icon and direction indicated by the Blue Arrow). 


## Creating a HUD

The final piece of setup requires us to create a basic HUD to communicate information to. 

1.	In an empty space in the **Content Browser**, **Right-click** and select **User Interface/Widget Blueprint**. 

	![](CreateWidgetBlueprint.png)

	A **Widget Blueprint** is a type of Blueprint used with **Unreal Motion Graphics UI** used to create HUD elements. 

	[REGION:note]
	See [](Engine/UMG) for more information. 
	[/REGION]

1.	When prompted, call it **HUD** then open it up. 

1.	In the **Palette** window under **Panel**, drag a **Vertical Box** onto the **CanvasPanel** in the **Hierarchy** window. 

	![](AddVerticalBox.png)

1.	Also under **Panel**, drag a **Horizontal Box** onto the **Vertical Box** in the **Hierarchy** window. 

	![](AddHorizontalBox.png)

1.	Under the **Common** section in the **Palette**, drag two **Text** widgets onto the **Horizontal Box** in the **Hierarchy** window.  

	![](AddTextBlocks.png)

1.	Select the **Vertical Box** in the **Hierarchy** window, then in the **Details** panel click **Anchors** and select the one shown below. 

	![](AnchorSelected.png)

	[REGION:note]
	An **Anchor** will lock the UI element in the position specified regardless of screen size (see [](Engine/UMG/UserGuide/Anchors) for more information). 
	[/REGION]

1.	With the **Vertical Box** selected, move it over to the right-side of the screen and resize it so the text is displayed. 

	![](MovedWidget.png)

1.	Click on the left-most text displayed in the box, then in the **Details** panel under **Text** enter "Pulls:". 

	![](EnterText1.png)

1.	For the other text, enter the "10" for its **Text** field. 

	![](EnterText2.png)

	This text is what we will communicate with later and update based on the state of the game. 

1.	In the **Hierarchy** window, **Right-click** and **Copy** the **Horizontal Box**, the paste it on top of the **Vertical Box**. 

1.	Repeat the previous step so that there are now three **Horizontal Boxes** under **Vertical Box** and the text appears as shown below. 

	![](AddedBoxes.png)

1.	Update the other text fields to "Shots" (set to "3") and "Score" (set to "0") and click the **Compile** button.  

	![](UpdateText.png)

1.	**Compile** and **Save** then close the HUD Widget Blueprint. 

Our assets are now set up. In the Next Step, we will make some minor changes to our **Character Blueprint** to make sure our playable character is set up correctly for our game. 


<!-- Old
[EXCERPT:ProjectStart]
[OBJECT:TopicList]
	[PARAM:title]
		Creating the Project
	[/PARAM]
	[PARAM:description]
	The first thing we will do is set up a new project to work out of. 
	[/PARAM]
[/OBJECT]

1. From the **Unreal Project Browser** window, create a **New Project** and use the **Blueprint Third Person** template. 
	
	![](BPHT1_CreateProject.png)(w:640)
	
1. Make sure that **Include starter content** (1) is enabled. 

1. Give the project a name (2). 

1. With each of the above defined, click **Create Project** to create a new project (3). 
[/EXCERPT:ProjectStart]

[OBJECT:TopicList]
	[PARAM:title]
		Spawnable Actor Setup
	[/PARAM]
	[PARAM:description]
	With our project created, first we will create the spawnable/destroyable Static Mesh that will blow up when the player touches it. 	
	[/PARAM]
[/OBJECT]

1.  In the **Content/StarterContent/Props** folder locate the **SM_Rock**, **Right-Click** on it and select **Create Destructible Mesh**. 

	![](BPHT1_1.png)

1.	A new **SM_Rock_DM** asset will be created next to it in the **Content Browser**, **Double-click** on it to open it. 

1.  In the **Destructible Mesh** window, click the **Fracture Mesh** button. 

	![](BPHT1_2.png)

1.  In the **Destructible Settings** window under **Fracture Effects 0**, assign **P_Explosion** and **Explosion01** for Particle System and Sound. 

	![](BPHT1_3.png)

	_This will play the assigned Particle Effect and Sound when the mesh is fractured._
	
	_You can also assign an exterior Material (0) and interior Material (1) for the rock if you wish in the **Skeletal Mesh** section._

1.  **Save** then close the **Destructible Mesh** window.

1.	Back in the **Content Browser**, **Right-click** on the **SM_Rock_DM** and select **Create Blueprint Using This...**. 

	![](BPHT1_4.png)

1.	Name the Blueprint **BP_Rock** and save it in the **Blueprints** folder.  

1.	When the Blueprint opens, in the **Components** window, click the **Add Component** option then search for and add a **Sphere Collision**. 

	![](BPHT1_5.png)

	_This will serve as our "trigger" to tell us when the player touches the rock to explode it._

1.	Select the Sphere, then in the **Details** panel rename it to **Trigger**. 

1.	Set the **Transform** for the Trigger as shown below. 

	![](BPHT1_6.png)

	_You can click on the **Viewport** tab to view the trigger and how it surrounds the rock._

1.	Also in the **Details** panel, find the **Collision Presets** option and set it to **OverlapOnlyPawn**. 

	![](BPHT1_7.png)

	_When the player overlaps the trigger, we will have the rock explode._

1.	**Compile** and **Save** the Blueprint, then close it. 

[OBJECT:TopicList]
	[PARAM:title]
		Fire Effect Setup
	[/PARAM]
	[PARAM:description]
	Next we will add a trigger sphere around a fire effect so we know when the player touches it. 	
	[/PARAM]
[/OBJECT]

1. In the **Content Browser** under **Content/StarterContent/Blueprints**, open the **Blueprint_Effect_Fire** Blueprint. 

1. In the **Components** window, click the **Add Component** button and search for and add a **Sphere Collision** component. 

	![](BPHT4_1.png)

1. In the **Details** panel for the sphere, rename it to **Trigger** and set its **Transform** as shown below. 

	![](BPHT4_2.png)

	_Remember, you can view the fire/trigger on the **Viewport** tab of the Blueprint._

1. In the **Collision** section, set the **Collision Presets** to **OverlapOnlyPawn**. 

	![](BPHT4_3.png)

	_When the player overlaps the trigger, they will catch on fire._

1. **Compile** and **Save** the Blueprint, then close it. 

[OBJECT:TopicList]
	[PARAM:title]
		Spawn Location Setup
	[/PARAM]
	[PARAM:description]
		Almost done with set up, here we will add some places for the rock to spawn. 
	[/PARAM]
[/OBJECT]

1.	In the **Modes** window, search for and add a **Target Point** by dragging-and-dropping it anywhere in the level viewport. 
	
	![](BPHT1_18.png)

	_This will represent the spawner location for our **BP_Rock** we want to spawn._

1.	Repeat the previous step three more times adding **Target Points** where ever you wish inside the level. 

	![](BPHT1_19.png)

	_As you can see in the image above, we spaced our spawn locations out around the geometry in the level._


[OBJECT:TopicList]
	[PARAM:title]
		Simple Pool Setup
	[/PARAM]
	[PARAM:description]
	For our last bit of set up, we will make a small pool with water so the player can jump in it to put out the fire attached to them. 	
	[/PARAM]
[/OBJECT]

1. From the **Modes** menu under **BSP**, drag a **Box** Brush anywhere in the **Level Viewport**. 

	![](BPHT5_1.png)

1. In the **Details** panel for the Brush, set the **X** and **Y** shape sizes to **500** and the **Z** to **100**. 

	![](BPHT5_2.png)

1. With the Brush selected, in the **Level Viewport** press **Control+W** to duplicate the Brush. 

1. For the duplicated Brush, in the **Details** panel, set the **Brush Type** to **Subtractive** and the **X** and **Y** shape sizes to **400** and **Z** to **100**. 

	![](BPHT5_3.png)

1. Move the **Subtractive** Brush inside the **Additive** Brush to create an open box. 

	![](BPHT5_4.png)(w:480)

	_You can also move the **Additive** Brush up a bit so that it is flush with the floor if you wish._

1. From the **Content Browser** under **Content/StarterContent/Shapes**, drag in the **Shape_Plane** asset and place it inside the box. 

1. Press **R** to enter scale mode and scale the plane so that it covers the entire shape of the opening and is raised off the ground a bit. 

	![](BPHT5_5.png)(w:480)

	_You can press **W** to go back to **Translation** mode to move your scaled Brush as well._

1. In the **Details** panel for the plane, under **Materials** use **M_Water_Lake** and under **Collision** set the preset to **NoCollision**. 

	![](BPHT5_6.png)

1. From the **Modes** menu under **Basic**, drag in a **Box Trigger** and resize (**R** key) it so that it fits within the box opening. 

	![](BPHT5_7.png)(w:480)

	_Trigger Box is shown above by the orange box outline. You can put this below the water plane if you wish._

Next we will start to hook things up, first by allowing the player to press a button to spawn our rock at one of the spawn locations. 

-->

%Steps%

