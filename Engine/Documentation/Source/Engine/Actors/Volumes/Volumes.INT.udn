Availability: Public
Title:Volumes User Guide
Crumbs:%ROOT%, Engine, Engine/Actors
Description:Guide to placing and working with Volumes to augment the behavior and setup of your levels.

[VAR:playlistnav]
[OBJECT:PlaylistNavigation]
	[PARAMLITERAL:id]
		LevelDesign_Beginner
	[/PARAMLITERAL]
	[PARAM:previous]
		[Previous Topic](Engine/Actors/Brushes "%Engine/Actors/Brushes:title%")
	[/PARAM]
	[PARAM:next]
		[Next Topic](Engine/Actors/Triggers "%Engine/Actors/Triggers:title%")
	[/PARAM]
	[PARAM:home]
		[](Tracks/LevelDesign/Beginner)
		%Tracks/LevelDesign/Beginner:menu%
	[/PARAM]
[/OBJECT]
[/VAR]


%playlistnav%


[TOC(start:2 end:2)]


**Volumes** are 3-dimensional areas within your levels, each of which serve a specific purpose. Some of these purposes include:

* Causing damage to the Player.
* Blocking the Player from entering the volume, acting as a collision surface.
* Changing the way a level is calculated for lighting or visibility.

There are many types of volumes that perform a variety of tasks. This document will demonstrate the creation of volumes for your levels, and discuss each of the volume types available in Unreal Engine 4. 

### Using Volumes Wisely in Level Design

One aspect about volumes that is critical to new level designers is the importance of using them wisely in a level. This boils down to two key points: 

1. Volumes are invisible during gameplay; Players cannot see them!
1. Due to the first point, very rarely will you use a volume by itself for any effect. 

Because volumes are invisible, Players will generally not know that they have entered one; not unless you, as the level designer, help them a bit. Volumes should generally be thought of as components of a greater effect, with some other level element acting as a visual cue to lend understanding and complete the effect.

Take a **Pain Causing Volume**, for example (which causes damage to anything inside the volume). If one were sitting in the middle of the level, like so...

[VAR:VolumeDemoSize]
h:301
[/VAR]

[REGION:imagetable]
|![](PainCausingVolume_NoEffect.png)(%VolumeDemoSize%)|![](PainCausingVolume_NoEffect_NoVolume.png)(%VolumeDemoSize%)|
|:-----------:|:----------:|
|Volume placement|What the player will see|
[/REGION]

Then the Player would not understand why they were suddenly hurt when they entered the area. However, if there were a fiery particle effect in the middle of the volume...


[REGION:imagetable]
|![](PainCausingVolume_Effect.png)(h:343)|![](PainCausingVolume_Effect_NoVolume.png)(h:343)|
|:-----------:|:----------:|
|Volume placement|What the player will see|
[/REGION]

Then the Player has a reason to understand why it hurts to stand there!



## Creating Volumes

Volumes can be created by selecting a volume from the **Volumes** tab of the **Modes** menu and dragging and dropping it into the level viewport. 

![](creatingVolumes.png)

Once the volume has been placed in the level, you can then resize and (or) reposition the volume as you see fit. 

## Volume Types


### Blocking Volume

A **Blocking Volume** serves as a collision shape through which objects are not intended to pass. By adjusting the collision channels on the volume (pictured below), you can control which types of objects will be allowed to pass, and if any objects should also generate overlap events when they pass through the volume. See the [Collision Documentation](Engine\Physics\Collision) for more details.

![](blocking_volume_details.png)

Blocking Volumes can be used in the place of collision surfaces on Static Meshes, particularly in the case of walls in structures. When used in this way, they generally have a few advantages over mesh collision surfaces. The first is that they are easier to calculate than more complex collision models. The second is that since the nature of a volume is to know what objects are within it, a Blocking Volume can be more useful when colliding with high-speed physics objects. 


### Camera Blocking Volume

**Camera Blocking Volumes** are similar in nature to Blocking Volumes in that they are used to define a space where a Camera Actor is not intended to pass through. An example of this would be in a third person perspective, when you want to keep your player's camera confined to your play space and not allow them to rotate the camera outside of the world. 

The properites of the Camera Blocking Volume can be adjusted in the same manner as a Blocking Volume by adjusting their collision channels. 


### Trigger Volume 

**Trigger Volumes** are used as a way to cause events when a Player or other object enters or exits them. They can be used quickly with the **Level Blueprint** to test out events and gameplay scenarios or functionality without the need for additional Blueprints.

For example: you could place a TriggerVolume in your level and in your **Level Blueprint**, create an overlap event for the volume which can play a SoundCue, start a Cinematic or even open a door. 


### Nav Mesh Bounds Volume

**Nav Mesh Bounds Volumes** are used as a way to control where Nav Meshes will be calculated in a level. Nav Meshes are used to calculate navigation paths throughout the areas of a level.

Within the volume, a Nav Mesh is constructed on all surfaces with an appropriate angle to be walked upon. You may overlap as many of these as you need to generate the desired Nav Mesh.

To use the Nav Mesh Bounds Volume, simply create one (or more) that encloses the navigable areas of your level. The Nav Mesh will be built automatically.

[REGION:tip]
You can press **P** at any time in the viewport to visualize the Nav Mesh.
[/REGION]

Please see the Content Examples and [Nav Mesh Documentation](Resources\ContentExamples\NavMesh) for more details and examples. 



### Physics Volume

**Physics Volumes** are volumes in which the physical setup that affects characters and other physics objects can be manipulated. A common use for them is for the creation of watery environments in which the player needs to swim. But you could just as easily use one to create an area with low or no gravity and affect the terminal velocity of objects that pass through it.

There are some properties that are designated for this volume which can be adjusted from the **Details** panel, pictured below. 

![](killZdetails.png)

|Property| Description |
| ------- | ------------ |
| **Terminal Velocity** | Determines the Terminal Velocity of Pawns using CharacterMovement when falling. |
| **Priority** | Determines which PhysicsVolume takes precedence if they overlap.  |
| **Fluid Friction** | Determines the amount of friction applied by the volume as Pawns using CharacterMovement move through it. <br> The higher this value, the harder it will feel to move through the volume. |
| **Water Volume** | Determines if the volume contains a fluid, like water. |
| **Physics on Contact** | Determines if the Actor is affected by the volume by touching it (by Default, an Actor must be inside the volume for it to affect them). |


### Pain Causing Volume

**Pain Causing Volumes** are actually Physics Volumes with the added ability to inflict damage on players. These are useful when you have obvious areas of a level that the player should not go, such as a lava pit, a cloud of toxic gas, and so on. 

In addition to the properties that can be assigned from a Physics Volume, the Pain Causing Volume also has its own set of specific propteries outlined below. 

![](paincausingvolume.png)

|Property| Description |
| ------- | ------------ |
| **Pain Causing** | Whether the volume currently causes damage or not.  |
| **Damage Per Sec** | Damage done per second to the Actors in the volume when Pain Causing is enabled. |
| **Damage Type** | This determines the type of damage done to the Actor. |
| **Pain Interval** | This is the amount of time, in seconds, between applied damage when Pain Causing is enabled.  |
| **Entry Pain** | Determines if damage is applied when entering the volume if Pain Causing is enabled in addition to damage applied based on the Pain Interval. |



### Kill Z Volume

The **Kill Z Volume** or "Kill-Brush" essentially destroys any Actor that enters the volume (this includes the Player). One usage for this type of volume would be to set it up below a cliffside or high ledge that you want to kill the Player or Actor that falls down into it. 



### Level Streaming Volumes

[EXCERPT:LSV]
**Level Streaming Volumes** are used to aid in the [level streaming](Engine/LevelStreaming) process. They provide for a simple way to encapsulate a level, as well as control when it streams in and out of memory, based on when a Player enters and exits the volume. 

You can adjust how a Level Streaming Volume handles level streaming by adjusting the properties from the **Details** panel, pictured below. 

![](levelstreamingvolume.png)

|Property| Description |
| ------- | ------------ |
| **Streaming Levels** | Displays the levels affected by the volume. |
| **Editor Pre Vis Only** | Determines if the streaming volume should only be used for editor streaming level previs. |
| **Disabled** | If true, the streaming volume is ignored by the streaming volume code. <br> Also used to either disable a Level Streaming Volume without disassociating it from the level, or to toggle the control of a level's streaming between Blueprints and Volume Streaming. |
| **Streaming Usage** | Determines what the volume is used for, e.g. whether to control loading, loading and visibility, or just visibility (blocking on load). |

[/EXCERPT]

For more on Level Streaming Volumes, see [](Engine/LevelStreaming/StreamingVolumes).

### Cull Distance Volume

**Cull Distance Volumes** are optimization tools that allow for objects at or below a certain size to be culled (or not drawn to the screen) based on that object's distance from the camera. This can help optimize your scene by not drawing objects of a given size. Size is calculated by the bounding box along its longest dimension. 

Cull Distance Volume setup is dependent on the **Cull Distances** property, shown in the **Details** panel below.

![](CullDistancesProperty.png)

In the image above, the properties define the following behavior:

* Objects within the volume that have a size less than 50 units will be culled (disappear) when they are 500 units away from the camera or farther.
* Objects within the volume that have a size less than 120 units will be culled (disappear) when they are 1000 units away from the camera or farther.
* Objects within the volume that have a size less than 300 units will never be culled, since 0 in this case is considered to be infinity, meaning that the camera can never get far enough away.

Setup starts with adding a new entry into the Cull Distances array, which is done by clicking the ![](button_Plus.png) button. Next, simply fill in the size of a given object and the desired distance at which you want objects of that size or smaller to be culled. These properties do not have to be created in a specific order. 

### Audio Volume
**Audio Volumes** allow you to control and apply various sounds in your level as well as provide an avenue to create compartmentilized audio zones where you can control what is heard inside and outside of the volume. Through the use of Audio Volumes, you can generate transitions between audio through fading and control the Ambient Zone settings within the volume itself. 

Several properties can be adjusted from the **Details** panel on this volume to allow for more control over its effects as seen below. 

![](audiovolume.png)

|Property| Description |
| ------- | ------------ |
| **Priority** | In the event of overlapping volumes, the highest priority volume will be used. The order is undefined if two or more overlapping volumes have the same priority. |
| **Apply Reverb** | Determines if the reverb settings should be used. |
| **Reverb Effect** | This is the reverb asset to use for the volume. |
| **Volume** | This is the overall volume level of the reverb effect. |
| **Fade Time** | This is the time (in seconds) to fade from the current reverb settings into the volumes setting.  |
| **Enabled** | Determines whether the volume is currently enabled and is able to affect sounds. |

**Ambient Zones** define how Sound Actors located inside the associated Audio Volume will be altered by the Player's location. The settings for the Ambient Zone can also be adjusted from the **Details** panel. 

|Property| Description |
| ------- | ------------ |
| **Exterior Volume** | The final volume of exterior sounds when the player is inside the volume.  |
| **Exterior Time** | Time to fade to new exterior volme in seconds. |
| **Exterior LPF** | Lowpass Filter multiplier applied to exterior sounds when inside (1.0 to apply the maximum LPF). |
| **Exterior LPFTime** | Time to fade to new Lowpass Filter level in seconds. |
| **Interior Volume** | The final volume of interior sounds when the player is outside the volume. |
| **Interior Time** | Time to fade to new interior volume in seconds. |
| **Interior LPF** | Lowpass Filter multiplier applied to interior sounds when outside (1.0 to apply the maximum LPF). |
| **Interior LPFTime** | Time to fade to new Lowpass Filter level in seconds. |

<!--For more information on Ambient Zones, please refer to the following documentation: [Ambient Zones Documentation](Engine/Audio/AmbientZones).-->

### Post Process Volume

A **Post Process Volume** is a space in which the Post Process settings applied to the camera can be overridden by adjusting the properties in the **Details** panel. 

For more information on Post Processing, please see the [Post Processing Documentation](Engine/Rendering/PostProcessEffects).
 

### Lightmass Importance Volume

**Lightmass Importance Volumes** are used to focus Lightmass calculations. Lightmass is the precalculated lighting and global illumination system used in Unreal Engine 4. In order to minimize - and thereby optimize - the amount of processing needed to generate precalculated lights in a level, Lightmass Importance Volumes are use to enclose the areas of the level geometry. Lightmass will only calculate within that area, skipping anything outside of it. 

For more information on Lightmass and Lightmass Importance Volumes, please see the [Lightmass documentation](Engine/Rendering/LightingAndShadows/Lightmass).


### Lightmass Character Indirect Detail Volume
The **Lightmass Character Indirect Detail Volume** is similar to the Lightmass Importance Volume and generates indirect light samples, not just at Player height above ground, but generates them inside the entire Volume. An example usage of this type of Volume would be an elevator shaft to ensure the indirect lighting is correct extending up/down the shaft. 


###  Precomputed Visibility Volume
**Precomputed Visibility Volumes** are used primiarly for performance optimization. These volumes store the visibility of Actors for their location in the world. These should be placed only in areas the Player can access. 


### Precomputed Visibility Override Volume
**Precomputed Visibility Override Volumes** let you manually override the visibility of Actors for their location in the world if the auto generated result of a Precomputed Visibilty Volume is undesired. These are also used for performance optimization and should only be placed in areas where the Player can access. 
 

