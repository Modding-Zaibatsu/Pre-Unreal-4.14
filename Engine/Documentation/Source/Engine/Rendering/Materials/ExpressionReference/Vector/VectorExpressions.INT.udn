Availability:Public
Title:Vector Expressions
Crumbs: %ROOT%, Engine, Engine/Rendering/Materials, Engine/Rendering/Materials/ExpressionReference
Description:Expressions that output a vector value, such as a position or normal.
Version: 4.9

[EXCERPT:TOC]
[TOC(start:2)]
[/EXCERPT:TOC]

[EXCERPT:ActorPositionWS]
## ActorPositionWS

**ActorPositionWS** outputs Vector3 (RGB) data representing the location of the object with this material on it in world-space. 

![](ActorPositionColors.png)(w:434) ![](ActorPositionNetwork.png)(w:490)

In this example, you can see that ActorPositionWS is being fed directly into the Base Color of the material. As a result, each of the spheres with the material applied to them show a different color as they are moved to different locations in 3D space. Note that the result of the ActorPositionWS node is being divided by 1600 to create a nice blend-in color, rather than a pop.

[/EXCERPT:ActorPositionWS]


[EXCERPT:CameraPositionWS]
## CameraPositionWS


The **CameraWorldPosition** expression outputs a three-channel vector value representing the camera's position in world space.

The preview sphere changes color as the camera rotates.

![CameraPositionWSExample.png](CameraPositionWSExample.png)(w:450) ![](CameraPositionWSNetwork.png)(h:333)
[/EXCERPT:CameraPositionWS]


## CameraVectorWS

The **CameraVector** expression outputs a three-channel vector value representing the direction of the camera with respect to the surface, in other words, the direction from the pixel to the camera.

**Example Usage:** CameraVector is often used to fake environment maps by connecting the CameraVector to a ComponentMask and use the x and y channels of the CameraVector as texture coordinates.

[REGION:fullwidth]
![CameraVectorWSExample.png](CameraVectorWSExample.png)
[/REGION:fullwidth]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Constant#Constant2Vector]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Constant#Constant3Vector]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Constant#Constant4Vector]


## LightVector
[REGION:warning]
**This expression is deprecated in Unreal Engine 4 as lighting calculations are now deferred.**
[/REGION:warning]
<!--
The LightVector expression is a three-channel vector value representing the direction of the light with respect to the surface.

**Example Usage:** LightVector can be used to calculate custom lighting algorithms, such as a simple Lambert lighting model.

![LightVectorExample.jpg](LightVectorExample.jpg)

[REGION:note]
	The LightVector expression is not valid while evaluating the Emissive output, and can only be used in LightFunction or DeferredDecal materials.
[/REGION]
-->



## Object Bounds

The **Object Bounds** expression outputs the size of the object in each axis. If used as color, the X, Y, and Z axes correspond to R, G, and B, respectively. 

![](ObjectBoundsScene.png)(w:411) ![](ObjectBoundsNetwork.png)

In the example above, you can see that the colors of the objects correspond to the longest axis of the object.

[EXCERPT:ObjectOrientation]
## ObjectOrientation


The **ObjectOrientation** expression outputs the world-space up vector of the object. In other words, the object's local positive z-axis is pointing in this direction.

![ObjectOrientationExample.png](ObjectOrientationExample.png)
[/EXCERPT:ObjectOrientation]


[EXCERPT:ObjectPositionWS]
## ObjectPositionWS


The **ObjectPositionWS** expression outputs the world-space center position of the object's bounds.  For example, this is useful for creating spherical lighting for foliage.


![](WorldPositionWSScene.png)(w:450) ![](WorldPositionNetwork.png)(h:349)

[/EXCERPT:ObjectPositionWS]


[INCLUDE:Engine/Rendering/Materials/ExpressionReference/Particles#ParticlePositionWS]


[EXCERPT:PixelNormalWS]
## PixelNormalWS

The **PixelNormalWS** expression outputs vector data representing the direction that pixels are facing based on the current normal.

![PixelNormalWSExample.png](PixelNormalWSExample.png)

In this example, PixelNormalWS is fed into Base Color. Notice how the normal map is used to give the per-pixel result. 

[/EXCERPT:PixelNormalWS]


## ReflectionVectorWS

The **ReflectionVectorWS** expression is similar in spirit to [CameraVectorWS](#CameraVectorWS), but it outputs a three-channel vector value representing the camera direction reflected across the surface normal.

**Example Usage:** ReflectionVector is commonly used in environment maps, where the x/y components of the reflection vector are used as UVs into a cubemap texture.

[REGION:fullwidth]
![ReflectionVectorWSExample.png](ReflectionVectorWSExample.png)
[/REGION]

[EXCERPT:VertexNormalWS]
## VertexNormalWS


The **VertexNormalWS** expression outputs the world-space vertex normal. It can only be used in material inputs that are executed in the vertex shader, like WorldPositionOffset.  This is useful for making a mesh grow or shrink.  Note that offsetting position along the normal will cause the geometry to split apart along UV seams.

[REGION:fullwidth]
![VertexNormalWSExample.png](VertexNormalWSExample.png)
[/REGION]

In the example above, the preview sphere would seem to scale up and down with sinusoidal motion, as each of the vertices moved in their own normal directions.

[/EXCERPT:VertexNormalWS]


