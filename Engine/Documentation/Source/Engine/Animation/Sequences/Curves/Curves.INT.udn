Availability:Public
Title:Animation Curves
Crumbs: %ROOT%, Engine, Engine/Animation, Engine/Animation/Sequences
Description:Curve system for driving properties of Morph Targets and Materials throughout animation playback.
version: 4.9

[EXCERPT:Intro]
**Animation Curves** provide a way to change the value of a Material parameter or a Morph Target while an animation is playing back. Their workflow is very simple, requiring that you simply designate the asset you want to modify (either a Material or a Morph Target), name the curve accordingly, and then adjust keyframe values across the duration of an animation.
[/EXCERPT:Intro]


When you import Morph Target animations into UE4 via FBX, Morph Target Curves are automatically generated for that AnimSequence. However, they are hidden by default. This is by design; hiding away what could be many different Morph Target Curves will prevent the editor from slowing down.

It should be noted that the ability to adjust curves for Morph Targets, while useful, is more of a convenience feature than anything else. If you are handling a very complex Morph Target animation, you will probably have a much easier time if you perform the animation in the 3D animation package from which you exported out the original Morph Target.

## Setting Up a Material Curve

In this example, we will show how to set up a simple Material Curve that causes a character to blush during an animation. The setup for a Morph Target curve would be similar, requiring only that the name of the curve match the exact name of the Morph Target that was imported. For more information on Morph Targets, please see [](Engine/Content\FBX\MorphTargets) and [](Engine/Animation/Persona\MorphTargetPreviewer).

We will start with a simple animation in which our character is lunging forward with a hammer. We will then set up a simple Material curve that will cause his face to blush heavily while he does this. To begin, let us look at the animation:

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
TKAcNubFOH8
[/PARAMLITERAL]
[/OBJECT]

We can open that Animation Sequence in Persona and look at it by **Double-clicking** it in the **Content Browser**.

[REGION:fullwidth]
![](Persona_HammerSlam.png)
[/REGION]

The character's head has a simple Material with a parameter named **Blush**. Here is a look at the Material Graph:

[REGION:fullwidth]
![](BlushMaterial.png)
[/REGION]

[REGION:note]
We have also made a [Material Instance](Engine/Rendering/Materials\MaterialInstances) from this Material and applied it to our character.
[/REGION]

In Persona, we start by clicking the ![](button_AddFloatTrack.png) button located in the Curves area. From this, navigate to the **Add Variable Curve...** field and select **Create Curve**. We name the Curve "Blush". This name must coincide with the name used in the Material Parameter.

![](AddingBlushCurve.png)

This creates the Curve we need, but we must also make sure to identify it as a Material Curve. This is done using the dropdown at the far right of the curve.

![](SettingCurveToMaterial.png)

You can expand the curve area size by clicking the small eye icon next to the dropdown.

![](ExpandingCurve.png)

You can **Shift+Left-click** in the curve area to create a new keyframe. Keyframe values and times can be adjusted using the fields that appear when a keyframe is selected.

![](CreateMaterialCurve.png)

You can also **Right-click** on a keyframe and change its tangent type:


![](CurveType.png)

Our end result is that the curve now drives the associated Material parameter, causing the character to blush while swinging his hammer.

![](BlushInAction.png)
