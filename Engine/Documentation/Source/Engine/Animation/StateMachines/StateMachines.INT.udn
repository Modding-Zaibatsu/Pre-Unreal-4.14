Availability:Public
Title: State Machines
Crumbs: %ROOT%, Engine, Engine/Animation
Description:State Machines allow Skeletal Animations to be broken up into various states, with full control over how blends occur from one state to another.
version: 4.12

<!--
[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Animation/StateMachines:title%](Rigging_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/content_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Animation/StateMachines:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Animation/StateMachines:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Animation/StateMachines]
	[/PARAM]
[/OBJECT]
[/VAR]
-->

[REGION:banner]
![](StateMachineImage.png)
[/REGION]

<!--
[EXCERPT:Intro]
**State Machines** provide a graphical way to break the animation of a Skeletal Mesh into a series of States. These states are then governed by Transition Rules that control how to blend from one state to another. As a tool, they greatly simplify the design process for Skeletal Mesh animation, in that you can create a graph that easily controls how your characters can flow between types of animation without having to create a complex Blueprint network.

They also simplify conceptualization of your animation graph. You can start the design of your animation by thinking of the necessary states you will need and how a character may flow from one state to another. A great way to think of them is as a way to break all possible animations for your character into an easy-to-read flow chart, in which you can watch the Skeletal Mesh's state move throughout the chart.

For example, a character may have a state of "Idle" when not moving. Once the character's speed exceeds a certain value, the character may blend into another state of "Movement." There may be any number of other states, such as Falling, Jumping, Crouching, Sprinting, and so forth. By using State Machines, animators and artists can quickly visualize how data is flowing through their animation network.
[/EXCERPT:Intro]

-->

**State Machines** provide a graphical way to break the animation of a Skeletal Mesh into a series of States. These states are then governed by **Transition Rules** that control how to blend from one state to another. As a tool, they greatly simplify the design process for Skeletal Mesh animation, in that you can create a graph that easily controls how your characters can flow between types of animation without having to create a complex Blueprint network.

Below you will find the information and tutorials for working with State Machines in Unreal Engine 4. 

[OBJECT:TopicButtonList]
	[PARAM:icon]
		![](%ROOT%/start_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		Essentials
	[/PARAM]
	[PARAM:links]
		* [](Engine\Animation\StateMachines\Overview "%Engine\Animation\StateMachines\Overview:description%")
		* [](Engine\Animation\StateMachines\CreatingStateMachines\ "%Engine\Animation\StateMachines\CreatingStateMachines:description%")
		* [](Engine\Animation\StateMachines\EditingStateMachines\ "%Engine\Animation\StateMachines\EditingStateMachines:description%")		
	[/PARAM]
[/OBJECT]

[OBJECT:TopicButtonList]
	[PARAM:icon]
		![](%ROOT%/related_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		Related
	[/PARAM]
	[PARAM:links]
		* [](Gameplay/HowTo/CharacterMovement/Blueprints "%Gameplay/HowTo/CharacterMovement/Blueprints:description%")
		* [Setting Up Paper 2D State Machines](Engine/Paper2D/HowTo/Animation/ "%Engine/Paper2D/HowTo/Animation/:description%")		
	[/PARAM]
[/OBJECT]



