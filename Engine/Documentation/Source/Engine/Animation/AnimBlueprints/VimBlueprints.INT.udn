Availability:Public
Title: Animation Blueprints
Crumbs: %ROOT%, Engine, Engine/Animation
Description:Animation Blueprints are visual scripts created in Persona that allow for the creation and control of complex animation behaviors.
Related: Engine/Blueprints/Overview
Related: Engine/Content/FBX/Animations
Related: Engine/Content/Types/SkeletalMeshes
Related: Engine/Animation/PhysicallyDrivenAnimation
Related: Engine/Animation/StateMachines
Related: Gameplay/AI
Related: Engine/Content/Tools/MayaRiggingTool
version: 4.12

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Animation/AnimBlueprints:title%](AnimBP_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/anim_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Animation/AnimBlueprints:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Animation/AnimBlueprints:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Animation/AnimBlueprints]
	[/PARAM]
[/OBJECT]
[/VAR]

[REGION:banner]
![](AnimationBlueprint.png)
[/REGION]


[EXCERPT:Intro]
An **Animation Blueprint** is essentially a specialized [**Blueprint**](Engine/Blueprints) whose graphs 
control the animation of a SkeletalMesh. It can perform blending of animations, directly control the 
bones of the skeleton, and output a final pose for a SkeletalMesh each frame.

The Controller directs its Pawn (or Character) to move based on player input or decisions made based on the gameplay 
environment. Each Pawn has a SkeletalMeshComponent that references the SkeletalMesh to animate and 
has an instance of a Animation Blueprint. The Animation Blueprint, through its two graphs, can access properties 
of the owning Pawn, compute values used for blending or state transitions or driving AnimMontages, and 
calculate the current pose of the SkeletalMesh based on blending of AnimationSequences and direct 
transformations of the Skeleton from SkeletalControls.
[/EXCERPT:Intro]

[REGION:note]
An example of an **Animation Blueprint** is demonstrated on the [**Animation Content Examples**](Resources\ContentExamples\Animation) page under section 1.2.
[/REGION]

## Creating & Navigating Animation Blueprints

Before jumping into how Animation Blueprints work, it’s best to understand how to create them and start to familiarize yourself with the Animation Blueprint Interface. 
Check out each of the links below for more information. 

[REGION:topics half]
%Engine\Animation\AnimBlueprints\Creation:TopicCompact%
%Engine\Animation\AnimBlueprints\Interface:TopicCompact%
[/REGION]

## Working with Animation Blueprints

Once you have created your Animation Blueprint and can navigate the UI, it's time to consider which aspect of it you want to work on first.

[EXCERPT:Graphs]
There are two main components in an Animation Blueprint that work in conjunction to create the final animation 
for each frame. The **EventGraph** can perform updates to values which can then be used in the **AnimGraph** 
to drive State Machines, BlendSpaces, or other nodes allowing blending between multiple AnimationSequences or poses 
that can fire off notifications to other systems to enable dynamic animation-driven effects to occur.
[/EXCERPT:Graphs]

Check out the links below for more information on each topic. 

[REGION:topics half]
%Engine\Animation\AnimBlueprints\EventGraph:TopicCompact%
%Engine\Animation\AnimBlueprints\AnimGraph:TopicCompact%
[/REGION]


## Working with Child Animation Blueprints

When creating and setting up your characters and Animation Blueprints, there may be instances where you have multiple characters that are similar but have entirely different animations for different states. Rather than create Animation Blueprints for each of those characters, you may be able to use a **Child Animation Blueprint** of a pre-existing Animation Blueprint and override the animation assets that you want to replace. The Child Animation Blueprint will inherit everything from the parent, but it will also allow you to specify which animations to override via the **Asset Override Editor**. 

For example, suppose you have two humanoid type characters where one is a human and another is a werewolf. Both characters can walk, run, jump, crawl, etc. However, their motions may be entirely different. The logic of moving between those motions is the same, but the motions themselves are different. It's perfectly fine to create two different Animation Blueprints, but to save some time. you can create a Child Animation Blueprint and selectively choose which animations to override. 

[REGION:note]
See [**Animation Blueprint Override**](Engine/Animation/AnimHowTo/AnimBPOverride) for an example walk-through of creating and overriding an Animation Blueprint with a Child Animation Blueprint.
[/REGION]





