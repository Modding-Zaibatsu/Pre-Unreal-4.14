INTSourceChangelist:2725188
Availability:Public
Title: 블렌드 스페이스
Crumbs: %ROOT%, Engine, Engine/Animation
Description:Blend Space, 블렌드 스페이스는 여러 입력값에 따라 몇 개의 애니메이션도 서로 블렌딩할 수 있게 만들어 주는 애셋입니다.
Related: Engine/Animation/AnimBlueprints
Related: Engine/Content/FBX/Animations
Related: Engine/Animation/AnimMontage
Related: Engine/Animation/PhysicallyDrivenAnimation
Related: Engine/Animation/NodeReference/Blend
Related: Engine/Animation/StateMachines
Related: Engine/Animation/AnimBlueprints/AnimGraph
Related: Engine/Content/Tools/MayaRiggingTool
version: 4.9

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/Animation/Blend Spaces:title%](Engine/Animation/animation_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/content_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/Animation/Blend Spaces:title%
	[/PARAM]
	[PARAM:description]
		%Engine/Animation/Blend Spaces:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/Animation/Blend Spaces]
	[/PARAM]
[/OBJECT]
[/VAR]

[TOC (start:2 end:2)]



[EXCERPT:Intro]
**블렌드 스페이스** (Blend Space) 는 애님그래프(AnimGraph) 에서 샘플링할 수 있는 특수 애셋으로, 두 입력값에 따라 
애니메이션을 블렌딩시켜 주는 것입니다. 하나의 입력에 따라 두 애니메이션을 섞는 단순 블렌딩은 
애니메이션 블루프린트에서 쓸 수 있는 표준 [블렌드 노드](Engine/Animation/NodeReference/Blend) 를 사용하면 됩니다. 
블렌드 스페이스를 통해 (현재는 둘로 제한되어 있지만) 
다수의 값에 따라 다수의 애니메이션을 블렌딩하는 복잡한 작업을 할 수 있습니다.

블렌드 스페이스의 목적은 특정 속성이나 조건에 따라 블렌딩을 할 때마다 
별개의 노드를 하드코딩하여 만드는 노고를 덜기 위함입니다. 입력, 애니메이션, 애니메이션 끼리의 블렌딩을 위해 
입력을 어떻게 사용할 것인지 등을 애니메이터나 프로그래머가 지정할 수 있도록 하여, 
사실상 어떤 유형의 블렌딩도 범용 블렌드 스페이스를 사용해서 이뤄낼 수 있습니다.
[/EXCERPT:Intro]




[REGION:topics third]
%Engine/Animation/Blendspaces/Creation:topic%
%Engine/Animation/Blendspaces/Editor:topic%
%Engine/Animation/Blendspaces/UserGuide:topic%
[/REGION]

[REGION:tip]
**블렌드 스페이스** 의 적절한 예는 [애니메이션 콘텐츠 예제](Resources\ContentExamples\Animation) 문서의 1.3 섹션 아래에서 찾아볼 수 있습니다.
[/REGION]

## 블렌드 스페이스 작동방식

블렌드 스페이스의 목적은 특정 속성이나 조건에 따라 블렌딩을 할 때마다 별개의 노드를 하드코딩하여 만드는 노고를 덜기 
위함입니다. 입력, 애니메이션, 애니메이션 끼리의 블렌딩을 위해 입력을 어떻게 사용할 것인지 등을 애니메이터나 
프로그래머가 지정할 수 있도록 하여, 사실상 어떤 유형의 블렌딩도 범용 블렌드 스페이스를 사용해서 이뤄낼 수 있습니다. 
이는 언리얼 엔진 3 의 애님트리가 같은 작업을 처리하던 방식과는 완전 반대입니다. 복잡한 블렌딩을 해야 할 
때마다 새로운 노드를 만들어서 그 블렌딩을 처리해 줘야 했지요. 블렌드 스페이스는 완벽히 범용이라 블렌딩을 결정하는 
요인이 각 개별 블렌드 스페이스에 지정되도록 할 수 있습니다. 각 블렌드 스페이스에는 단순히 값만 받아들이는 입력이 
있습니다. 이 값은 (이벤트 그래프를 통해) 애니메이션 블루프린트의 업데이트 사이클 도중 계산하여 게임플레이 
코드나 다른 방법으로 구동 가능합니다. 이로 인해 확보되는 
엄청난 유연성 덕에, 애니메이션을 원하는 대로 블렌딩할 수 있는 능력을 
애님그래프를 만드는 사람의 손에 쥐어줄 수 있게 된 것입니다.

![Input Flow](bs_flow.png)

블렌드 스페이스는 일종의 2D 그래프로 생각해 볼 수 있습니다. 한 축을 따라서는 각각의 입력과 애니메이션이 다양한 시점에서 
그래프상에 뿌려지는 그래프로 말이지요. 블렌딩된 애니메이션에 대한 계산은, 현재 입력 값으로 지정된 위치에 
따라 그래프 상의 애니메이션끼리 블렌딩하는 식으로 이루어집니다.

![](BlendSpaceLayout_2.png)

1. 애니메이션 시퀀스 1
1. 애니메이션 시퀀스 2
1. 애니메이션 시퀀스 3
1. 입력 1 축 (X-축)
1. 입력 2 축 (Y-축)


플레이어의 이동 속력과 방향에 따라 빈둥 애니메이션과 방향성 달리기 애니메이션을 블렌딩하는 전형적인 것을 
예로 들어 봅시다.

언리얼 엔진 3 에서 이 작업은 방향성 블렌딩 노드와 속력 블렌딩 노드를 합쳐 사용하는 식으로 했었습니다. 
이 노드 각각은 딱 그 블렌딩만 할 수 있도록 하드코딩되어 있었구요. 그 블렌딩에 사용된 값도 코드에 숨겨져 있어서, 
프로그래머 말고는 블렌딩을 미세조정할 수 있는 방법도 없었을 뿐더러 코드에서 값을 수정한다 해도 그를 활용하는 모든 
애님트리에 있는 노드 인스턴스 전부에 영향을 끼치곤 했습니다. 
별로 바람직하지는 않지요.

블렌드 스페이스를 가지고서는, 같은 블렌딩 작업을 블렌드 스페이스 하나로 해낼 수 있습니다. 
플레이어의 (-180 에서 180 까지 각도로 나타나는) 방향과 (0 에서 250 까지 초당 유닛 수로 나타나는) 속력이 
블렌드 스페이스에 입력으로 전해주는 값이 될 것이며, 애니메이션은 이 입력값에 따라 적절히 
블렌딩되도록 설정해야 할 것입니다.

![](BlendSpaceDirection.png)(w:720)

딱 하나의 노드만 있어도 된다는 것에 더해, 입력으로 사용되는 값을 애님블루프린트의 이벤트그래프에서 
직접 계산한 다음 애님그래프의 블렌드 스페이스에 전해줄 수도 있습니다. 입력값 미세조정도 쉽게 가능하며, 
애니메이션 블렌딩 한계치도 그래픽 에디터를 통해 직관적으로 빠르게 조절할 수 있습니다. 
기존 시스템에 비하면 유연성과 사용하기 쉽다는 점이 큰 장점입니다.

## 1차원 블렌드 스페이스

블렌드 스페이스는 1차원 포맷으로도 생성 가능한데, **Blend Space 1D** (블렌드 스페이스 1D)라고도 합니다. 포즈나 애니메이션을 몇 개든 블렌딩 가능한데, 하나의 입력 값에 대해서만입니다. 사용 예라면, 캐릭터 질주시 기울이는 동작입니다. 포즈는 왼쪽 기울이기와 오른쪽 기울이기 둘이고, 캐릭터 질주시 플레이어가 얼마나 회전시키는가에 따라 결정되는 입력을 하나 사용합니다. 기울이기 포즈를 더하기식으로 블렌딩함으로써, 캐릭터의 기울이기가 급선회처럼 보이니 달리기 애니메이션에 생동감이 더욱 살아납니다.

축이 두 개가 아니라 하나뿐이라는 점만 제외하면 블렌드 스페이스 1D 는 표준 양축 블렌드 스페이스와 똑같습니다. 그렇기에 이 문서에서는 2D 버전에 초점을 맞추겠습니다. 모든 규칙과 프로퍼티가 그대로 유지된다는 점만 알아두시면 되겠습니다.

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
2mkn8FZL2KA
[/PARAMLITERAL]
[/OBJECT]

## 구조

블렌드 스페이스의 근간을 이루는 구조는 꽤나 단순합니다. 입력값과 샘플링된 애니메이션, 
이 주요한 부분은 앞서 다뤘습니다.

### 스켈레톤

각 블렌드 스페이스는 다른 애니메이션 애셋 유형과 마찬가지로 특정 **스켈레톤** 을 타겟으로 담습니다. 
블렌드 스페이스에 연결되는 스켈레톤은 블렌드 스페이스 생성시 설정되며, 블렌드 스페이스 안에서 어떤 애니메이션이 
샘플링 가능할지를 결정합니다. 어떤 애니메이션 블루프린트가 샘플링 가능할지도 결정하는데, 
둘 다 같은 스켈레톤을 타겟으로 삼아야 하기 때문입니다.

### 블렌드 파라미터

[EXCERPT:BlendParameters]
블렌드 스페이스의 **블렌드 파라미터** (Blend Parameter)는 본질적으로 앞서 말한 입력입니다. 
각 블렌드 스페이스에는 세 개의 블렌드 파라미터 배열이 있으며, 각 블렌드 파라미터에는 
다음과 같은 프로퍼티가 있습니다:

| 프로퍼티 | 설명 |
| -------- | ---- |
| **Label** | 라벨 - 블렌드 스페이스 에디터에서 _애니메이션 블루프린트_ 의 _AnimGraph_ 내 _BlendSpace_ 노드상의 이 입력에 대한 데이터 핀 위, 이 입력에 대한 축을 따라 표시되는 친근한 이름입니다. |
| **Range** | 범위 - 입력 데이터를 제한시킬 최소-최대값입니다. |
| **Divisions** | 분할 수 - 보간에 사용되는 애니메이션 데이터에서 샘플을 뽑아낼 지점 수입니다. 값이 높을 수록 결과가 정교해 집니다. 블렌드 스페이스 에디터에서는 이 입력에 대한 축에 따른 격자선으로 표시됩니다. |
[/EXCERPT:BlendParameters]

### 샘플 데이터

[EXCERPT:SampleData]
블렌드 스페이스에 대한 **샘플 데이터** (Sample Data)는 애니에미션과 샘플 값 모음입니다. 
샘플 값이란 그 특정 애니메이션의 웨이트(weight, 가중치)를 결정하는 데 사용되는 것입니다. 
위의 방향성 이동을 예로 들면, 샘플 값이 (0.0, 250.0, 0.0) 인 **_Run_Fwd_** 애니메이션은, 
방향 입력이 0.0 이고 속력 입력이 250.0 일 때 최대로 블렌딩되었습니다.
[/EXCERPT:SampleData]

Sample Data 배열에 있는 각 항목에는 다음과 같은 프로퍼티가 들어있습니다:

| 프로퍼티 | 설명 |
| -------- | ---- |
| **Animation** | 애니메이션 - 블렌딩 대상 AnimationSequence 애셋입니다. |
| **Sample Value** | 샘플 값 - **Animation** 이 최대 영향력을 갖는 입력값 (블렌드 파라미터에 상응하는 X, Y) 입니다. |


## 애님 애셋 디테일

블렌드 스페이스 애셋 구성시 **페르소나** 의 **애님 애셋 디테일** 패널을 통해 설정할 수 있는 추가 옵션이 있습니다. 기본적으로 이 창은 페르소나 에디터의 **애니메이션** 탭 좌하단 구석에 있으며, 다음과 같은 프로퍼티가 있습니다:

![](BlendSpaceDetails.png)

### 블렌드 스페이스

|---|---|
|**Display Editor Vertically**| 에디터 세로 표시 - 1D 블렌드 스페이스 애셋에만 사용가능한 옵션으로, 블렌드 스페이스 그래프의 표시 방식을 세로 또는 가로로 토글시킵니다. |

### 입력 보간

|---|---|
|**Axis to Scale Animation**| 애니메이션 스케일 조절 축 - 1D 블렌드 스페이스 애셋에는 사용할 수 없는 옵션으로, (입력 보간이 있는 경우) 어느 축으로 애니메이션 속도 (스케일) 구동을 시킬지 결정합니다. 예를 들어 보행 애니메이션의 경우, 속력 축이 애니메이션 속도를 구동(시켜 스케일을 조절)시킬 것입니다. |
|**Interpolation Params**| 보간 파라미터 - 세 축 모두에 대한 입력 보간 파라미터는, 각 축 입력에 대해 '보간 시간'과 '보간 유형'을 설정하여 입력 보간 방식을 결정합니다. |

### 샘플 보간

|---|---|
|**Target Weight Interpolation Speed Per Sec**| 초당 타겟 위젯 보간 속도 - 타겟 샘플이 설정된 경우, 타겟으로의 보간 속도를 얼마나 빠르게 할지 설정하여 타겟 블렌딩을 향상시킵니다. 예를 들어 입력을 보간하는 경우, 왼쪽에서 오른쪽으로 빠르게 움직이면 전방을 통해 보간됩니다. 하지만 타겟 가중치 보간을 사용하면, 전방은 건너뛰고 좌우만 보간합니다. |
|**Per Bone Blend**| 본 별 블렌드 - 본 별 타겟 가중치 보간을 정의합니다. 각 본의 세팅별로 각기 다른 속도로 블렌드 인 됩니다. |

### 애니메이션 노티파이

|---|---|
|**Notify Trigger Mode**| 노티파이 트리거 모드 - 블렌드 스페이스에서 발동시킬 애니메이션 노티파이 결정을 위해 사용되는 현재 모드를 할당합니다. 그 옵션은 '모든 애니메이션' (모든 노티파이 이벤트 발동), '최고 가중치 애니메이션' (가중치가 최고인 애니메이션의 노티파이 이벤트만 발동), '없음' (어떤 애니메이션에서도 노티파이 이벤트가 발동되지 않음) 입니다. |

### 애디티브 세팅

|---|---|
|**Preview Base Pose**| 프리뷰 베이스 포즈 - 애디티브 블렌드 스페이스에 대한 프리뷰 베이스 포즈입니다. |

### 애니메이션

|---|---|
|**Skeleton**|스켈레톤 - 이 애셋을 재생시킬 수 있는 스켈레톤으로의 포인터입니다 (조정불가). |

### 메타 데이터

|---|---|
|**Meta Data**| 메타 데이터 - 애셋과 함께 저장할 수 있는 메타 데이터입니다. Meta Data 는 Anim Meta Data 클래스에서 파생된 Blueprintable 클래스입니다. 이를 통해 애니메이션 애셋 (애님 시퀀스, 애님 몽타주, 애님 컴포짓, 블렌드 스페이스 모두 지원) 에 커스텀 메타 데이터를 추가시킬 수 있습니다. 애니메이션 애셋에 있는 데이터 쿼리는 C++ 에서 `GetMetaData()` 메소드를 호출하거나, 애님 몽타주에서 `GetSectionMetaData()` 를 사용하면 됩니다. |

### 썸네일

|---|---|
|**Orbit Pitch**| 공전 핏치 - 애셋 주변을 공전하는 카메라의 핏치(상하) 입니다. |
|**Orbit Yaw**| 공전 요 - 애셋 주변을 공전하는 카메라의 요(좌우) 입니다. |
|**Orbit Zoom**| 공전 줌 - 애셋과의 바운드 구체 거리에 적용할 오프셋입니다. |





