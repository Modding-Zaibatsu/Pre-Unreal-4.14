INTSourceChangelist:3046164
Availability:Docs
Title: レベル ストリーミングの概要
Crumbs:%ROOT%, Engine, Engine/UI/LevelEditor
Description:ストリーミング レベルは、Level Streaming Volume あるいはブループリントまたは C++ でプログラム的にロードすることができます。
Version:4.12
parent:Engine/LevelStreaming
type:reference
order:1
tags:Level Streaming

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/LevelStreaming:title%](streaming_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/light_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/LevelStreaming:title%
	[/PARAM]
	[PARAM:description]
		%Engine/LevelStreaming:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/LevelStreaming]
	[/PARAM]
[/OBJECT]
[/VAR]
[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine/LevelStreaming:title%](streaming_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/light_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/LevelStreaming:title%
	[/PARAM]
	[PARAM:description]
		%Engine/LevelStreaming:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/LevelStreaming]
	[/PARAM]
[/OBJECT]
[/VAR]

[TOC]

[INCLUDE:Engine/LevelStreaming#intro]

## パーシスタント レベル

レベルをシームレスにブレンドするために、まず パーシスタント レベルを作成します。これは、ストリームインおよびストリーム アウトするレベルを管理するために 
主に使用するマスター レベルと考えることができます。 

## ストリーミング レベル

ストリーミング レベルは [**Levels** ウィンドウ](Engine/Levels/LevelsWindow) で管理します。パーシスタント レベルをオーバーラップしたり、オフセットしてより大きいワールドを作成することができます。ストリーミング レベルごとに、ストリーミング タイプに合わせて 
**[Always Loaded (常にロード)]** または **[Blueprint (ブループリント)]** に設定することができます。この設定は、サブレベルを右クリックして表示される **[Levels (レベル)]** ウィンドウで切り替えることができます。

ストリーミング レベルを **[Always Loaded (常にロード)]** に設定した場合、パーシスタント レベルも一緒にロードされます。同時にパーシスタント レベルとして表示もされます。 
ブループリントまたは C++ から送られたロード / アンロード要求、および割り当てられたストリーミング ボリュームを無視します。このタイプのサブレベルは、アーティスト同士が邪魔することなく同時に共同作業ができるように、 
通常はパーシスタント レベルで複数の「レイヤー」にするためにコンテンツの分割に使われることが多いです。このワークフローの詳細は、
[](Engine/Levels/CollaborateWithSublevels) をご覧ください。ゲームでは、ゲームがパーシスタント レベルを変更しない限り、**Always Loaded** サブレベルは決してストリーミングされません。 

**Blueprint** ストリーミング タイプのあるストリーミング レベルは実際、Level Streaming Volume、ブループリント、C++ コードで制御することができます。これらのレベルは、
動的にロード / アンロードすることができます。 


## Level Streaming Volume

**Level Streaming Volume** を使うと、レベル ストリーミングが非常に簡単にできるようになります。発想はシンプルです。ビューポートがレベルと関連づいている LevelStreamingVolume ボリューム内にあるかどうかによって、 
ストリーミング レベルに対するロード / アンロードのリクエストが発行されます。

具体的には、Level Streaming Volume は 2 通りの使い方があります。


* **ゲーム** では、Level Streaming Volumes を使って、レベルがプレイヤーがボリューム内にいる時にロードし、プレイヤーがボリュームの外にいる時にアンロードします。

* **エディタ** では、パースペクティブ ビューポート カメラの位置に合わせてレベルを自動的に表示 / 非表示にして、Level Streaming Volumes を使ってレベル ストリーミングをプレビューすることができます。


ボリューム ベースのレベル ストリーミングは使い方が簡単な上にスクリプト処理が必要ないので、レベル ストリーミングの制御には理想的です。さらに、ボリューム ベースはスクリプト処理に比べてはるかに管理が容易です。 
システムのロード要求が変化しても、ストリーミング ボリュームの大きさを変更すればレベルのロード / アンロード ビヘイビアを修正できます。

### Streaming Volume とレベルの関連づけ

ボリューム ベースのレベル ストリーミングは、以下のように使用します。各ストリーミング レベルは Level Streaming Volume と関連づけることができます。フレームごとに、エンジンは各レベルをイタレートし、 
プレイヤーの視点がそのレベルに関連づいている Level Streaming Volume 内にあるかを確認します。視点が少なくとも 1 つの LevelStreamingVolume 内にあれば、 
そのレベルのロード開始要求が発行されます。視点がすべての Level Streaming Volume の外にある場合、レベルはアンロードとしてマークされます。

* [](Engine/LevelStreaming/HowTo/StreamWithVolumes)

### 重要な詳細情報

* Streaming Volumes はすべてパーシスタント レベルに存在しなければなりません。他のレベルに存在する Level Streaming Volume は、レベル ストリーミングには使用することはできません。 
マップがエラー状態と判断されると警告が出されます。

* レベルに関連付けられたストリーミング ボリュームがある場合、その他のレベル ストリーミングの方法では正しく動作しません。

* たった 1 つの Level Streaming Volume でも複数のレベルに影響を与えることができます。同様に、たった 1 つのレベルでも複数の Level Streaming Volume から影響を受けることがあります。

* ボリューム ベースのストリーミングは分割画面で機能します。すべてのローカル プレイヤーの視点は、ロード / アンロードのリクエスト発行前に考慮されます。




### ストリーミング ボリューム設定をテストする

ボリューム ベースのレベル ストリーミングをターゲットとするプラットフォーム上のゲームでテストすることは非常に重要です。**Play in Editor** モード (PIE) でのストリーミングはロード / アンロードが行われる <i>場所</i> を示しますが、 
PIE でのストリーミングは、実際のインゲームでのロード / アンロードとは異なります。なぜなら、PIE ではレベルはすでにメモリ内にあるため、 
レベルを「ロードすること」はレベルの非表示を解除するだけの瞬間的な動作になります。

ターゲットとするプラットフォーム上のスタンドアローンでレベルを実行することは、ストリーミング設定がきちんと動作していることの確認をする上で非常に重要になります。プラットフォームが複数の場合は、 
レベル内のストリーム処理に数秒かかることがあることに留意してください。Level Streaming Volume を適切な大きさに調整して、プレイヤーの到達時までにレベルがロードされるようにします。レベル ロードのビヘイビアの修正は、 
レベルに関連付けられた Level Streaming Volume の大きさを変更して行います。ボリュームを大きくすると、関連付けられたレベルはロードが先でアンロードが後になります。 
逆にボリュームを小さくすると、ロードが後でアンロードが先に行われます。


### Level Streaming Volume を使ってプレビジュアル化をする

Level Streaming Volume 上に **Editor Pre Vis Only** フラグを設定すれば、Level Streaming Volume をエディタ プレビューのみとしてマークすることができます。こうすると、インゲーム ストリーミング用に別のメソッドを使いながら、 
ボリューム ベースのレベル ストリーミングを使ってエディタのプレビジュアル化ができます。


### レベル ストリーミング ボリュームの負荷

フレームごとに `UWorld::ProcessLevelStreamingVolumes` はそれぞれのストリーミング レベルをイタレートし、 
各レベルに関連付けられたボリュームのどれかにローカル プレイヤーがいる場合、そのレベルはロードを開始します。同様に、すべてのローカル プレイヤーがすべてのボリュームの外にいる場合、レベルはアンロードを開始します。

`UWorld::ProcessLevelStreamingVolumes` は次の方法で一貫性を利用します。レベルごとに、一番最後にプレイヤーが入ったボリュームをキャッシュします。キャッシュされたボリュームを最初にチェックして、 
プレイヤーが出入りするレベルをすぐに許可します。

ボリュームはどんな形状でも構いませんが、少ない方が良いことは確かです。Level Streaming Volume の負荷の上限は、 
アンロードされるレベルに関連付けられた Level Streaming Volume の合計と近似されます。

「Streaming」統計グループの中にある 2 種類の統計で、レベル ストリーミングのパフォーマンスをモニタリングすることができます。「Streaming Volumes」統計は、フレームごとにプレイヤー ビューポートに対してテストされた Level Streaming Volume 数を追跡します。 
「Volume Streaming Tick」統計はフレームごとに `UWorld::ProcessLevelStreamingVolumes` にかかった時間の合計を追跡します。



### ヒステリシスをロード リクエストに追加する

プレイヤーが Level Streaming Volume の境界を行ったり来たりすると、誤ったロード / アンロード リクエストを発行する原因となります。それを防ぐために、 
アンロード リスエストにヒステリシスを追加します。レベルをロードする必要がある時は常に緊急を要しているので、ロード リクエスト用のヒステリシスは存在していません。

アンロードされるヒステリシスの量は [レベル ウィンドウ](Engine/Levels/LevelsWindow) のストリーミング レベルの **Min Time Between Volume Unload Requests** プロパティを変更して調整することができます。 
ヒステリシスのアンロードはデフォルトで 2.0 秒です。



### Level Streaming Volume を無効にする

Level Streaming Volume には **bDisabled** と呼ばれるプロパティがあります。これを true に設定すると、ストリーミング ボリューム コードによって、インゲームとエディタ内の両方でボリュームが無視されます。 
**bDisabled** は、レベルとの関連付けを解除せずに Level Streaming Volume を無効にします。  

**bDisabled** フラグが便利なケースとしては、ストリーミング ボリュームでストリーミングを制御するレベルにドアがつながることを想像してください。ストリーミング ボリュームはドアを通り過ぎて左方向に延びるので、 
プレイヤーがドアに到達して開けるまでにレベルはストリームされます。ただし、最初はドアは鍵がかかっています。 
プレイヤーがレベルの別の個所でオブジェクトに到達すると鍵が解除されます。従って、ストリーミング ボリュームが伸びてドアを通りこしても、ドアの鍵が実際に解除される (「開けることができる状態」) までは、 
ドアの反対側のレベルはストリームインしたくありません。

ブループリントでも C++ でも、**Level Streaming Volumes** の無効ステートの切り替えができます。

## プログラム的なストリーミング レベル

レベルのロード / アンロードをより複雑な設定にしたい場合は、ドアを解除する上記の例と同様に、 
レベルのロード / アンロードに対してブループリントあるいは C++ ロジックを設定することができます。主要な機能は **Load Stream Level** と **Unload Stream Level** です。ロードするレベルを名前で使用します。例は、 
[](Engine/LevelStreaming/HowTo/StreamWithBlueprints) と [](Engine/LevelStreaming/HowTo/StreamWithC++) をご覧ください。 