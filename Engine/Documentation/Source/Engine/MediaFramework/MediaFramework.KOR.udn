INTSourceChangelist:2744667
Availability:Public
Title: 미디어 프레임워크
Crumbs:%ROOT%, Engine
Description:언리얼 엔진 4 의 Media Playback, 미디어 재생 함수성에 대한 개요입니다.
Related: Engine/Blueprints
Related: Engine/UMG
Related: Engine/Rendering/Materials
parent:Engine
order:12
Version: 4.9

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Engine/MediaFramework:title%](MediaFrameworkTopic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/start_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/MediaFramework:title%
	[/PARAM]
	[PARAM:description]
		%Engine/MediaFramework:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/MediaFramework]
	[/PARAM]
[/OBJECT]
[/VAR]
[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Engine/MediaFramework:title%](MediaFrameworkTopic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/start_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Engine/MediaFramework:title%
	[/PARAM]
	[PARAM:description]
		%Engine/MediaFramework:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Engine/MediaFramework]
	[/PARAM]
[/OBJECT]
[/VAR]

[REGION:fullwidth raw]
![](MediaBanner.png)(w:920)(convert:false)
[/REGION]

[TOC(start:2 end:2)]


현재 UE4 **MoviePlayer** 시스템이 있긴 하지만, 엔진 로드 도중 스타트업 무비 재생용으로만 사용 가능합니다. UI 요소의 일부라던가, TV 에서 재생되는 무비처럼 레벨에 있는 
스태틱 메시에서라든가, 게임내 무비 재생용으로는 사용할 수 없습니다. 그럴 때 **미디어 프레임워크** 가 필요합니다. 위의 두 가지 예제 모두 해결될 뿐만 아니라, 
일반적인 미디어 재생 관련된 능력을 훨씬 많이 제공해 주기도 하기 때문입니다 (자세한 내용은 아래와 같습니다).

언리얼 엔진 4 의 **미디어 프레임워크** 는...
* Engine & Slate Agnostic, 즉 여부를 가리지 않습니다.
* 현지화된 오디오 & 비디오 트랙 지원이 가능합니다.
* 콘텐츠 브라우저, 머티리얼 에디터, 사운드 시스템에서 접근 가능합니다.
* 블루프린트 & UMG UI 디자이너에서 사용 가능합니다.
* 스트리밍 미디어 지원이 가능합니다.
* 빨리 감기, 되돌리기, 재생, 일시정지, 스크러빙이 가능합니다.
* 플러그가능(Pluggable) 플레이어 지원이 가능합니다.

위에 언급한 대로, 미디어 프레임워크 자체가 Engine & Slate Agnostic, 즉 엔진이냐 슬레이트냐를 가리지 않습니다. 게임 엔진이나 에디터 뿐만 아니라 어떠한 어플리케이션에서든지 
사용 가능하다는 뜻입니다. **엔진**, **블루프린트**, **슬레이트**, **UMG UI 디자이너** 등등 다른 하위 시스템에 미디어 재생 기능을 제공하는 프레임워크 상부에 위치한 
레이어입니다. 그래서 게임내 텍스처 & UI, 에디터내 비디오 튜토리얼, 마켓플레이스 비디오 등 예상되는 거의 모든 곳에 사용 가능합니다.

[REGION:warning]
미디어 프레임워크는 아직 제작 단계에서 사용하기에는 이르며, 여전히 실험기능 단계입니다. 일부 기능이 예상대로 작동하지 않을 수 있으나 
현재 그러한 문제 해결 뿐만 아니라 기능 추가 및 지원을 위해서도 열심히 노력중입니다.
[/REGION]

## 미디어 프레임워크란

미디어 프레임워크란 크게 볼 때 C++ 인터페이스, 흔히 사용되는 경우에 대한 헬퍼 클래스 한 쌍, 소위 미디어 플레이어 플러그인이라는 것으로 확장 가능한 
미디어 플레이어 팩토리로 구성됩니다. 무비나 기타 미디어 파일 재생 관련 흥미로운 작업은 모두 플러그인에서 일어납니다.

[REGION:note]
프로그래머: 
* 미디어 프레임워크의 코드 위치는 다음과 같습니다: _/Engine/Source/Runtime/Media/_
* 기존 플레이어 플러그인 위치는 다음과 같습니다: _/Engine/Plugins/Media/_
[/REGION:note]

현재 내부적으로 Windows Media Foundation API 를 사용하는 윈도우용 플레이어 플러그인이 사용되고 있습니다. 애플의 AV Foundation 을 사용하는 MacOS 용 플러그인도 있습니다. 
현재 제약이 꽤 심하긴 하지만, iOS 에서는 정상 작동할 것입니다. 안드로이드용 플레이어 플러그인 작업도 시작되었습니다.

[REGION:warning]
윈도우 플러그인이 거의 완성 단계이긴 하지만, H.264 로 인코딩된 .mp4 파일처럼 특정 무비 포맷 관련 문제가 있습니다.
[/REGION]


## 미디어 애셋 유형 & 미디어 임포트

미디어 프레임워크 구현에는 **콘텐츠 브라우저** 에서 생성 가능한 애셋 유형 세 가지가 새로 추가되었습니다.

### 미디어 플레이어 애셋

**MediaPlayer**, 미디어 플레이어 애셋은 디스크의 무비 파일이나 인터넷의 스트리밍 미디어 URL 과 같은 미디어 소스에 대한 플레이어를 나타냅니다. 
언리얼 엔진 3 의 `UTextureMovie` 와는 달리 MediaPlayer 애셋에는 실제 데이터가 들어있지 않으며, 미디어 소스에 대한 경로 또는 URL 만 저장합니다.

미디어 플레이어 애셋을 만들 수 있는 방법은 여러가지 있습니다.

**미디어 플레이어 애셋 생성**

1. **생성** 버튼을 클릭한 다음, **기타** - **미디어 플레이어** 를 선택합니다.

	![](CreateMediaPlayerAsset.png)

[REGION:note]
**생성** 버튼 클릭 대신 **콘텐츠 브라우저** 의 **우클릭** 맥락 메뉴를 통해서도 가능합니다.
[/REGION]

1. 그러면 미디어 플레이어 애셋이 생성됩니다 (**더블클릭** 하여 여세요).

	![](MediaPlayerAsset.png)(w:720)

1. 미디어 플레이어 애셋 내부, **디테일** 패널에서 **탐색** 버튼을 클릭합니다.

	![](BrowseMediaPlayer.jpg)

1. 미디어 위치로 탐색하여 파일을 선택합니다.

	![](BrowseToMovie.png)

1. 추가되고난 후, 미디어 플레이어 안에서 **재생** 버튼을 누르면 미디어를 재생할 수 있습니다.

	![](MediaPlay.png)

1. **디테일** 패널 안에 보면, 경고 아이콘이 보일 수도 있습니다.

	![](EpicMovieMediaFrameWorkFile.jpg)

1. 올바른 패키징을 위해서는, 로컬 미디어 파일은 **반드시** 프로젝트의 **Content/Movies/** 디렉토리에 있어야 합니다.

	![](EpicMovieMediaFrameWorkWMV.jpg)

	프로젝트의 Content/Movies/ 폴더에 미디어를 넣고 나면, 경고 아이콘이 더이상 나타나지 않을 것입니다.
	
**드래그 앤 드롭을 통한 임포트**

미디어를 임포트하기 가장 쉬운 방법은, 드래그 앤 드롭 입니다.

1. 프로젝트의 **Content/Movies/** 폴더에 미디어가 있을 때, 그 미디어를 **콘텐츠 브라우저** 에 **드래그 앤 드롭** 합니다.

	![](DragAndDropMedia.png)

	그러면 자동으로 미디어 플레이어 애셋을 생성하고 그 위치에 할당됩니다.

#### 미디어 플레이어 애셋 디테일

미디어 플레이어 애셋은 다양한 콘텐츠 스트림을 출력할 수 있으며, 거기에는 오디오, 비디오, 자막이 포함됩니다. 재생 콘트롤 아래 미디어 창 상단을 따라 
위치한 드롭다운 메뉴에서 설정 가능합니다.

![](OutputStreams.png)

**디테일** 패널 안에서, 미디어 소스의 프로퍼티를 조사해 볼 수 있습니다.

![](EpicMovieMediaFrameWork.jpg)

**Playback** (재생) 옵션 아래, **Looping** (루핑) 체크박스를 체크하면 미디어가 끝까지 재생되었을 때 반복시킬 수 있습니다.

설정은 물론, 끝까지 재생된 이후 미디어 반복 재생 설정도 가능합니다.

**Source** (소스) 섹션의 경우, 미디어에 대한 경로를 로컬 또는 URL 을 통한 인터넷으로 지정 가능할 뿐만 아니라, Streaming Mode (스트리밍 모드) 설정도 가능합니다.

### 미디어 텍스처 애셋

**미디어 플레이어** 애셋을 만들고난 후, 거기서 **MediaTexture** (미디어 텍스처) 애셋을 만들면 비디오 스트림을 추출해 낼 수 있습니다. 
미디어 텍스처는 비디오 스트림을 (둘 이상 있을 경우) 선택하여 엔진 내 다른 텍스처와 마찬가지로 사용할 수 있도록 해 줍니다.

미디어 플레이어에서 미디어 텍스처를 생성하려면, 미디어 플레이어 애셋에 **우클릭** 한 다음 **미디어 텍스처 생성** 옵션을 선택하면 됩니다.

![](MediaTextureAsset.png)

그러면 미디어 텍스처 애셋이 생성됩니다.

![](MediaTextureCreated.png)

여기서 미디어 텍스처에 **우클릭** 한 다음 **머티리얼** 을 생성하면 엔진 내 다른 머티리얼처럼 사용할 수 있습니다.

![](CreateMaterial.png)

[REGION:note]
비디오가 텍스처에는 보이지 않고 미디어 애셋 에디터에만 재생된다면, 거의 비디오 트랙이 잘못 선택된 경우입니다. 고치려면, 미디어 텍스처에 **더블클릭** 하여 
텍스처 에디터를 연 다음, **디테일** 패널 MediaPlayer (미디어 플레이어) 아래에서 트랙을 선택하면 됩니다.

이렇게 해서 문제가 해결되지 않는 경우, 미디어 플레이어 애셋 안에서 **Auto Play** (자동 재생) 옵션을 체크하여 비디오가 텍스처 안에서 스트리밍되는지 확인해 봅니다. 
그렇게 해서 문제가 해결되면, 계속해서 **Auto Play** (자동 재생) 옵션을 사용하거나, **블루프린트** 를 통해 애셋을 재생하는 스크립트를 작성하면 됩니다 
(이 페이지의 [미디어 프레임워크와 블루프린트](#미디어프레임워크와블루프린트) 부분을 참고하세요).
[/REGION]

### 미디어 사운드 웨이브

**MediaSoundWave** (미디어 사운드 웨이브)는 다른 사운드 액터처럼 레벨에 배치할 수 있는 오디오 컴포넌트입니다. 하지만 미디어 플레이어 애셋에 의존하기 때문에, 
사운드 재생을 위해서는 (자동 재생 설정이 되어있지 않은 경우) 미디어 플레이어 애셋에 재생을 요청해야 합니다.

미디어 사운드 웨이브 생성은, 미디어 플레이어 애셋에 **우클릭** 한 다음 **미디어 사운드 웨이브 생성** 을 선택하면 됩니다.

![](MediaSoundWave.png)

[REGION:note]
미디어 사운드 웨이브는 아직 개발 극초기 단계입니다. 나중에 문서 업데이트가 있을 예정입니다.
[/REGION]

## 미디어 프레임워크와 텍스처 & 머티리얼

여기서는 미디어 프레임워크와 텍스처 & 머티리얼을 같이 사용하는 법을 빠르게 보여드리도록 하겠습니다.

### 텍스처

TV 에서 재생되는 미디어 텍스처 예제입니다. (클릭하면 재생)

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
IdX1gEH2i6c
[/PARAMLITERAL]
[/OBJECT]

_이 예제에서는 학습 탭에서 찾을 수 있는 **실사 렌더링** 프로젝트에서 **SM_TV** 애셋을 **이주** 해 왔습니다._

1. 이 페이지에 요약된 절차대로 원하는 비디오를 가지고 **미디어 플레이어** 와 **미디어 텍스처** 애셋을 만듭니다.

1. **미디어 플레이어** 애셋을 연 다음 **자동 재생** 설정을 합니다.

1. **Game/ArchVis/Materials** 폴더에 위치한 **M_TV** 머티리얼을 엽니다.

1. 미디어 텍스처를 **M_TV** 머티리얼에 끌어 놓은 다음 **ScreenColor** 노드 옆으로 이동시킵니다.

	![](Texture1.png)(w:800)

1. **ScreenColor** 노드를 삭제한 다음 텍스처를 **Lerp** 노드에 연결합니다.

1. **TextureCoordinate** 노드를 추가하여 Texture Sample 노드에 연결한 다음, 필요한 대로 **UTiling** 및 **VTiling** 을 조절합니다.

	![](Texture2.png)


### 머티리얼

머티리얼의 경우, **미디어 텍스처** 에서 **머티리얼** 을 만든 다음, 오브젝트에 머티리얼을 적용해 주기만 하면 됩니다.

![](MaterialsExample.png)

위에서 머티리얼을 레벨 안에 있는 기본 큐브에 적용했습니다. 미디어 플레이어 애셋에는 **자동 재생** 설정도 해 줬습니다.


## 미디어 프레임워크와 블루프린트

블루프린트를 통해 미디어 플레이어 애셋에 바로 접근하여 제어할 수도 있습니다. 이 예제에서는 미디어 텍스처가 적용된 TV 앞에 트리거를 설정해 뒀습니다. 
미디어 플레이어 애셋에는 **자동 재생** 설정이 되어있지 않습니다.

![](Blueprint1.png)

플레이어가 트리거에 들어서면, TV 에 적용된 미디어 텍스처를 재생하고, 트리거를 나서면 일시정지시킵니다. (클릭하면 재생)

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
nmb2Fj_5PjA
[/PARAMLITERAL]
[/OBJECT]

**레벨 블루프린트** 에서 다음과 같은 스크립트를 만들었습니다.

[REGION:lightbox]
[![](LevelBlueprintExample.png)(w:800)](levelBlueprintExample.png)
[/REGION:lightbox]

_클릭하면 원래 크기로 보입니다._

**MediaPlayer** 유형의 변수를 새로 만든 다음, 기본값에 우리 미디어 플레이어 애셋을 할당했습니다. 그런 다음 플레이어 캐릭터(MyCharacter)가 트리거 박스에 겹치면 
(변수에 할당된) 우리 미디어 플레이어 애셋을 **재생** 합니다.

플레이어 캐릭터가 트리거 볼륨을 나설때에 대해서도, **Pause** 노드를 사용했다는 것을 빼고는 같은 작업을 해 줬습니다. 또한 에디터에서 플레이 세션 종료 이후 
미디어 플레이어를 일시정지시키는 데도 **Event End Play** 노드가 사용되었습니다. 이는 미디어 플레이어 관련해서 사용할 수 있는 노드 중 단지 한 쌍에 불과하며, 
MediaPlayer 변수를 끌어 놔 보면 거기에 사용할 수 있는 여러가지 노드를 확인할 수 있습니다.

![](BlueprintActions.png)


## 미디어 프레임워크와 UMG

UI 의 일부분 또는 게임내 동영상 재생기같은 용도로 미디어 재생 기능이 필요한 경우 UMG 로 가능한데, **위젯 블루프린트** 를 만들어 (미디어 플레이어 애셋에서 생성된) 
미디어 텍스처에서 생성된 머티리얼을 할당하면 됩니다 

아래 셋업에서는 플레이어가 게임내에서 M 키를 누르면 동영상 재생기가 화면에 떠, 재생되는 비디오에 대한 재생, 일시정지, 
되감기 제어가 가능합니다. (클릭하면 재생)

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
HuF6btgkfxE
[/PARAMLITERAL]
[/OBJECT]

먼저 아래와 같이 [위젯 블루프린트](Engine\UMG\UserGuide\WidgetBlueprints) 를 만들었습니다.

![](WidgetBlueprint.png)

위젯 블루프린트 내 **Image** 의 경우, 미디어 텍스처를 사용하는 머티리얼을 할당했습니다.

![](BrushImage.png)

위젯 블루프린트의 그래프에는 비디오 재생, 되감기, 일시정지를 위해 놓은 버튼에 대한 명령들만 있습니다.

MediaPlayer 변수를 추가하고 사용하려는 미디어 플레이어 애셋을 할당하기도 했습니다.

![](WidgetBlueprint2.png)(w:840)

브러시에 머티리얼을 적용하기 위해서는, 살짝 바꿔 **이미시브** 로 설정해 줘야 합니다.

![](Material.png)

**레벨 블루프린트** 에서 플레이어가 자체 제작한 게임내 동영상 재생기를 켜고/끌 수 있도록 하는 스크립트를 작성했습니다.

[REGION:lightbox]
[![](LevelBlueprint.png)(w:840)](LevelBlueprint.png)
[/REGION:lightbox]

_클릭하면 원래 크기로 보입니다._

[REGION:note]
**Content Examples** 와 **UMG**, **Media** 맵에서 추가 예제를 찾을 수 있습니다.
[/REGION]








