INTSourceChangelist:0
Availability:Docs
Title: Rewind & Fast Forward Playback
Crumbs:%ROOT%, Engine
Description:Example of how you can control playback of your media assets.
parent:Engine/MediaFramework/HowTo
order:3
checkpoint: editorqs
Version: 4.13
SkillLevel: Intermediate
Related: Engine\MediaFramework

In addition to playing a video with Media Framework, you can grant players the ability to control the Playback Rate to rewind, pause or fast forward videos. 
In this how-to we allow the player to press a button to rewind, a different button to fast forward and another button to play a video playing in the level. 

[REGION:note]
For this how-to we are using the **Blueprint Third Person Template** project with **Starter Content** enabled.
You will also need a few [Supported Video Files](Engine\MediaFramework\TechReference) saved on our computer that you want to add to the playlist for playback. You can use your own or **Right-click** and download this [Sample Video](Infiltrator Demo.mp4). 
[/REGION]


## Steps

1.	In your project create a folder called **Movies**, then in explorer add your video to the **Movies** folder. 

	![](ControllingPlayback_01.png)

1.	Create a **File Media Source** (or any other source asset) and point the asset to your video. 

	![](ControllingPlayback_02.png)

1.	Create a **Media Player** asset called **VideoPlayer** and associated **Media Sound Wave** and **Media Texture** assets.

	![](ControllingPlayback_03.png)

1.	Inside the **Media Player** asset, uncheck the **Play on Open** option. 

	![](ControllingPlayback_04.png)

1.	In the **Content Browser** under **StarterContent/Shapes** drag a **Shape_Plane** into the level.  

	![](ControllingPlayback_05.png)

1.	Use the **Translate (W)**, **Rotation (E)** and **Scale (R)** tools to adjust the size and location of the Static Mesh as desired. 

1.	Hold **Ctrl** then select both the **Sound Wave** and **Media Texture** assets and drop them on top of the **Static Mesh** in the level. 

	![](ControllingPlayback_06.png)

	This will automatically create a **Material** and apply it to the Static Mesh. 

1.	From the Toolbar, click the **Blueprints** button and **Open Level Blueprint**. 

	![](ControllingPlayback_07.png)

1.	Add a **Variable** of the **Media Player Reference** type called **MediaPlayer** and set it to your **VideoPlayer** Media Player asset. 

	![](ControllingPlayback_08.png)

	You may need to **Compile** before you can assign the **Default Value**. 

1.	Add an **Event Begin Play** node, your **Media Player** variable and use **Open Source** to open the **MyVideo** File Media Source asset.

	![](ControllingPlayback_09.png)

1.	Add a **2** Keyboard Event with **Pressed** set to **Play** the **MediaPlayer** asset. 

	![](ControllingPlayback_10.png)

1.	Add **1** and **3** Keyboard Events both using **Set Rate** off the **MediaPlayer** asset and adjust each node's **Rate** value. 

	![](ControllingPlayback_11.png)

	By setting Rate to **-1.0** this will play the video in reverse while a Rate of **2.0** doubles the forward playback speed, scrubbing forward. 

	[REGION:warning]
	Currently you may experience audio synch loss when issuing commands to the Media Player asset. You can insert short delays between commands to allow the player has time to process them. We are aware of these issues and are investigating possible fixes to accompany future engine updates. 
	[/REGION]

1.	Close the **Level Blueprint** and click the **Play** button to play in the editor. 


## End Result

[OBJECT:EmbeddedVideo]
[PARAMLITERAL:width]
640
[/PARAMLITERAL]
[PARAMLITERAL:height]
360
[/PARAMLITERAL]
[PARAMLITERAL:videoid]
s6rTrV5-Mdo
[/PARAMLITERAL]
[/OBJECT]

When playing in the editor, the video playback will not initially start when the level is loaded. When the player presses the **2** key, the video will start playing. 
Pressing the **1** key, the video will start to rewind while pressing the **3** key fast forwards the video. 

The rate at which we rewind or fast forward is determined by the **Rate** value on the **Set Rate** node. Adjust those values to speed up the play back rate when going in reverse or forward. 

While our example is bound to keyboard presses, you could execute the same functionality within a User Interface built with UMG where the player clicks on a button to execute the same commands. 






