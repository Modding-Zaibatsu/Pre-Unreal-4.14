INTSourceChangelist:0
Availability:Docs
Title: Media Framework Overview
Crumbs:%ROOT%, Engine
Description:Overview of Media Framework functionality in Unreal Engine 4. 
Navigation:topic
parent:Engine/MediaFramework
order:2
Version: 4.13
Related: Engine\MediaFramework\TechReference
Related: Engine\MediaFramework\HowTo

[TOC(start:2 end:2)]

**Media Framework** uses several assets to allow the play back of video inside Unreal Engine 4. That video can be scrubbed, paused or rewound inside a **Media Player** asset as well as controlled through C++ or [](Engine/Blueprints). 
Whether you want a montior in your level playing a video or you want to create a UI based interface with [](Engine/UMG) to allow players control over your video playback, you will need to specify the **Media Source** (where to find the media) to allow the Media Player the ability to play the media back. 

## Media Source Types

There are several different Media Source assets that you can use to define where the media is coming from. 

![](MediaSource.png)

Inside the **Content Browser** click the **Add New** Button, then under **Media** select the desired source asset: 

[REGION:note]
Please see the [](Engine\MediaFramework\TechReference\) page for information on supported file types and URLs. 
[/REGION]

### File Media Source

![](MediaSource_File.png)

This type of asset is used for media files stored on your device or in a shared local network file. The **File Path** section is where you specify where the media file resides. 
While you can point to anywhere the file exists, however its typically a best practice to move your media files to the **Content/Movies** folder of your project and then point to the media file. 
This will ensure that your media is packaged correctly with your project (you will also see the yellow exclamation point when pointing to a file outside of this location as a warning). 

This type of source asset also allows you to load the entire media file into memory and play it from there by enabling the **Precache File** option. 
Based on the size of your file, caching time may vary so take that into consideration when choosing this option. 

Each of the source assets allow you to provide the name of the native media player with the **Default Player** field or leave it empty to find one automatically. 

[REGION:note]
Please see the [](Engine\MediaFramework\HowTo\FileMediaSource) how-to for working with File Media Source assets. 
[/REGION]

### Stream Media Source

![](MediaSource_Stream.png)

This asset allows you to specify a URL as the source of your media which is pulled from the internet. Currently linking to a YouTube or DailyMotion style URL is not supported and you will need to link directly to a hosted file, for example below is a link to a NASA test flight video: 

* http://s3.amazonaws.com/akamai.netstorage/mp4/AirSTAR.mp4

[REGION:note]
Please see the [](Engine\MediaFramework\HowTo\StreamMediaSource) how-to for working with Stream Media Source assets. 
[/REGION]

### Platform Media Source

![](MediaSource_Platform.png)

The Platform Media Source asset allows overriding Media Sources on a per-platform basis. You can specify the Media Source to be used if no source was specified for a target platform as well as define the Media Sources per platform. 


## Media Playlists

After creating a few Media Source assets, you can add them to a **Media Playlist** which will play the assigned assets back sequentially. 

![](MediaPlaylistButton.png)

Select **Media Playlist** from the **Add New** button under the **Media** section. 

![](CustomizedPlaylist.png)

In the **Playlist** section you can define the source assets to include and playback order. 
Any Media Source assets you have created will be displayed in the lower **Media Library** window which you can **Double-click** on to add to the end of the playlist. 

[REGION:note]
Please see the [](Engine\MediaFramework\HowTo\MediaPlaylists) how-to for working with Media Playlist assets. 
[/REGION]

## Media Sound Waves

In order to hear audio associated with a video, you will need to create a **Media Sound Wave** asset.  

![](MediaPlayerSound.png)

From the **Add New** button under **Media**, select the **Media Sound Wave** asset. 

![](MediaPlayerSoundWindow.png)

The Media Sound Wave asset provides Debug, Concurrency and Attenuation settings that can be adjusted to define how the asset is processed. 
When linked to a **Media Player** asset, audio attached to a video source will automatically play back along with the video. 
Typically you can leave the default settings for a newly created Media Sound Wave asset, however if you need more control over how the sound is perceived you can adjust the Concurrency and Attenuation settings. 

[REGION:note]
Please see the [](Engine/Audio) section for more details on working with audio in Unreal Engine 4. 
[/REGION]


## Media Textures

**Media Texture** assets are used for rendering video tracks from **Media Player** assets. 

![](MediaTexture.png)

While Media Sound Waves provide the audio, Media Textures provide the visuals from your media source assets. 
Media Texture assets can be included within [](Engine/Rendering/Materials/) that can then be applied to meshes in your level such as a billboard, TV or monitor to create the appearance as if the video is playing on that object within the game world. 

![](MediaTextureWindow.png)

Above, a Material including a Media Texture asset has been created and applied to a static mesh in the level. 
Inside the [Texture Editor](Engine/Content/Types/Textures/Properties/Interface) the Media Texture displays the same playback position as it appears in the Material in the level. 
In addition to the standard [](Engine/Content/Types/Textures/Properties), Media Textures allow you to define the X and Y Axis **Addressing** to either Clamped, Mirror or World values. 



## Media Player Assets

Once you have a Media Source or Media Playlist, you can playback the asset using a **Media Player** asset. 

![](MediaPlayer.png)

From the **Add New** button under **Media**, select the **Media Player** asset. 

The Media Player asset needs to have a **Media Sound Wave** and **Media Texture** assigned to it for it to properly play any video.
If you have not created one, when you create any new Media Player asset a dialogue window will appear asking if would like to create and automatically link those assets with the newly created Media Player asset. 

![](CreateMediaPlayer.png)

When opening a Media Player asset, the Media Player Window will appear. 

![](MediaPlayerWindow.png)

Inside the Media Player Window you can play back and preview any media source assets you have created (created source media are displayed the **Media Library** panel). 
You can play, pause, rewind or skip to the beginning or end of a video from the toolbar across the top. Any Media Playlists that are currently playing videos will be displayed in the upper right **Playlist** window. 

In the lower-right **Details** panel you can define options for **Playback** or assign the **Sound Wave** and **Video Textures** (or an **Image Texture**) associated with the Media Player. 
There is also an **Info** panel which will display info about the source such as the stream type, codecs, sample rate, dimensions and more. 


## Media Assets & Blueprints

After your Media Player asset is set up and linked with the appropriate assets, in order to play back the media during game play you will need to first **Open** the source asset through Blueprint or C++. 
Before you can do that however, you will need a reference to your Media Player asset which you can create a [Variable](Engine/Blueprints/UserGuide/Variables/) for inside any Blueprint. 

![](MediaPlayerDetailsSet.png)

With a reference to your Media Player defined, you can then call an **Open** function based on the type of media source. 

![](MediaPlayerOpen.png)

| Option | Description |
| -------- | ----------- |
| **Open Playlist** | Opens the first media source in the specified play list. |
| **Open Playlist Index** | Opens a specific media source within a specified play list. |
| **Open Source** | Opens the specified media source (File Media, Stream Media or Platform Media). |
| **Open URL** | Opens the specified media URL. |
| **Reopen** | Reopens the currently opened media or play list. |

Once you open the source you can then **Play** the media. Newly created Media Player assets have the **Play on Open** option enabled by default which means when you open a media source it will start playing the video automatically. 
If you uncheck the Play on Open option (pictured below), you will then need to call the **Play** function on a media source after it has been opened. 

![](UncheckPlayOnOpen.png)

Below on Event Begin Play we open a Media Playlist, however we only start play back when the **Right Mouse Button** is pressed. 

![](PlayWhenPressed.png)

You can call other functions from a Media Player reference such as [Binding Events](Engine/Blueprints/UserGuide/EventDispatcher/BindingAndUnbinding/) to various states of playback (such if the video is paused or if the video ends). 
You can also get or set options like if a video is playing or can play, if a video can loop, or play rate information. With a Media Player reference, you can drag off and see these options under the **Media Player** section of the Blueprint Context Menu. 

![](MediaPlayerNodes.png)








