Availability: Public
Title:1.2 - Nav Link Proxy
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/NavMesh
Description:An overview of the NavMesh example level, example 1.2: Nav Link Proxy.
Related: Engine/AI/BehaviorTrees/QuickStart
Related: Gameplay/AI
Related: Engine/AI/BehaviorTrees/NodeReference
Related: Engine/Actors/Volumes
Version: 4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Example](Resources/ContentExamples/NavMesh/1_1 "%Resources/ContentExamples/NavMesh/1_1:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Navmesh Home](Resources/ContentExamples/NavMesh)
	[/PARAM]
	[PARAM:next]
		[Next Example](Resources/ContentExamples/NavMesh/1_3 "%Resources/ContentExamples/NavMesh/1_3:title%")
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Resources\ContentExamples\NavMesh\1_2:title%](NavMesh_1_2_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/gameplay_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources\ContentExamples\NavMesh\1_2:title%
	[/PARAM]
	[PARAM:description]
		%Resources\ContentExamples\NavMesh\1_2:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources\ContentExamples\NavMesh\1_2]
	[/PARAM]
[/OBJECT]
[/VAR]
[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Resources\ContentExamples\NavMesh\1_2:title%](NavMesh_1_2_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/gameplay_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources\ContentExamples\NavMesh\1_2:title%
	[/PARAM]
	[PARAM:description]
		%Resources\ContentExamples\NavMesh\1_2:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources\ContentExamples\NavMesh\1_2]
	[/PARAM]
[/OBJECT]
[/VAR]

[REGION:fullwidth]
![](Resources\ContentExamples\NavMesh\NavMesh_banner.png)
[/REGION]

**NavLinkProxy** Actors are used to specify where Pawns can jump or drop off ledges, allowing them to temporarily leave the **NavMesh** in order to cross gaps in it. A start point and end point can be positioned, and will be treated as path nodes. In this example, the Pawn moves to the start point of the NavLinkProxy, then drops off the ramp to reach the end point, where it resumes navigating on the NavMesh towards its destination. This NavLinkProxy is set up to be one-way, so when the Pawn turns around to go back, it navigates around the ramp instead of trying to use the NavLinkProxy again.

[REGION:lightbox]
[![](NavMesh_1_2_001.png)(w:225)](NavMesh_1_2_001.png)
[![](NavMesh_1_2_002.png)(w:225)](NavMesh_1_2_002.png)
[![](NavMesh_1_2_003.png)(w:225)](NavMesh_1_2_003.png)
[![](NavMesh_1_2_004.png)(w:225)](NavMesh_1_2_004.png)
[/REGION]

Note that if the link is set to _BothWays_, the agent will attempt to walk through the wall and will fail at getting to its destination.

