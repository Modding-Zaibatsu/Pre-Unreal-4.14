Availability: Public
Title:1.5 - PhysicsConstraints
Crumbs:%ROOT%, Resources, Resources/ContentExamples, Resources/ContentExamples/Physics
Description:An overview of the Physics example level, example 1.5: PhysicsContraints
Related: Engine/Physics/PhysicsBodies
Related: Engine/Physics/PhAT/HowTo
Related: Engine/Physics/Constraints/ConstraintsReference
Related: Engine/Physics/Constraints/ConstraintsUserGuide
Related: Engine/Physics/Collision
Related: Engine/Physics/PhysicalMaterials/Reference
Version: 4.9

[VAR:Steps]
[OBJECT:Navigation]
	[PARAM:previous]
		[Previous Example](Resources/ContentExamples/Physics/1_4 "%Resources/ContentExamples/Physics/1_4:title%")
	[/PARAM]
	[PARAM:current]
	[/PARAM]
	[PARAM:home]
		[Physics Home](Resources/ContentExamples/Physics)
	[/PARAM]
	[PARAM:next]
		[Next Example](Resources/ContentExamples/Physics/1_6 "%Resources/ContentExamples/Physics/1_6:title%")
	[/PARAM]
[/OBJECT]
[/VAR]

%Steps%

[VAR:TopicCompact]
[OBJECT:TopicCompact]
	[PARAM:image]
		![%Resources\ContentExamples\Physics\1_5:title%](physics_1_5_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/physics_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources\ContentExamples\Physics\1_5:title%
	[/PARAM]
	[PARAM:description]
		%Resources\ContentExamples\Physics\1_5:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources\ContentExamples\Physics\1_5]
	[/PARAM]
[/OBJECT]
[/VAR]

[VAR:Topic]
[OBJECT:Topic]
	[PARAM:image]
		![%Resources\ContentExamples\Physics\1_5:title%](physics_1_5_topic.png)
	[/PARAM]
	[PARAM:icon]
		![](%ROOT%/physics_icon.png)(convert:false)
	[/PARAM]
	[PARAM:title]
		%Resources\ContentExamples\Physics\1_5:title%
	[/PARAM]
	[PARAM:description]
		%Resources\ContentExamples\Physics\1_5:description%
	[/PARAM]
	[PARAM:path]
		[RELATIVE:Resources\ContentExamples\Physics\1_5]
	[/PARAM]
[/OBJECT]
[/VAR]


[REGION:fullwidth]
	![](physics_1_5_001.png)
[/REGION]


A **Physics Constraint** is basically a type of joint. It allows you to connect two Actors together (presumably one physically simulating), and also apply limits or forces. Unreal Engine 4 
has a very flexible and data-driven constraint system that allows designers to make many different types of joints simply by changing some options. The engine has a few default 
joint types (ball-and-socket, hinge, prismatic) but they only differ in their settings. You should feel free to start with any joint type and experiment with making your own 
configurations.

In the content example, working from left to right:

1. Swings freely on its first axis, has a 45 degree limit on the 2nd, and is locked on the "twist" axis.

1. This cube is has a free motion on **Angular Swing 2Motion**, and locked on the others.

1. Free on **Twist**, locked on the others.

1. The last cube is free on all axes.






