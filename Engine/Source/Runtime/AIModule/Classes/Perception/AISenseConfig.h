// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.

#pragma once

#include "AIPerceptionTypes.h"
#include "AISenseConfig.generated.h"

class UAISenseImplementation;
class UCanvas;
class UAIPerceptionComponent;
class FGameplayDebuggerCategory;

UCLASS(ClassGroup = AI, abstract, EditInlineNew, config=Game)
class AIMODULE_API UAISenseConfig : public UObject
{
	GENERATED_BODY()

protected:
	UPROPERTY(EditAnywhere, BlueprintReadOnly, Category = Sense, AdvancedDisplay)
	FColor DebugColor;

	/** specifies age limit after stimuli generated by this sense become forgotten. 0 means "never" */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = Sense, meta = (ClampMin = "0.0", UIMin = "0.0"))
	float MaxAge;

	/** determines whether given sense starts in an enabled state */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = Sense)
	uint32 bStartsEnabled : 1;
	
	// name of sense
	mutable FString CachedSenseName;

public:
	UAISenseConfig(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get());

	virtual TSubclassOf<UAISense> GetSenseImplementation() const;

	FAISenseID GetSenseID() const;
	FString GetSenseName() const;
	FColor GetDebugColor() const { return DebugColor; }
	void SetMaxAge(const float NewMaxAge) { MaxAge = NewMaxAge; }
	float GetMaxAge() const { return MaxAge == 0.f ? FAIStimulus::NeverHappenedAge : MaxAge; }	
	bool IsEnabled() const { return bStartsEnabled; }

#if WITH_GAMEPLAY_DEBUGGER
	virtual void DescribeSelfToGameplayDebugger(const UAIPerceptionComponent* PerceptionComponent, FGameplayDebuggerCategory* DebuggerCategory) const;
#endif // WITH_GAMEPLAY_DEBUGGER
};
