#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tools.CrashReporter.CrashReportWebSite.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CrashReport")]
	public partial class CrashReportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBugg(Bugg instance);
    partial void UpdateBugg(Bugg instance);
    partial void DeleteBugg(Bugg instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertBuggs_Crash(Buggs_Crash instance);
    partial void UpdateBuggs_Crash(Buggs_Crash instance);
    partial void DeleteBuggs_Crash(Buggs_Crash instance);
    partial void InsertBuggs_UserGroup(Buggs_UserGroup instance);
    partial void UpdateBuggs_UserGroup(Buggs_UserGroup instance);
    partial void DeleteBuggs_UserGroup(Buggs_UserGroup instance);
    partial void InsertBuggs_User(Buggs_User instance);
    partial void UpdateBuggs_User(Buggs_User instance);
    partial void DeleteBuggs_User(Buggs_User instance);
    partial void InsertCrash(Crash instance);
    partial void UpdateCrash(Crash instance);
    partial void DeleteCrash(Crash instance);
    partial void InsertFunctionCall(FunctionCall instance);
    partial void UpdateFunctionCall(FunctionCall instance);
    partial void DeleteFunctionCall(FunctionCall instance);
    partial void InsertUserGroup(UserGroup instance);
    partial void UpdateUserGroup(UserGroup instance);
    partial void DeleteUserGroup(UserGroup instance);
    partial void InsertUsersMapping(UsersMapping instance);
    partial void UpdateUsersMapping(UsersMapping instance);
    partial void DeleteUsersMapping(UsersMapping instance);
    partial void InsertCallStackPattern(CallStackPattern instance);
    partial void UpdateCallStackPattern(CallStackPattern instance);
    partial void DeleteCallStackPattern(CallStackPattern instance);
    #endregion
		
		public CrashReportDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CrashReportConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CrashReportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bugg> Buggs
		{
			get
			{
				return this.GetTable<Bugg>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Buggs_Crash> Buggs_Crashes
		{
			get
			{
				return this.GetTable<Buggs_Crash>();
			}
		}
		
		public System.Data.Linq.Table<Buggs_UserGroup> Buggs_UserGroups
		{
			get
			{
				return this.GetTable<Buggs_UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<Buggs_User> Buggs_Users
		{
			get
			{
				return this.GetTable<Buggs_User>();
			}
		}
		
		public System.Data.Linq.Table<Crash> Crashes
		{
			get
			{
				return this.GetTable<Crash>();
			}
		}
		
		public System.Data.Linq.Table<FunctionCall> FunctionCalls
		{
			get
			{
				return this.GetTable<FunctionCall>();
			}
		}
		
		public System.Data.Linq.Table<UserGroup> UserGroups
		{
			get
			{
				return this.GetTable<UserGroup>();
			}
		}
		
		public System.Data.Linq.Table<UsersMapping> UsersMappings
		{
			get
			{
				return this.GetTable<UsersMapping>();
			}
		}
		
		public System.Data.Linq.Table<CallStackPattern> CallStackPatterns
		{
			get
			{
				return this.GetTable<CallStackPattern>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs")]
	public partial class Bugg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TTPID;
		
		private string _Pattern;
		
		private System.Nullable<int> _NumberOfCrashes;
		
		private System.Nullable<int> _NumberOfUsers;
		
		private System.Nullable<System.DateTime> _TimeOfFirstCrash;
		
		private System.Nullable<System.DateTime> _TimeOfLastCrash;
		
		private string _Status;
		
		private string _FixedChangeList;
		
		private string _BuildVersion;
		
		private System.Nullable<short> _CrashType;
		
		private EntitySet<Buggs_Crash> _Buggs_Crashes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnJiraChanging(string value);
    partial void OnJiraChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    partial void OnNumberOfCrashesChanging(System.Nullable<int> value);
    partial void OnNumberOfCrashesChanged();
    partial void OnNumberOfUsersChanging(System.Nullable<int> value);
    partial void OnNumberOfUsersChanged();
    partial void OnTimeOfFirstCrashChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfFirstCrashChanged();
    partial void OnTimeOfLastCrashChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfLastCrashChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnFixedChangeListChanging(string value);
    partial void OnFixedChangeListChanged();
    partial void OnBuildVersionChanging(string value);
    partial void OnBuildVersionChanged();
    partial void OnCrashTypeChanging(System.Nullable<short> value);
    partial void OnCrashTypeChanged();
    #endregion
		
		public Bugg()
		{
			this._Buggs_Crashes = new EntitySet<Buggs_Crash>(new Action<Buggs_Crash>(this.attach_Buggs_Crashes), new Action<Buggs_Crash>(this.detach_Buggs_Crashes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TTPID", Storage="_TTPID", DbType="VarChar(50)")]
		public string Jira
		{
			get
			{
				return this._TTPID;
			}
			set
			{
				if ((this._TTPID != value))
				{
					this.OnJiraChanging(value);
					this.SendPropertyChanging();
					this._TTPID = value;
					this.SendPropertyChanged("Jira");
					this.OnJiraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="VarChar(800) NOT NULL", CanBeNull=false)]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfCrashes", DbType="Int")]
		public System.Nullable<int> NumberOfCrashes
		{
			get
			{
				return this._NumberOfCrashes;
			}
			set
			{
				if ((this._NumberOfCrashes != value))
				{
					this.OnNumberOfCrashesChanging(value);
					this.SendPropertyChanging();
					this._NumberOfCrashes = value;
					this.SendPropertyChanged("NumberOfCrashes");
					this.OnNumberOfCrashesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfUsers", DbType="Int")]
		public System.Nullable<int> NumberOfUsers
		{
			get
			{
				return this._NumberOfUsers;
			}
			set
			{
				if ((this._NumberOfUsers != value))
				{
					this.OnNumberOfUsersChanging(value);
					this.SendPropertyChanging();
					this._NumberOfUsers = value;
					this.SendPropertyChanged("NumberOfUsers");
					this.OnNumberOfUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfFirstCrash", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfFirstCrash
		{
			get
			{
				return this._TimeOfFirstCrash;
			}
			set
			{
				if ((this._TimeOfFirstCrash != value))
				{
					this.OnTimeOfFirstCrashChanging(value);
					this.SendPropertyChanging();
					this._TimeOfFirstCrash = value;
					this.SendPropertyChanged("TimeOfFirstCrash");
					this.OnTimeOfFirstCrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfLastCrash", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfLastCrash
		{
			get
			{
				return this._TimeOfLastCrash;
			}
			set
			{
				if ((this._TimeOfLastCrash != value))
				{
					this.OnTimeOfLastCrashChanging(value);
					this.SendPropertyChanging();
					this._TimeOfLastCrash = value;
					this.SendPropertyChanged("TimeOfLastCrash");
					this.OnTimeOfLastCrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedChangeList", DbType="VarChar(50)")]
		public string FixedChangeList
		{
			get
			{
				return this._FixedChangeList;
			}
			set
			{
				if ((this._FixedChangeList != value))
				{
					this.OnFixedChangeListChanging(value);
					this.SendPropertyChanging();
					this._FixedChangeList = value;
					this.SendPropertyChanged("FixedChangeList");
					this.OnFixedChangeListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildVersion", DbType="VarChar(64)")]
		public string BuildVersion
		{
			get
			{
				return this._BuildVersion;
			}
			set
			{
				if ((this._BuildVersion != value))
				{
					this.OnBuildVersionChanging(value);
					this.SendPropertyChanging();
					this._BuildVersion = value;
					this.SendPropertyChanged("BuildVersion");
					this.OnBuildVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrashType", DbType="SmallInt")]
		public System.Nullable<short> CrashType
		{
			get
			{
				return this._CrashType;
			}
			set
			{
				if ((this._CrashType != value))
				{
					this.OnCrashTypeChanging(value);
					this.SendPropertyChanging();
					this._CrashType = value;
					this.SendPropertyChanged("CrashType");
					this.OnCrashTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Buggs_Crash", Storage="_Buggs_Crashes", ThisKey="Id", OtherKey="BuggId")]
		public EntitySet<Buggs_Crash> Buggs_Crashes
		{
			get
			{
				return this._Buggs_Crashes;
			}
			set
			{
				this._Buggs_Crashes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buggs_Crashes(Buggs_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = this;
		}
		
		private void detach_Buggs_Crashes(Buggs_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Bugg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserName;
		
		private int _UserGroupId;
		
		private EntitySet<Buggs_User> _Buggs_Users;
		
		private EntitySet<Crash> _Crashes;
		
		private EntityRef<UserGroup> _UserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserGroupIdChanging(int value);
    partial void OnUserGroupIdChanged();
    #endregion
		
		public User()
		{
			this._Buggs_Users = new EntitySet<Buggs_User>(new Action<Buggs_User>(this.attach_Buggs_Users), new Action<Buggs_User>(this.detach_Buggs_Users));
			this._Crashes = new EntitySet<Crash>(new Action<Crash>(this.attach_Crashes), new Action<Crash>(this.detach_Crashes));
			this._UserGroup = default(EntityRef<UserGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupId", DbType="Int NOT NULL")]
		public int UserGroupId
		{
			get
			{
				return this._UserGroupId;
			}
			set
			{
				if ((this._UserGroupId != value))
				{
					if (this._UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._UserGroupId = value;
					this.SendPropertyChanged("UserGroupId");
					this.OnUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Buggs_User", Storage="_Buggs_Users", ThisKey="Id", OtherKey="UserNameId")]
		public EntitySet<Buggs_User> Buggs_Users
		{
			get
			{
				return this._Buggs_Users;
			}
			set
			{
				this._Buggs_Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Crash", Storage="_Crashes", ThisKey="Id", OtherKey="UserNameId")]
		public EntitySet<Crash> CrashesFromUserId
		{
			get
			{
				return this._Crashes;
			}
			set
			{
				this._Crashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_User", Storage="_UserGroup", ThisKey="UserGroupId", OtherKey="Id", IsForeignKey=true)]
		public UserGroup UserGroup
		{
			get
			{
				return this._UserGroup.Entity;
			}
			set
			{
				UserGroup previousValue = this._UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserGroup.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserGroup.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._UserGroupId = value.Id;
					}
					else
					{
						this._UserGroupId = default(int);
					}
					this.SendPropertyChanged("UserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buggs_Users(Buggs_User entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Buggs_Users(Buggs_User entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Crashes(Crash entity)
		{
			this.SendPropertyChanging();
			entity.UserById = this;
		}
		
		private void detach_Crashes(Crash entity)
		{
			this.SendPropertyChanging();
			entity.UserById = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs_Crashes")]
	public partial class Buggs_Crash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuggId;
		
		private int _CrashId;
		
		private EntityRef<Crash> _Crash;
		
		private EntityRef<Bugg> _Bugg;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuggIdChanging(int value);
    partial void OnBuggIdChanged();
    partial void OnCrashIdChanging(int value);
    partial void OnCrashIdChanged();
    #endregion
		
		public Buggs_Crash()
		{
			this._Crash = default(EntityRef<Crash>);
			this._Bugg = default(EntityRef<Bugg>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					if (this._Bugg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrashId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CrashId
		{
			get
			{
				return this._CrashId;
			}
			set
			{
				if ((this._CrashId != value))
				{
					if (this._Crash.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCrashIdChanging(value);
					this.SendPropertyChanging();
					this._CrashId = value;
					this.SendPropertyChanged("CrashId");
					this.OnCrashIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Buggs_Crash", Storage="_Crash", ThisKey="CrashId", OtherKey="Id", IsForeignKey=true)]
		public Crash Crash
		{
			get
			{
				return this._Crash.Entity;
			}
			set
			{
				Crash previousValue = this._Crash.Entity;
				if (((previousValue != value) 
							|| (this._Crash.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Crash.Entity = null;
						previousValue.Buggs_Crashes.Remove(this);
					}
					this._Crash.Entity = value;
					if ((value != null))
					{
						value.Buggs_Crashes.Add(this);
						this._CrashId = value.Id;
					}
					else
					{
						this._CrashId = default(int);
					}
					this.SendPropertyChanged("Crash");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bugg_Buggs_Crash", Storage="_Bugg", ThisKey="BuggId", OtherKey="Id", IsForeignKey=true)]
		public Bugg Bugg
		{
			get
			{
				return this._Bugg.Entity;
			}
			set
			{
				Bugg previousValue = this._Bugg.Entity;
				if (((previousValue != value) 
							|| (this._Bugg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bugg.Entity = null;
						previousValue.Buggs_Crashes.Remove(this);
					}
					this._Bugg.Entity = value;
					if ((value != null))
					{
						value.Buggs_Crashes.Add(this);
						this._BuggId = value.Id;
					}
					else
					{
						this._BuggId = default(int);
					}
					this.SendPropertyChanged("Bugg");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs_UserGroups")]
	public partial class Buggs_UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuggId;
		
		private int _UserGroupId;
		
		private EntityRef<UserGroup> _UserGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuggIdChanging(int value);
    partial void OnBuggIdChanged();
    partial void OnUserGroupIdChanging(int value);
    partial void OnUserGroupIdChanged();
    #endregion
		
		public Buggs_UserGroup()
		{
			this._UserGroup = default(EntityRef<UserGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserGroupId
		{
			get
			{
				return this._UserGroupId;
			}
			set
			{
				if ((this._UserGroupId != value))
				{
					if (this._UserGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserGroupIdChanging(value);
					this.SendPropertyChanging();
					this._UserGroupId = value;
					this.SendPropertyChanged("UserGroupId");
					this.OnUserGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_Buggs_UserGroup", Storage="_UserGroup", ThisKey="UserGroupId", OtherKey="Id", IsForeignKey=true)]
		public UserGroup UserGroup
		{
			get
			{
				return this._UserGroup.Entity;
			}
			set
			{
				UserGroup previousValue = this._UserGroup.Entity;
				if (((previousValue != value) 
							|| (this._UserGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserGroup.Entity = null;
						previousValue.Buggs_UserGroups.Remove(this);
					}
					this._UserGroup.Entity = value;
					if ((value != null))
					{
						value.Buggs_UserGroups.Add(this);
						this._UserGroupId = value.Id;
					}
					else
					{
						this._UserGroupId = default(int);
					}
					this.SendPropertyChanged("UserGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Buggs_Users")]
	public partial class Buggs_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BuggId;
		
		private string _UserName;
		
		private System.Nullable<int> _UserNameId;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBuggIdChanging(int value);
    partial void OnBuggIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserNameIdChanging(System.Nullable<int> value);
    partial void OnUserNameIdChanged();
    #endregion
		
		public Buggs_User()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuggId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BuggId
		{
			get
			{
				return this._BuggId;
			}
			set
			{
				if ((this._BuggId != value))
				{
					this.OnBuggIdChanging(value);
					this.SendPropertyChanging();
					this._BuggId = value;
					this.SendPropertyChanged("BuggId");
					this.OnBuggIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNameId", DbType="Int")]
		public System.Nullable<int> UserNameId
		{
			get
			{
				return this._UserNameId;
			}
			set
			{
				if ((this._UserNameId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameIdChanging(value);
					this.SendPropertyChanging();
					this._UserNameId = value;
					this.SendPropertyChanged("UserNameId");
					this.OnUserNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Buggs_User", Storage="_User", ThisKey="UserNameId", OtherKey="Id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Buggs_Users.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Buggs_Users.Add(this);
						this._UserNameId = value.Id;
					}
					else
					{
						this._UserNameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Crashes")]
	public partial class Crash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Summary;
		
		private string _GameName;
		
		private string _Status;
		
		private System.Nullable<System.DateTime> _TimeOfCrash;
		
		private string _ChangeListVersion;
		
		private string _PlatformName;
		
		private string _EngineMode;
		
		private string _Description;
		
		private string _RawCallStack;
		
		private string _Pattern;
		
		private string _CommandLine;
		
		private string _ComputerName;
		
		private string _FixedChangeList;
		
		private string _LanguageExt;
		
		private string _Module;
		
		private string _BuildVersion;
		
		private string _BaseDir;
		
		private string _UserName;
		
		private string _TTPID;
		
		private System.Nullable<bool> _Processed;
		
		private string _Branch;
		
		private System.Nullable<int> _UserNameId;
		
		private System.Nullable<short> _CrashType;
		
		private string _SourceContext;
		
		private string _EpicAccountId;
		
		private string _EngineVersion;
		
		private string _UserActivityHint;
		
		private System.Nullable<int> _PatternId;
		
		private EntitySet<Buggs_Crash> _Buggs_Crashes;
		
		private EntityRef<User> _User;
		
		private EntityRef<CallStackPattern> _CallStackPattern;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnGameNameChanging(string value);
    partial void OnGameNameChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnTimeOfCrashChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeOfCrashChanged();
    partial void OnBuiltFromCLChanging(string value);
    partial void OnBuiltFromCLChanged();
    partial void OnPlatformNameChanging(string value);
    partial void OnPlatformNameChanged();
    partial void OnEngineModeChanging(string value);
    partial void OnEngineModeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRawCallStackChanging(string value);
    partial void OnRawCallStackChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    partial void OnCommandLineChanging(string value);
    partial void OnCommandLineChanged();
    partial void OnMachineIdChanging(string value);
    partial void OnMachineIdChanged();
    partial void OnFixedChangeListChanging(string value);
    partial void OnFixedChangeListChanged();
    partial void OnLanguageExtChanging(string value);
    partial void OnLanguageExtChanged();
    partial void OnModuleChanging(string value);
    partial void OnModuleChanged();
    partial void OnBuildVersionChanging(string value);
    partial void OnBuildVersionChanged();
    partial void OnBaseDirChanging(string value);
    partial void OnBaseDirChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnJiraChanging(string value);
    partial void OnJiraChanged();
    partial void OnbAllowToBeContactedChanging(System.Nullable<bool> value);
    partial void OnbAllowToBeContactedChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnUserNameIdChanging(System.Nullable<int> value);
    partial void OnUserNameIdChanged();
    partial void OnCrashTypeChanging(System.Nullable<short> value);
    partial void OnCrashTypeChanged();
    partial void OnSourceContextChanging(string value);
    partial void OnSourceContextChanged();
    partial void OnEpicAccountIdChanging(string value);
    partial void OnEpicAccountIdChanged();
    partial void OnEngineVersionChanging(string value);
    partial void OnEngineVersionChanged();
    partial void OnUserActivityHintChanging(string value);
    partial void OnUserActivityHintChanged();
    partial void OnPatternIdChanging(System.Nullable<int> value);
    partial void OnPatternIdChanged();
    #endregion
		
		public Crash()
		{
			this._Buggs_Crashes = new EntitySet<Buggs_Crash>(new Action<Buggs_Crash>(this.attach_Buggs_Crashes), new Action<Buggs_Crash>(this.detach_Buggs_Crashes));
			this._User = default(EntityRef<User>);
			this._CallStackPattern = default(EntityRef<CallStackPattern>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="VarChar(512)")]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameName", DbType="VarChar(64)")]
		public string GameName
		{
			get
			{
				return this._GameName;
			}
			set
			{
				if ((this._GameName != value))
				{
					this.OnGameNameChanging(value);
					this.SendPropertyChanging();
					this._GameName = value;
					this.SendPropertyChanged("GameName");
					this.OnGameNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(64)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfCrash", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeOfCrash
		{
			get
			{
				return this._TimeOfCrash;
			}
			set
			{
				if ((this._TimeOfCrash != value))
				{
					this.OnTimeOfCrashChanging(value);
					this.SendPropertyChanging();
					this._TimeOfCrash = value;
					this.SendPropertyChanged("TimeOfCrash");
					this.OnTimeOfCrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChangeListVersion", Storage="_ChangeListVersion", DbType="VarChar(64)")]
		public string BuiltFromCL
		{
			get
			{
				return this._ChangeListVersion;
			}
			set
			{
				if ((this._ChangeListVersion != value))
				{
					this.OnBuiltFromCLChanging(value);
					this.SendPropertyChanging();
					this._ChangeListVersion = value;
					this.SendPropertyChanged("BuiltFromCL");
					this.OnBuiltFromCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformName", DbType="VarChar(64)")]
		public string PlatformName
		{
			get
			{
				return this._PlatformName;
			}
			set
			{
				if ((this._PlatformName != value))
				{
					this.OnPlatformNameChanging(value);
					this.SendPropertyChanging();
					this._PlatformName = value;
					this.SendPropertyChanged("PlatformName");
					this.OnPlatformNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineMode", DbType="VarChar(64)")]
		public string EngineMode
		{
			get
			{
				return this._EngineMode;
			}
			set
			{
				if ((this._EngineMode != value))
				{
					this.OnEngineModeChanging(value);
					this.SendPropertyChanging();
					this._EngineMode = value;
					this.SendPropertyChanged("EngineMode");
					this.OnEngineModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(512)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawCallStack", DbType="VarChar(MAX)")]
		public string RawCallStack
		{
			get
			{
				return this._RawCallStack;
			}
			set
			{
				if ((this._RawCallStack != value))
				{
					this.OnRawCallStackChanging(value);
					this.SendPropertyChanging();
					this._RawCallStack = value;
					this.SendPropertyChanged("RawCallStack");
					this.OnRawCallStackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="VarChar(800)")]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandLine", DbType="VarChar(512)")]
		public string CommandLine
		{
			get
			{
				return this._CommandLine;
			}
			set
			{
				if ((this._CommandLine != value))
				{
					this.OnCommandLineChanging(value);
					this.SendPropertyChanging();
					this._CommandLine = value;
					this.SendPropertyChanged("CommandLine");
					this.OnCommandLineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ComputerName", Storage="_ComputerName", DbType="VarChar(64)")]
		public string MachineId
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnMachineIdChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("MachineId");
					this.OnMachineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedChangeList", DbType="VarChar(256)")]
		public string FixedChangeList
		{
			get
			{
				return this._FixedChangeList;
			}
			set
			{
				if ((this._FixedChangeList != value))
				{
					this.OnFixedChangeListChanging(value);
					this.SendPropertyChanging();
					this._FixedChangeList = value;
					this.SendPropertyChanged("FixedChangeList");
					this.OnFixedChangeListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageExt", DbType="VarChar(64)")]
		public string LanguageExt
		{
			get
			{
				return this._LanguageExt;
			}
			set
			{
				if ((this._LanguageExt != value))
				{
					this.OnLanguageExtChanging(value);
					this.SendPropertyChanging();
					this._LanguageExt = value;
					this.SendPropertyChanged("LanguageExt");
					this.OnLanguageExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="VarChar(128)")]
		public string Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this.OnModuleChanging(value);
					this.SendPropertyChanging();
					this._Module = value;
					this.SendPropertyChanged("Module");
					this.OnModuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildVersion", DbType="VarChar(128)")]
		public string BuildVersion
		{
			get
			{
				return this._BuildVersion;
			}
			set
			{
				if ((this._BuildVersion != value))
				{
					this.OnBuildVersionChanging(value);
					this.SendPropertyChanging();
					this._BuildVersion = value;
					this.SendPropertyChanged("BuildVersion");
					this.OnBuildVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseDir", DbType="VarChar(512)")]
		public string BaseDir
		{
			get
			{
				return this._BaseDir;
			}
			set
			{
				if ((this._BaseDir != value))
				{
					this.OnBaseDirChanging(value);
					this.SendPropertyChanging();
					this._BaseDir = value;
					this.SendPropertyChanged("BaseDir");
					this.OnBaseDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(64)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TTPID", Storage="_TTPID", DbType="VarChar(64)")]
		public string Jira
		{
			get
			{
				return this._TTPID;
			}
			set
			{
				if ((this._TTPID != value))
				{
					this.OnJiraChanging(value);
					this.SendPropertyChanging();
					this._TTPID = value;
					this.SendPropertyChanged("Jira");
					this.OnJiraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Processed", Storage="_Processed", DbType="Bit")]
		public System.Nullable<bool> bAllowToBeContacted
		{
			get
			{
				return this._Processed;
			}
			set
			{
				if ((this._Processed != value))
				{
					this.OnbAllowToBeContactedChanging(value);
					this.SendPropertyChanging();
					this._Processed = value;
					this.SendPropertyChanged("bAllowToBeContacted");
					this.OnbAllowToBeContactedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="VarChar(32)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNameId", DbType="Int")]
		public System.Nullable<int> UserNameId
		{
			get
			{
				return this._UserNameId;
			}
			set
			{
				if ((this._UserNameId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserNameIdChanging(value);
					this.SendPropertyChanging();
					this._UserNameId = value;
					this.SendPropertyChanged("UserNameId");
					this.OnUserNameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CrashType", DbType="SmallInt")]
		public System.Nullable<short> CrashType
		{
			get
			{
				return this._CrashType;
			}
			set
			{
				if ((this._CrashType != value))
				{
					this.OnCrashTypeChanging(value);
					this.SendPropertyChanging();
					this._CrashType = value;
					this.SendPropertyChanged("CrashType");
					this.OnCrashTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceContext", DbType="VarChar(MAX)")]
		public string SourceContext
		{
			get
			{
				return this._SourceContext;
			}
			set
			{
				if ((this._SourceContext != value))
				{
					this.OnSourceContextChanging(value);
					this.SendPropertyChanging();
					this._SourceContext = value;
					this.SendPropertyChanged("SourceContext");
					this.OnSourceContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EpicAccountId", DbType="varchar(64)")]
		public string EpicAccountId
		{
			get
			{
				return this._EpicAccountId;
			}
			set
			{
				if ((this._EpicAccountId != value))
				{
					this.OnEpicAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EpicAccountId = value;
					this.SendPropertyChanged("EpicAccountId");
					this.OnEpicAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineVersion", DbType="varchar(64)")]
		public string EngineVersion
		{
			get
			{
				return this._EngineVersion;
			}
			set
			{
				if ((this._EngineVersion != value))
				{
					this.OnEngineVersionChanging(value);
					this.SendPropertyChanging();
					this._EngineVersion = value;
					this.SendPropertyChanged("EngineVersion");
					this.OnEngineVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActivityHint", DbType="VarChar(512)")]
		public string UserActivityHint
		{
			get
			{
				return this._UserActivityHint;
			}
			set
			{
				if ((this._UserActivityHint != value))
				{
					this.OnUserActivityHintChanging(value);
					this.SendPropertyChanging();
					this._UserActivityHint = value;
					this.SendPropertyChanged("UserActivityHint");
					this.OnUserActivityHintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatternId", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> PatternId
		{
			get
			{
				return this._PatternId;
			}
			set
			{
				if ((this._PatternId != value))
				{
					if (this._CallStackPattern.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPatternIdChanging(value);
					this.SendPropertyChanging();
					this._PatternId = value;
					this.SendPropertyChanged("PatternId");
					this.OnPatternIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Crash_Buggs_Crash", Storage="_Buggs_Crashes", ThisKey="Id", OtherKey="CrashId")]
		public EntitySet<Buggs_Crash> Buggs_Crashes
		{
			get
			{
				return this._Buggs_Crashes;
			}
			set
			{
				this._Buggs_Crashes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Crash", Storage="_User", ThisKey="UserNameId", OtherKey="Id", IsForeignKey=true)]
		public User UserById
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.CrashesFromUserId.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.CrashesFromUserId.Add(this);
						this._UserNameId = value.Id;
					}
					else
					{
						this._UserNameId = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserById");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallStackPattern_Crash", Storage="_CallStackPattern", ThisKey="PatternId", OtherKey="id", IsForeignKey=true)]
		public CallStackPattern CallStackPattern
		{
			get
			{
				return this._CallStackPattern.Entity;
			}
			set
			{
				CallStackPattern previousValue = this._CallStackPattern.Entity;
				if (((previousValue != value) 
							|| (this._CallStackPattern.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CallStackPattern.Entity = null;
						previousValue.Crashes.Remove(this);
					}
					this._CallStackPattern.Entity = value;
					if ((value != null))
					{
						value.Crashes.Add(this);
						this._PatternId = value.id;
					}
					else
					{
						this._PatternId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CallStackPattern");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Buggs_Crashes(Buggs_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Crash = this;
		}
		
		private void detach_Buggs_Crashes(Buggs_Crash entity)
		{
			this.SendPropertyChanging();
			entity.Crash = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FunctionCalls")]
	public partial class FunctionCall : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Call;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCallChanging(string value);
    partial void OnCallChanged();
    #endregion
		
		public FunctionCall()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Call", DbType="VarChar(MAX)")]
		public string Call
		{
			get
			{
				return this._Call;
			}
			set
			{
				if ((this._Call != value))
				{
					this.OnCallChanging(value);
					this.SendPropertyChanging();
					this._Call = value;
					this.SendPropertyChanged("Call");
					this.OnCallChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserGroups")]
	public partial class UserGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<User> _Users;
		
		private EntitySet<Buggs_UserGroup> _Buggs_UserGroups;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserGroup()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._Buggs_UserGroups = new EntitySet<Buggs_UserGroup>(new Action<Buggs_UserGroup>(this.attach_Buggs_UserGroups), new Action<Buggs_UserGroup>(this.detach_Buggs_UserGroups));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_User", Storage="_Users", ThisKey="Id", OtherKey="UserGroupId")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserGroup_Buggs_UserGroup", Storage="_Buggs_UserGroups", ThisKey="Id", OtherKey="UserGroupId")]
		public EntitySet<Buggs_UserGroup> Buggs_UserGroups
		{
			get
			{
				return this._Buggs_UserGroups;
			}
			set
			{
				this._Buggs_UserGroups.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = null;
		}
		
		private void attach_Buggs_UserGroups(Buggs_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = this;
		}
		
		private void detach_Buggs_UserGroups(Buggs_UserGroup entity)
		{
			this.SendPropertyChanging();
			entity.UserGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersMapping")]
	public partial class UsersMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserEmail;
		
		private string _MachineId;
		
		private string _EpicAccountId;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnMachineIdChanging(string value);
    partial void OnMachineIdChanged();
    partial void OnEpicAccountIdChanging(string value);
    partial void OnEpicAccountIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public UsersMapping()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineId", DbType="NChar(32)")]
		public string MachineId
		{
			get
			{
				return this._MachineId;
			}
			set
			{
				if ((this._MachineId != value))
				{
					this.OnMachineIdChanging(value);
					this.SendPropertyChanging();
					this._MachineId = value;
					this.SendPropertyChanged("MachineId");
					this.OnMachineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EpicAccountId", DbType="NChar(32)")]
		public string EpicAccountId
		{
			get
			{
				return this._EpicAccountId;
			}
			set
			{
				if ((this._EpicAccountId != value))
				{
					this.OnEpicAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EpicAccountId = value;
					this.SendPropertyChanged("EpicAccountId");
					this.OnEpicAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(64)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallStackPatterns")]
	public partial class CallStackPattern : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Pattern;
		
		private EntitySet<Crash> _Crashes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnPatternChanging(string value);
    partial void OnPatternChanged();
    #endregion
		
		public CallStackPattern()
		{
			this._Crashes = new EntitySet<Crash>(new Action<Crash>(this.attach_Crashes), new Action<Crash>(this.detach_Crashes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pattern", DbType="VarChar(800)")]
		public string Pattern
		{
			get
			{
				return this._Pattern;
			}
			set
			{
				if ((this._Pattern != value))
				{
					this.OnPatternChanging(value);
					this.SendPropertyChanging();
					this._Pattern = value;
					this.SendPropertyChanged("Pattern");
					this.OnPatternChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallStackPattern_Crash", Storage="_Crashes", ThisKey="id", OtherKey="PatternId")]
		public EntitySet<Crash> Crashes
		{
			get
			{
				return this._Crashes;
			}
			set
			{
				this._Crashes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Crashes(Crash entity)
		{
			this.SendPropertyChanging();
			entity.CallStackPattern = this;
		}
		
		private void detach_Crashes(Crash entity)
		{
			this.SendPropertyChanging();
			entity.CallStackPattern = null;
		}
	}
}
#pragma warning restore 1591
